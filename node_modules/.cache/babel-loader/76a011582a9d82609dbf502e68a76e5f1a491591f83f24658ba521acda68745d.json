{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { initAwsUiVersions } from '@cloudscape-design/component-toolkit/internal';\nimport { PACKAGE_SOURCE, PACKAGE_VERSION } from '../environment';\n// these styles needed to be imported for every public component\nimport './styles.css.js';\ninitAwsUiVersions(PACKAGE_SOURCE, PACKAGE_VERSION);\nexport function getBaseProps(props) {\n  const baseProps = {};\n  Object.keys(props).forEach(prop => {\n    if (prop === 'id' || prop === 'className' || prop.match(/^data-/)) {\n      baseProps[prop] = props[prop];\n    }\n  });\n  return baseProps;\n}\nexport function getAnalyticsMetadataProps(props) {\n  return props === null || props === void 0 ? void 0 : props.__analyticsMetadata;\n}","map":{"version":3,"names":["initAwsUiVersions","PACKAGE_SOURCE","PACKAGE_VERSION","getBaseProps","props","baseProps","Object","keys","forEach","prop","match","getAnalyticsMetadataProps","__analyticsMetadata"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/internal/base-component/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { initAwsUiVersions } from '@cloudscape-design/component-toolkit/internal';\n\nimport { AnalyticsMetadata } from '../analytics/interfaces';\nimport { PACKAGE_SOURCE, PACKAGE_VERSION } from '../environment';\n\n// these styles needed to be imported for every public component\nimport './styles.css.js';\n\ninitAwsUiVersions(PACKAGE_SOURCE, PACKAGE_VERSION);\n\nexport interface BaseComponentProps {\n  /**\n   * Adds the specified classes to the root element of the component.\n   * @deprecated Custom CSS is not supported. For testing and other use cases, use [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes).\n   */\n  className?: string;\n  /**\n   * Adds the specified ID to the root element of the component.\n   * @deprecated The usage of the `id` attribute is reserved for internal use cases. For testing and other use cases,\n   * use [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes). If you must\n   * use the `id` attribute, consider setting it on a parent element instead.\n   */\n  id?: string;\n  // we also support data-* attributes, but they are always implicitly allowed by typescript\n  // http://www.typescriptlang.org/docs/handbook/jsx.html#attribute-type-checking\n  // \"Note: If an attribute name is not a valid JS identifier (like a data-* attribute), it is not considered to be an error\"\n}\n\nexport function getBaseProps(props: BaseComponentProps) {\n  const baseProps: Record<string, any> = {};\n  Object.keys(props).forEach(prop => {\n    if (prop === 'id' || prop === 'className' || prop.match(/^data-/)) {\n      baseProps[prop] = (props as Record<string, any>)[prop];\n    }\n  });\n  return baseProps as BaseComponentProps;\n}\n\nexport interface BasePropsWithAnalyticsMetadata {\n  __analyticsMetadata?: AnalyticsMetadata;\n}\n\nexport function getAnalyticsMetadataProps(props?: unknown) {\n  return (props as BasePropsWithAnalyticsMetadata | undefined)?.__analyticsMetadata;\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,iBAAiB,QAAQ,+CAA+C;AAGjF,SAASC,cAAc,EAAEC,eAAe,QAAQ,gBAAgB;AAEhE;AACA,OAAO,iBAAiB;AAExBF,iBAAiB,CAACC,cAAc,EAAEC,eAAe,CAAC;AAoBlD,OAAM,SAAUC,YAAYA,CAACC,KAAyB;EACpD,MAAMC,SAAS,GAAwB,EAAE;EACzCC,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,OAAO,CAACC,IAAI,IAAG;IAChC,IAAIA,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,WAAW,IAAIA,IAAI,CAACC,KAAK,CAAC,QAAQ,CAAC,EAAE;MACjEL,SAAS,CAACI,IAAI,CAAC,GAAIL,KAA6B,CAACK,IAAI,CAAC;;EAE1D,CAAC,CAAC;EACF,OAAOJ,SAA+B;AACxC;AAMA,OAAM,SAAUM,yBAAyBA,CAACP,KAAe;EACvD,OAAQA,KAAoD,aAApDA,KAAK,uBAALA,KAAK,CAAiDQ,mBAAmB;AACnF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}