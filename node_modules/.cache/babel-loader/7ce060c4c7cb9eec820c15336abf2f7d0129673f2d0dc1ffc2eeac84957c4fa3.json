{"ast":null,"code":"export function getSortedOptions({\n  options,\n  contentDisplay\n}) {\n  const optionsById = options.reduce((currentValue, option) => Object.assign(Object.assign({}, currentValue), {\n    [option.id]: option\n  }), {});\n  return contentDisplay.map(({\n    id,\n    visible\n  }) => Object.assign(Object.assign({}, optionsById[id]), {\n    visible\n  })).filter(Boolean);\n}","map":{"version":3,"names":["getSortedOptions","options","contentDisplay","optionsById","reduce","currentValue","option","Object","assign","id","map","visible","filter","Boolean"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/collection-preferences/content-display/utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CollectionPreferencesProps } from '../interfaces';\n\nexport interface OptionWithVisibility extends CollectionPreferencesProps.ContentDisplayOption {\n  visible?: boolean;\n}\n\nexport function getSortedOptions({\n  options,\n  contentDisplay,\n}: {\n  options: ReadonlyArray<CollectionPreferencesProps.ContentDisplayOption>;\n  contentDisplay: ReadonlyArray<CollectionPreferencesProps.ContentDisplayItem>;\n}): ReadonlyArray<OptionWithVisibility> {\n  const optionsById: Record<string, CollectionPreferencesProps.ContentDisplayOption> = options.reduce(\n    (currentValue, option) => ({ ...currentValue, [option.id]: option }),\n    {}\n  );\n  return contentDisplay\n    .map(({ id, visible }: CollectionPreferencesProps.ContentDisplayItem) => ({\n      ...optionsById[id],\n      visible,\n    }))\n    .filter(Boolean);\n}\n"],"mappings":"AAQA,OAAM,SAAUA,gBAAgBA,CAAC;EAC/BC,OAAO;EACPC;AAAc,CAIf;EACC,MAAMC,WAAW,GAAoEF,OAAO,CAACG,MAAM,CACjG,CAACC,YAAY,EAAEC,MAAM,KAAKC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAMH,YAAY;IAAE,CAACC,MAAM,CAACG,EAAE,GAAGH;EAAM,EAAG,EACpE,EAAE,CACH;EACD,OAAOJ,cAAc,CAClBQ,GAAG,CAAC,CAAC;IAAED,EAAE;IAAEE;EAAO,CAAiD,KAAKJ,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACpEL,WAAW,CAACM,EAAE,CAAC;IAClBE;EAAO,EACP,CAAC,CACFC,MAAM,CAACC,OAAO,CAAC;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}