{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport InternalAlert from '../alert/internal';\nimport InternalBox from '../box/internal';\nimport { InternalButton } from '../button/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport FocusLock from '../internal/components/focus-lock';\nimport LiveRegion from '../internal/components/live-region';\nimport InternalSpaceBetween from '../space-between/internal';\nimport Calendar from './calendar';\nimport ModeSwitcher from './mode-switcher';\nimport RelativeRangePicker from './relative-range';\nimport { getDefaultMode, joinAbsoluteValue, splitAbsoluteValue } from './utils';\nimport styles from './styles.css.js';\nexport const VALID_RANGE = {\n  valid: true\n};\nexport function DateRangePickerDropdown({\n  locale = '',\n  startOfWeek,\n  isDateEnabled,\n  dateDisabledReason,\n  isValidRange,\n  value,\n  onClear: clearValue,\n  onApply: applyValue,\n  onDropdownClose,\n  relativeOptions,\n  showClearButton,\n  isSingleGrid,\n  i18nStrings,\n  dateOnly,\n  timeInputFormat,\n  rangeSelectorMode,\n  ariaLabelledby,\n  ariaDescribedby,\n  customAbsoluteRangeControl\n}) {\n  const i18n = useInternalI18n('date-range-picker');\n  const [rangeSelectionMode, setRangeSelectionMode] = useState(getDefaultMode(value, relativeOptions, rangeSelectorMode));\n  const [selectedAbsoluteRange, setSelectedAbsoluteRange] = useState(() => splitAbsoluteValue((value === null || value === void 0 ? void 0 : value.type) === 'absolute' ? value : null));\n  const [selectedRelativeRange, setSelectedRelativeRange] = useState((value === null || value === void 0 ? void 0 : value.type) === 'relative' ? value : null);\n  const scrollableContainerRef = useRef(null);\n  const applyButtonRef = useRef(null);\n  const [applyClicked, setApplyClicked] = useState(false);\n  const [validationResult, setValidationResult] = useState(VALID_RANGE);\n  const closeDropdown = () => {\n    setApplyClicked(false);\n    onDropdownClose();\n  };\n  const onClear = () => {\n    closeDropdown();\n    clearValue();\n  };\n  const onApply = () => {\n    const newValue = rangeSelectionMode === 'relative' ? selectedRelativeRange : joinAbsoluteValue(selectedAbsoluteRange);\n    const newValidationResult = applyValue(newValue);\n    if (newValidationResult.valid === false) {\n      setApplyClicked(true);\n      setValidationResult(newValidationResult);\n    } else {\n      setApplyClicked(false);\n      closeDropdown();\n    }\n  };\n  useEffect(() => {\n    if (applyClicked) {\n      const visibleRange = rangeSelectionMode === 'relative' ? selectedRelativeRange : joinAbsoluteValue(selectedAbsoluteRange);\n      const newValidationResult = isValidRange(visibleRange);\n      setValidationResult(newValidationResult || VALID_RANGE);\n    }\n  }, [applyClicked, isValidRange, rangeSelectionMode, selectedRelativeRange, selectedAbsoluteRange, setValidationResult]);\n  useEffect(() => {\n    var _a;\n    return (_a = scrollableContainerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  }, [scrollableContainerRef]);\n  return React.createElement(React.Fragment, null, React.createElement(FocusLock, {\n    className: styles['focus-lock'],\n    autoFocus: true\n  }, React.createElement(\"div\", {\n    ref: scrollableContainerRef,\n    className: styles.dropdown,\n    tabIndex: 0,\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"aria-label\": i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaLabel,\n    \"aria-labelledby\": ariaLabelledby !== null && ariaLabelledby !== void 0 ? ariaLabelledby : i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby !== null && ariaDescribedby !== void 0 ? ariaDescribedby : i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaDescribedby\n  }, React.createElement(\"div\", {\n    className: clsx(styles['dropdown-content'], {\n      [styles['one-grid']]: isSingleGrid\n    })\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"l\"\n  }, React.createElement(InternalBox, {\n    padding: {\n      top: 'm',\n      horizontal: 'l'\n    }\n  }, React.createElement(InternalSpaceBetween, {\n    direction: \"vertical\",\n    size: \"s\"\n  }, rangeSelectorMode === 'default' && React.createElement(ModeSwitcher, {\n    mode: rangeSelectionMode,\n    onChange: mode => {\n      setRangeSelectionMode(mode);\n      setApplyClicked(false);\n      setValidationResult(VALID_RANGE);\n    },\n    i18nStrings: i18nStrings\n  }), rangeSelectionMode === 'absolute' && React.createElement(Calendar, {\n    value: selectedAbsoluteRange,\n    setValue: setSelectedAbsoluteRange,\n    locale: locale,\n    startOfWeek: startOfWeek,\n    isDateEnabled: isDateEnabled,\n    dateDisabledReason: dateDisabledReason,\n    i18nStrings: i18nStrings,\n    dateOnly: dateOnly,\n    timeInputFormat: timeInputFormat,\n    customAbsoluteRangeControl: customAbsoluteRangeControl\n  }), rangeSelectionMode === 'relative' && React.createElement(RelativeRangePicker, {\n    isSingleGrid: isSingleGrid,\n    options: relativeOptions,\n    dateOnly: dateOnly,\n    initialSelection: selectedRelativeRange,\n    onChange: range => setSelectedRelativeRange(range),\n    i18nStrings: i18nStrings\n  })), React.createElement(InternalBox, {\n    className: styles['validation-section'],\n    margin: !validationResult.valid ? {\n      top: 's'\n    } : undefined\n  }, !validationResult.valid && React.createElement(React.Fragment, null, React.createElement(InternalAlert, {\n    type: \"error\",\n    statusIconAriaLabel: i18n('i18nStrings.errorIconAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.errorIconAriaLabel)\n  }, React.createElement(\"span\", {\n    className: styles['validation-error']\n  }, validationResult.errorMessage)), React.createElement(LiveRegion, null, validationResult.errorMessage)))), React.createElement(\"div\", {\n    className: clsx(styles.footer, {\n      [styles['one-grid']]: isSingleGrid,\n      [styles['has-clear-button']]: showClearButton\n    })\n  }, showClearButton && React.createElement(\"div\", {\n    className: styles['footer-button-wrapper']\n  }, React.createElement(InternalButton, {\n    onClick: onClear,\n    className: styles['clear-button'],\n    variant: \"link\",\n    formAction: \"none\"\n  }, i18n('i18nStrings.clearButtonLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.clearButtonLabel))), React.createElement(\"div\", {\n    className: styles['footer-button-wrapper']\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"xs\",\n    direction: \"horizontal\"\n  }, React.createElement(InternalButton, {\n    onClick: closeDropdown,\n    className: styles['cancel-button'],\n    variant: \"link\",\n    formAction: \"none\"\n  }, i18n('i18nStrings.cancelButtonLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.cancelButtonLabel)), React.createElement(InternalButton, {\n    onClick: onApply,\n    className: styles['apply-button'],\n    ref: applyButtonRef,\n    formAction: \"none\"\n  }, i18n('i18nStrings.applyButtonLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.applyButtonLabel))))))))));\n}","map":{"version":3,"names":["React","useEffect","useRef","useState","clsx","InternalAlert","InternalBox","InternalButton","useInternalI18n","FocusLock","LiveRegion","InternalSpaceBetween","Calendar","ModeSwitcher","RelativeRangePicker","getDefaultMode","joinAbsoluteValue","splitAbsoluteValue","styles","VALID_RANGE","valid","DateRangePickerDropdown","locale","startOfWeek","isDateEnabled","dateDisabledReason","isValidRange","value","onClear","clearValue","onApply","applyValue","onDropdownClose","relativeOptions","showClearButton","isSingleGrid","i18nStrings","dateOnly","timeInputFormat","rangeSelectorMode","ariaLabelledby","ariaDescribedby","customAbsoluteRangeControl","i18n","rangeSelectionMode","setRangeSelectionMode","selectedAbsoluteRange","setSelectedAbsoluteRange","type","selectedRelativeRange","setSelectedRelativeRange","scrollableContainerRef","applyButtonRef","applyClicked","setApplyClicked","validationResult","setValidationResult","closeDropdown","newValue","newValidationResult","visibleRange","_a","current","focus","createElement","Fragment","className","autoFocus","ref","dropdown","tabIndex","role","ariaLabel","size","padding","top","horizontal","direction","mode","onChange","setValue","options","initialSelection","range","margin","undefined","statusIconAriaLabel","errorIconAriaLabel","errorMessage","footer","onClick","variant","formAction","clearButtonLabel","cancelButtonLabel","applyButtonLabel"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/date-range-picker/dropdown.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport InternalAlert from '../alert/internal';\nimport InternalBox from '../box/internal';\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport FocusLock from '../internal/components/focus-lock';\nimport LiveRegion from '../internal/components/live-region';\nimport InternalSpaceBetween from '../space-between/internal';\nimport Calendar from './calendar';\nimport { DateRangePickerProps } from './interfaces';\nimport ModeSwitcher from './mode-switcher';\nimport RelativeRangePicker from './relative-range';\nimport { getDefaultMode, joinAbsoluteValue, splitAbsoluteValue } from './utils';\n\nimport styles from './styles.css.js';\n\nexport const VALID_RANGE: DateRangePickerProps.ValidRangeResult = { valid: true };\n\nexport interface DateRangePickerDropdownProps\n  extends Pick<\n    Required<DateRangePickerProps>,\n    | 'locale'\n    | 'isDateEnabled'\n    | 'dateDisabledReason'\n    | 'isValidRange'\n    | 'value'\n    | 'relativeOptions'\n    | 'showClearButton'\n    | 'dateOnly'\n    | 'timeInputFormat'\n    | 'rangeSelectorMode'\n  > {\n  onClear: () => void;\n  onApply: (value: null | DateRangePickerProps.Value) => DateRangePickerProps.ValidationResult;\n  startOfWeek: number | undefined;\n  onDropdownClose: () => void;\n  isSingleGrid: boolean;\n  i18nStrings?: DateRangePickerProps.I18nStrings;\n\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n  customAbsoluteRangeControl: DateRangePickerProps.AbsoluteRangeControl | undefined;\n}\n\nexport function DateRangePickerDropdown({\n  locale = '',\n  startOfWeek,\n  isDateEnabled,\n  dateDisabledReason,\n  isValidRange,\n  value,\n  onClear: clearValue,\n  onApply: applyValue,\n  onDropdownClose,\n  relativeOptions,\n  showClearButton,\n  isSingleGrid,\n  i18nStrings,\n  dateOnly,\n  timeInputFormat,\n  rangeSelectorMode,\n  ariaLabelledby,\n  ariaDescribedby,\n  customAbsoluteRangeControl,\n}: DateRangePickerDropdownProps) {\n  const i18n = useInternalI18n('date-range-picker');\n\n  const [rangeSelectionMode, setRangeSelectionMode] = useState<'absolute' | 'relative'>(\n    getDefaultMode(value, relativeOptions, rangeSelectorMode)\n  );\n\n  const [selectedAbsoluteRange, setSelectedAbsoluteRange] = useState<DateRangePickerProps.PendingAbsoluteValue>(() =>\n    splitAbsoluteValue(value?.type === 'absolute' ? value : null)\n  );\n\n  const [selectedRelativeRange, setSelectedRelativeRange] = useState<DateRangePickerProps.RelativeValue | null>(\n    value?.type === 'relative' ? value : null\n  );\n\n  const scrollableContainerRef = useRef<HTMLDivElement | null>(null);\n  const applyButtonRef = useRef<ButtonProps.Ref>(null);\n\n  const [applyClicked, setApplyClicked] = useState<boolean>(false);\n\n  const [validationResult, setValidationResult] = useState<\n    DateRangePickerProps.ValidRangeResult | DateRangePickerProps.InvalidRangeResult\n  >(VALID_RANGE);\n\n  const closeDropdown = () => {\n    setApplyClicked(false);\n    onDropdownClose();\n  };\n\n  const onClear = () => {\n    closeDropdown();\n    clearValue();\n  };\n\n  const onApply = () => {\n    const newValue =\n      rangeSelectionMode === 'relative' ? selectedRelativeRange : joinAbsoluteValue(selectedAbsoluteRange);\n    const newValidationResult = applyValue(newValue);\n    if (newValidationResult.valid === false) {\n      setApplyClicked(true);\n      setValidationResult(newValidationResult);\n    } else {\n      setApplyClicked(false);\n      closeDropdown();\n    }\n  };\n\n  useEffect(() => {\n    if (applyClicked) {\n      const visibleRange =\n        rangeSelectionMode === 'relative' ? selectedRelativeRange : joinAbsoluteValue(selectedAbsoluteRange);\n\n      const newValidationResult = isValidRange(visibleRange);\n      setValidationResult(newValidationResult || VALID_RANGE);\n    }\n  }, [\n    applyClicked,\n    isValidRange,\n    rangeSelectionMode,\n    selectedRelativeRange,\n    selectedAbsoluteRange,\n    setValidationResult,\n  ]);\n\n  useEffect(() => scrollableContainerRef.current?.focus(), [scrollableContainerRef]);\n\n  return (\n    <>\n      <FocusLock className={styles['focus-lock']} autoFocus={true}>\n        <div\n          ref={scrollableContainerRef}\n          className={styles.dropdown}\n          tabIndex={0}\n          role=\"dialog\"\n          aria-modal=\"true\"\n          aria-label={i18nStrings?.ariaLabel}\n          aria-labelledby={ariaLabelledby ?? i18nStrings?.ariaLabelledby}\n          aria-describedby={ariaDescribedby ?? i18nStrings?.ariaDescribedby}\n        >\n          <div\n            className={clsx(styles['dropdown-content'], {\n              [styles['one-grid']]: isSingleGrid,\n            })}\n          >\n            <InternalSpaceBetween size=\"l\">\n              <InternalBox padding={{ top: 'm', horizontal: 'l' }}>\n                <InternalSpaceBetween direction=\"vertical\" size=\"s\">\n                  {rangeSelectorMode === 'default' && (\n                    <ModeSwitcher\n                      mode={rangeSelectionMode}\n                      onChange={(mode: 'absolute' | 'relative') => {\n                        setRangeSelectionMode(mode);\n                        setApplyClicked(false);\n                        setValidationResult(VALID_RANGE);\n                      }}\n                      i18nStrings={i18nStrings}\n                    />\n                  )}\n\n                  {rangeSelectionMode === 'absolute' && (\n                    <Calendar\n                      value={selectedAbsoluteRange}\n                      setValue={setSelectedAbsoluteRange}\n                      locale={locale}\n                      startOfWeek={startOfWeek}\n                      isDateEnabled={isDateEnabled}\n                      dateDisabledReason={dateDisabledReason}\n                      i18nStrings={i18nStrings}\n                      dateOnly={dateOnly}\n                      timeInputFormat={timeInputFormat}\n                      customAbsoluteRangeControl={customAbsoluteRangeControl}\n                    />\n                  )}\n\n                  {rangeSelectionMode === 'relative' && (\n                    <RelativeRangePicker\n                      isSingleGrid={isSingleGrid}\n                      options={relativeOptions}\n                      dateOnly={dateOnly}\n                      initialSelection={selectedRelativeRange}\n                      onChange={range => setSelectedRelativeRange(range)}\n                      i18nStrings={i18nStrings}\n                    />\n                  )}\n                </InternalSpaceBetween>\n\n                <InternalBox\n                  className={styles['validation-section']}\n                  margin={!validationResult.valid ? { top: 's' } : undefined}\n                >\n                  {!validationResult.valid && (\n                    <>\n                      <InternalAlert\n                        type=\"error\"\n                        statusIconAriaLabel={i18n('i18nStrings.errorIconAriaLabel', i18nStrings?.errorIconAriaLabel)}\n                      >\n                        <span className={styles['validation-error']}>{validationResult.errorMessage}</span>\n                      </InternalAlert>\n                      <LiveRegion>{validationResult.errorMessage}</LiveRegion>\n                    </>\n                  )}\n                </InternalBox>\n              </InternalBox>\n\n              <div\n                className={clsx(styles.footer, {\n                  [styles['one-grid']]: isSingleGrid,\n                  [styles['has-clear-button']]: showClearButton,\n                })}\n              >\n                {showClearButton && (\n                  <div className={styles['footer-button-wrapper']}>\n                    <InternalButton\n                      onClick={onClear}\n                      className={styles['clear-button']}\n                      variant=\"link\"\n                      formAction=\"none\"\n                    >\n                      {i18n('i18nStrings.clearButtonLabel', i18nStrings?.clearButtonLabel)}\n                    </InternalButton>\n                  </div>\n                )}\n                <div className={styles['footer-button-wrapper']}>\n                  <InternalSpaceBetween size=\"xs\" direction=\"horizontal\">\n                    <InternalButton\n                      onClick={closeDropdown}\n                      className={styles['cancel-button']}\n                      variant=\"link\"\n                      formAction=\"none\"\n                    >\n                      {i18n('i18nStrings.cancelButtonLabel', i18nStrings?.cancelButtonLabel)}\n                    </InternalButton>\n\n                    <InternalButton\n                      onClick={onApply}\n                      className={styles['apply-button']}\n                      ref={applyButtonRef}\n                      formAction=\"none\"\n                    >\n                      {i18n('i18nStrings.applyButtonLabel', i18nStrings?.applyButtonLabel)}\n                    </InternalButton>\n                  </InternalSpaceBetween>\n                </div>\n              </div>\n            </InternalSpaceBetween>\n          </div>\n        </div>\n      </FocusLock>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}