{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport clsx from 'clsx';\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\nimport { getLogicalBoundingClientRect } from '@cloudscape-design/component-toolkit/internal';\nimport { fireNonCancelableEvent } from '../../events';\nimport customCssProps from '../../generated/custom-css-properties';\nimport { useMergeRefs } from '../../hooks/use-merge-refs';\nimport { useMobile } from '../../hooks/use-mobile';\nimport { usePortalModeClasses } from '../../hooks/use-portal-mode-classes';\nimport { useUniqueId } from '../../hooks/use-unique-id/index.js';\nimport { useVisualRefresh } from '../../hooks/use-visual-mode';\nimport { nodeBelongs } from '../../utils/node-belongs';\nimport { getFirstFocusable, getLastFocusable } from '../focus-lock/utils.js';\nimport TabTrap from '../tab-trap/index.js';\nimport { Transition } from '../transition';\nimport { DropdownContextProvider } from './context';\nimport { calculatePosition, defaultMaxDropdownWidth, hasEnoughSpaceToStretchBeyondTriggerWidth } from './dropdown-fit-handler';\nimport styles from './styles.css.js';\nconst DropdownContainer = ({\n  children,\n  renderWithPortal = false,\n  id,\n  referrerId,\n  open\n}) => {\n  if (renderWithPortal) {\n    if (open) {\n      return createPortal(React.createElement(\"div\", {\n        id: id,\n        \"data-awsui-referrer-id\": referrerId\n      }, children), document.body);\n    } else {\n      return null;\n    }\n  } else {\n    return React.createElement(React.Fragment, null, children);\n  }\n};\nconst TransitionContent = ({\n  state,\n  transitionRef,\n  dropdownClasses,\n  stretchWidth,\n  interior,\n  isRefresh,\n  dropdownRef,\n  verticalContainerRef,\n  expandToViewport,\n  stretchBeyondTriggerWidth,\n  header,\n  children,\n  footer,\n  position,\n  open,\n  onMouseDown,\n  id,\n  role,\n  ariaLabelledby,\n  ariaDescribedby\n}) => {\n  const contentRef = useMergeRefs(dropdownRef, transitionRef);\n  return React.createElement(\"div\", {\n    className: clsx(styles.dropdown, dropdownClasses, {\n      [styles.open]: open,\n      [styles['with-limited-width']]: !stretchWidth,\n      [styles['hide-block-border']]: stretchWidth,\n      [styles.interior]: interior,\n      [styles.refresh]: isRefresh,\n      [styles['use-portal']]: expandToViewport && !interior,\n      [styles['stretch-beyond-trigger-width']]: stretchBeyondTriggerWidth\n    }),\n    ref: contentRef,\n    id: id,\n    role: role,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    \"data-open\": open,\n    \"data-animating\": state !== 'exited',\n    \"aria-hidden\": !open,\n    style: stretchBeyondTriggerWidth ? {\n      [customCssProps.dropdownDefaultMaxWidth]: `${defaultMaxDropdownWidth}px`\n    } : {},\n    onMouseDown: onMouseDown\n  }, React.createElement(\"div\", {\n    className: clsx(styles['dropdown-content-wrapper'], !header && !children && styles['is-empty'], isRefresh && styles.refresh)\n  }, React.createElement(\"div\", {\n    ref: verticalContainerRef,\n    className: styles['dropdown-content']\n  }, React.createElement(DropdownContextProvider, {\n    position: position\n  }, header, children, footer))));\n};\nconst Dropdown = ({\n  children,\n  trigger,\n  open,\n  onDropdownClose,\n  onMouseDown,\n  header,\n  footer,\n  dropdownId,\n  stretchTriggerHeight = false,\n  stretchWidth = true,\n  stretchHeight = false,\n  stretchToTriggerWidth = true,\n  stretchBeyondTriggerWidth = false,\n  expandToViewport = false,\n  preferCenter = false,\n  interior = false,\n  minWidth,\n  scrollable = true,\n  loopFocus = expandToViewport,\n  onFocus,\n  onBlur,\n  contentKey,\n  dropdownContentId,\n  dropdownContentRole,\n  ariaLabelledby,\n  ariaDescribedby\n}) => {\n  const wrapperRef = useRef(null);\n  const triggerRef = useRef(null);\n  const dropdownRef = useRef(null);\n  const dropdownContainerRef = useRef(null);\n  const verticalContainerRef = useRef(null);\n  // To keep track of the initial position (drop up/down) which is kept the same during fixed repositioning\n  const fixedPosition = useRef(null);\n  const isRefresh = useVisualRefresh();\n  const dropdownClasses = usePortalModeClasses(triggerRef);\n  const [position, setPosition] = useState('bottom-right');\n  const isMobile = useMobile();\n  const setDropdownPosition = (position, triggerBox, target, verticalContainer) => {\n    const entireWidth = !interior && stretchWidth;\n    if (!stretchWidth) {\n      // 1px offset for dropdowns where the dropdown itself needs a border, rather than on the items\n      verticalContainer.style.maxBlockSize = `${parseInt(position.blockSize) + 1}px`;\n    } else {\n      verticalContainer.style.maxBlockSize = position.blockSize;\n    }\n    if (entireWidth && !expandToViewport) {\n      if (stretchToTriggerWidth) {\n        target.classList.add(styles['occupy-entire-width']);\n      }\n    } else {\n      target.style.inlineSize = position.inlineSize;\n    }\n    // Using styles for main dropdown to adjust its position as preferred alternative\n    if (position.dropBlockStart && !interior) {\n      target.classList.add(styles['dropdown-drop-up']);\n      if (!expandToViewport) {\n        target.style.insetBlockEnd = '100%';\n      }\n    } else {\n      target.classList.remove(styles['dropdown-drop-up']);\n    }\n    target.classList.add(position.dropInlineStart ? styles['dropdown-drop-left'] : styles['dropdown-drop-right']);\n    if (position.insetInlineStart && position.insetInlineStart !== 'auto') {\n      target.style.insetInlineStart = position.insetInlineStart;\n    }\n    // Position normal overflow dropdowns with fixed positioning relative to viewport\n    if (expandToViewport && !interior) {\n      target.style.position = 'fixed';\n      if (position.dropBlockStart) {\n        target.style.insetBlockEnd = `calc(100% - ${triggerBox.top}px)`;\n      } else {\n        target.style.insetBlockStart = `${triggerBox.bottom}px`;\n      }\n      if (position.dropInlineStart) {\n        target.style.insetInlineStart = `calc(${triggerBox.right}px - ${position.inlineSize})`;\n      } else {\n        target.style.insetInlineStart = `${triggerBox.left}px`;\n      }\n      // Keep track of the initial dropdown position and direction.\n      // Dropdown direction doesn't need to change as the user scrolls, just needs to stay attached to the trigger.\n      fixedPosition.current = position;\n      return;\n    }\n    // For an interior dropdown (the fly out) we need exact values for positioning\n    // and classes are not enough\n    // usage of relative position is impossible due to overwrite of overflow-x\n    if (interior && isInteriorPosition(position)) {\n      if (position.dropBlockStart) {\n        target.style.insetBlockEnd = position.insetBlockEnd;\n      } else {\n        target.style.insetBlockStart = position.insetBlockStart;\n      }\n      target.style.insetInlineStart = position.insetInlineStart;\n    }\n    if (position.dropBlockStart && position.dropInlineStart) {\n      setPosition('top-left');\n    } else if (position.dropBlockStart) {\n      setPosition('top-right');\n    } else if (position.dropInlineStart) {\n      setPosition('bottom-left');\n    } else {\n      setPosition('bottom-right');\n    }\n  };\n  const isOutsideDropdown = element => (!wrapperRef.current || !nodeBelongs(wrapperRef.current, element)) && (!dropdownContainerRef.current || !nodeBelongs(dropdownContainerRef.current, element));\n  const focusHandler = event => {\n    if (!event.relatedTarget || isOutsideDropdown(event.relatedTarget)) {\n      fireNonCancelableEvent(onFocus, event);\n    }\n  };\n  const blurHandler = event => {\n    if (!event.relatedTarget || isOutsideDropdown(event.relatedTarget)) {\n      fireNonCancelableEvent(onBlur, event);\n    }\n  };\n  // Prevent the dropdown width from stretching beyond the trigger width\n  // if that is going to cause the dropdown to be cropped because of overflow\n  const fixStretching = () => {\n    const classNameToRemove = styles['stretch-beyond-trigger-width'];\n    if (open && stretchBeyondTriggerWidth && dropdownRef.current && triggerRef.current && dropdownRef.current.classList.contains(classNameToRemove) && !hasEnoughSpaceToStretchBeyondTriggerWidth({\n      triggerElement: triggerRef.current,\n      dropdownElement: dropdownRef.current,\n      desiredMinWidth: minWidth,\n      expandToViewport,\n      stretchWidth,\n      stretchHeight,\n      isMobile\n    })) {\n      dropdownRef.current.classList.remove(classNameToRemove);\n    }\n  };\n  useResizeObserver(() => dropdownRef.current, fixStretching);\n  useLayoutEffect(() => {\n    const onDropdownOpen = () => {\n      if (open && dropdownRef.current && triggerRef.current && verticalContainerRef.current) {\n        // calculate scroll width only for dropdowns that has a scrollbar and ignore it for date picker components\n        if (scrollable) {\n          dropdownRef.current.classList.add(styles.nowrap);\n        }\n        setDropdownPosition(...calculatePosition(dropdownRef.current, triggerRef.current, verticalContainerRef.current, interior, expandToViewport, preferCenter, stretchWidth, stretchHeight, isMobile, minWidth, stretchBeyondTriggerWidth), dropdownRef.current, verticalContainerRef.current);\n        if (scrollable) {\n          dropdownRef.current.classList.remove(styles.nowrap);\n        }\n      }\n    };\n    onDropdownOpen();\n    if (open) {\n      // window may scroll when dropdown opens, for example when soft keyboard shows up\n      window.addEventListener('scroll', onDropdownOpen);\n      // only listen to window scroll within very short time after the dropdown opens\n      // do not want to interfere dropdown position on scroll afterwards\n      const timeoutId = setTimeout(() => {\n        window.removeEventListener('scroll', onDropdownOpen);\n      }, 500);\n      return () => {\n        clearTimeout(timeoutId);\n        window.removeEventListener('scroll', onDropdownOpen);\n      };\n    }\n    // See AWSUI-13040\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, dropdownRef, triggerRef, verticalContainerRef, interior, stretchWidth, isMobile, contentKey]);\n  // subscribe to outside click\n  useEffect(() => {\n    if (!open) {\n      return;\n    }\n    const clickListener = e => {\n      if (!nodeBelongs(dropdownRef.current, e.target) && !nodeBelongs(triggerRef.current, e.target)) {\n        fireNonCancelableEvent(onDropdownClose);\n      }\n    };\n    window.addEventListener('click', clickListener, true);\n    return () => {\n      window.removeEventListener('click', clickListener, true);\n    };\n  }, [open, onDropdownClose]);\n  // sync dropdown position on scroll and resize\n  useLayoutEffect(() => {\n    if (!expandToViewport || !open) {\n      return;\n    }\n    const updateDropdownPosition = () => {\n      if (triggerRef.current && dropdownRef.current && verticalContainerRef.current) {\n        const triggerRect = getLogicalBoundingClientRect(triggerRef.current);\n        const target = dropdownRef.current;\n        if (fixedPosition.current) {\n          if (fixedPosition.current.dropBlockStart) {\n            dropdownRef.current.style.insetBlockEnd = `calc(100% - ${triggerRect.insetBlockStart}px)`;\n          } else {\n            target.style.insetBlockStart = `${triggerRect.insetBlockEnd}px`;\n          }\n          if (fixedPosition.current.dropInlineStart) {\n            target.style.insetInlineStart = `calc(${triggerRect.insetInlineEnd}px - ${fixedPosition.current.inlineSize})`;\n          } else {\n            target.style.insetInlineStart = `${triggerRect.insetInlineStart}px`;\n          }\n        }\n      }\n    };\n    updateDropdownPosition();\n    window.addEventListener('scroll', updateDropdownPosition, true);\n    window.addEventListener('resize', updateDropdownPosition, true);\n    return () => {\n      window.removeEventListener('scroll', updateDropdownPosition, true);\n      window.removeEventListener('resize', updateDropdownPosition, true);\n    };\n  }, [open, expandToViewport]);\n  const referrerId = useUniqueId();\n  return React.createElement(\"div\", {\n    className: clsx(styles.root, interior && styles.interior, stretchTriggerHeight && styles['stretch-trigger-height']),\n    ref: wrapperRef,\n    onFocus: focusHandler,\n    onBlur: blurHandler\n  }, React.createElement(\"div\", {\n    id: referrerId,\n    className: clsx(stretchTriggerHeight && styles['stretch-trigger-height']),\n    ref: triggerRef\n  }, trigger), React.createElement(TabTrap, {\n    focusNextCallback: () => {\n      var _a;\n      return dropdownRef.current && ((_a = getFirstFocusable(dropdownRef.current)) === null || _a === void 0 ? void 0 : _a.focus());\n    },\n    disabled: !open || !loopFocus\n  }), React.createElement(DropdownContainer, {\n    renderWithPortal: expandToViewport && !interior,\n    id: dropdownId,\n    referrerId: referrerId,\n    open: open\n  }, React.createElement(Transition, {\n    in: open !== null && open !== void 0 ? open : false,\n    exit: false\n  }, (state, ref) => React.createElement(\"div\", {\n    ref: dropdownContainerRef\n  }, React.createElement(TabTrap, {\n    focusNextCallback: () => {\n      var _a;\n      return triggerRef.current && ((_a = getLastFocusable(triggerRef.current)) === null || _a === void 0 ? void 0 : _a.focus());\n    },\n    disabled: !open || !loopFocus\n  }), React.createElement(TransitionContent, {\n    state: state,\n    transitionRef: ref,\n    dropdownClasses: dropdownClasses,\n    open: open,\n    stretchWidth: stretchWidth,\n    interior: interior,\n    header: header,\n    expandToViewport: expandToViewport,\n    stretchBeyondTriggerWidth: stretchBeyondTriggerWidth,\n    footer: footer,\n    onMouseDown: onMouseDown,\n    isRefresh: isRefresh,\n    dropdownRef: dropdownRef,\n    verticalContainerRef: verticalContainerRef,\n    position: position,\n    id: dropdownContentId,\n    role: dropdownContentRole,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescribedby: ariaDescribedby\n  }, children), React.createElement(TabTrap, {\n    focusNextCallback: () => {\n      var _a;\n      return triggerRef.current && ((_a = getFirstFocusable(triggerRef.current)) === null || _a === void 0 ? void 0 : _a.focus());\n    },\n    disabled: !open || !loopFocus\n  })))));\n};\nconst isInteriorPosition = position => position.insetBlockEnd !== undefined;\nexport default Dropdown;","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useRef","useState","createPortal","clsx","useResizeObserver","getLogicalBoundingClientRect","fireNonCancelableEvent","customCssProps","useMergeRefs","useMobile","usePortalModeClasses","useUniqueId","useVisualRefresh","nodeBelongs","getFirstFocusable","getLastFocusable","TabTrap","Transition","DropdownContextProvider","calculatePosition","defaultMaxDropdownWidth","hasEnoughSpaceToStretchBeyondTriggerWidth","styles","DropdownContainer","children","renderWithPortal","id","referrerId","open","createElement","document","body","Fragment","TransitionContent","state","transitionRef","dropdownClasses","stretchWidth","interior","isRefresh","dropdownRef","verticalContainerRef","expandToViewport","stretchBeyondTriggerWidth","header","footer","position","onMouseDown","role","ariaLabelledby","ariaDescribedby","contentRef","className","dropdown","refresh","ref","style","dropdownDefaultMaxWidth","Dropdown","trigger","onDropdownClose","dropdownId","stretchTriggerHeight","stretchHeight","stretchToTriggerWidth","preferCenter","minWidth","scrollable","loopFocus","onFocus","onBlur","contentKey","dropdownContentId","dropdownContentRole","wrapperRef","triggerRef","dropdownContainerRef","fixedPosition","setPosition","isMobile","setDropdownPosition","triggerBox","target","verticalContainer","entireWidth","maxBlockSize","parseInt","blockSize","classList","add","inlineSize","dropBlockStart","insetBlockEnd","remove","dropInlineStart","insetInlineStart","top","insetBlockStart","bottom","right","left","current","isInteriorPosition","isOutsideDropdown","element","focusHandler","event","relatedTarget","blurHandler","fixStretching","classNameToRemove","contains","triggerElement","dropdownElement","desiredMinWidth","onDropdownOpen","nowrap","window","addEventListener","timeoutId","setTimeout","removeEventListener","clearTimeout","clickListener","e","updateDropdownPosition","triggerRect","insetInlineEnd","root","focusNextCallback","_a","focus","disabled","in","exit","undefined"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/internal/components/dropdown/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport clsx from 'clsx';\n\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\nimport { getLogicalBoundingClientRect } from '@cloudscape-design/component-toolkit/internal';\n\nimport { fireNonCancelableEvent } from '../../events';\nimport customCssProps from '../../generated/custom-css-properties';\nimport { useMergeRefs } from '../../hooks/use-merge-refs';\nimport { useMobile } from '../../hooks/use-mobile';\nimport { usePortalModeClasses } from '../../hooks/use-portal-mode-classes';\nimport { useUniqueId } from '../../hooks/use-unique-id/index.js';\nimport { useVisualRefresh } from '../../hooks/use-visual-mode';\nimport { nodeBelongs } from '../../utils/node-belongs';\nimport { getFirstFocusable, getLastFocusable } from '../focus-lock/utils.js';\nimport TabTrap from '../tab-trap/index.js';\nimport { Transition, TransitionStatus } from '../transition';\nimport { DropdownContextProvider, DropdownContextProviderProps } from './context';\nimport {\n  calculatePosition,\n  defaultMaxDropdownWidth,\n  DropdownPosition,\n  hasEnoughSpaceToStretchBeyondTriggerWidth,\n  InteriorDropdownPosition,\n} from './dropdown-fit-handler';\nimport { DropdownProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\ninterface DropdownContainerProps {\n  children?: React.ReactNode;\n  renderWithPortal?: boolean;\n  id?: string;\n  referrerId?: string;\n  open?: boolean;\n}\n\nconst DropdownContainer = ({ children, renderWithPortal = false, id, referrerId, open }: DropdownContainerProps) => {\n  if (renderWithPortal) {\n    if (open) {\n      return createPortal(\n        <div id={id} data-awsui-referrer-id={referrerId}>\n          {children}\n        </div>,\n        document.body\n      );\n    } else {\n      return null;\n    }\n  } else {\n    return <>{children}</>;\n  }\n};\n\ninterface TransitionContentProps {\n  state: TransitionStatus;\n  transitionRef: React.MutableRefObject<any>;\n  dropdownClasses: string;\n  stretchWidth: boolean;\n  interior: boolean;\n  isRefresh: boolean;\n  dropdownRef: React.RefObject<HTMLDivElement>;\n  verticalContainerRef: React.RefObject<HTMLDivElement>;\n  expandToViewport?: boolean;\n  stretchBeyondTriggerWidth?: boolean;\n  header?: React.ReactNode;\n  children?: React.ReactNode;\n  footer?: React.ReactNode;\n  position?: DropdownContextProviderProps['position'];\n  open?: boolean;\n  onMouseDown?: React.MouseEventHandler<Element>;\n  id?: string;\n  role?: string;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n}\n\nconst TransitionContent = ({\n  state,\n  transitionRef,\n  dropdownClasses,\n  stretchWidth,\n  interior,\n  isRefresh,\n  dropdownRef,\n  verticalContainerRef,\n  expandToViewport,\n  stretchBeyondTriggerWidth,\n  header,\n  children,\n  footer,\n  position,\n  open,\n  onMouseDown,\n  id,\n  role,\n  ariaLabelledby,\n  ariaDescribedby,\n}: TransitionContentProps) => {\n  const contentRef = useMergeRefs(dropdownRef, transitionRef);\n  return (\n    <div\n      className={clsx(styles.dropdown, dropdownClasses, {\n        [styles.open]: open,\n        [styles['with-limited-width']]: !stretchWidth,\n        [styles['hide-block-border']]: stretchWidth,\n        [styles.interior]: interior,\n        [styles.refresh]: isRefresh,\n        [styles['use-portal']]: expandToViewport && !interior,\n        [styles['stretch-beyond-trigger-width']]: stretchBeyondTriggerWidth,\n      })}\n      ref={contentRef}\n      id={id}\n      role={role}\n      aria-labelledby={ariaLabelledby}\n      aria-describedby={ariaDescribedby}\n      data-open={open}\n      data-animating={state !== 'exited'}\n      aria-hidden={!open}\n      style={\n        stretchBeyondTriggerWidth ? { [customCssProps.dropdownDefaultMaxWidth]: `${defaultMaxDropdownWidth}px` } : {}\n      }\n      onMouseDown={onMouseDown}\n    >\n      <div\n        className={clsx(\n          styles['dropdown-content-wrapper'],\n          !header && !children && styles['is-empty'],\n          isRefresh && styles.refresh\n        )}\n      >\n        <div ref={verticalContainerRef} className={styles['dropdown-content']}>\n          <DropdownContextProvider position={position}>\n            {header}\n            {children}\n            {footer}\n          </DropdownContextProvider>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Dropdown = ({\n  children,\n  trigger,\n  open,\n  onDropdownClose,\n  onMouseDown,\n  header,\n  footer,\n  dropdownId,\n  stretchTriggerHeight = false,\n  stretchWidth = true,\n  stretchHeight = false,\n  stretchToTriggerWidth = true,\n  stretchBeyondTriggerWidth = false,\n  expandToViewport = false,\n  preferCenter = false,\n  interior = false,\n  minWidth,\n  scrollable = true,\n  loopFocus = expandToViewport,\n  onFocus,\n  onBlur,\n  contentKey,\n  dropdownContentId,\n  dropdownContentRole,\n  ariaLabelledby,\n  ariaDescribedby,\n}: DropdownProps) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n  const triggerRef = useRef<HTMLDivElement | null>(null);\n  const dropdownRef = useRef<HTMLDivElement | null>(null);\n  const dropdownContainerRef = useRef<HTMLDivElement | null>(null);\n  const verticalContainerRef = useRef<HTMLDivElement>(null);\n  // To keep track of the initial position (drop up/down) which is kept the same during fixed repositioning\n  const fixedPosition = useRef<DropdownPosition | null>(null);\n\n  const isRefresh = useVisualRefresh();\n\n  const dropdownClasses = usePortalModeClasses(triggerRef);\n  const [position, setPosition] = useState<DropdownContextProviderProps['position']>('bottom-right');\n\n  const isMobile = useMobile();\n\n  const setDropdownPosition = (\n    position: DropdownPosition | InteriorDropdownPosition,\n    triggerBox: DOMRect,\n    target: HTMLDivElement,\n    verticalContainer: HTMLDivElement\n  ) => {\n    const entireWidth = !interior && stretchWidth;\n    if (!stretchWidth) {\n      // 1px offset for dropdowns where the dropdown itself needs a border, rather than on the items\n      verticalContainer.style.maxBlockSize = `${parseInt(position.blockSize) + 1}px`;\n    } else {\n      verticalContainer.style.maxBlockSize = position.blockSize;\n    }\n\n    if (entireWidth && !expandToViewport) {\n      if (stretchToTriggerWidth) {\n        target.classList.add(styles['occupy-entire-width']);\n      }\n    } else {\n      target.style.inlineSize = position.inlineSize;\n    }\n\n    // Using styles for main dropdown to adjust its position as preferred alternative\n    if (position.dropBlockStart && !interior) {\n      target.classList.add(styles['dropdown-drop-up']);\n      if (!expandToViewport) {\n        target.style.insetBlockEnd = '100%';\n      }\n    } else {\n      target.classList.remove(styles['dropdown-drop-up']);\n    }\n    target.classList.add(position.dropInlineStart ? styles['dropdown-drop-left'] : styles['dropdown-drop-right']);\n\n    if (position.insetInlineStart && position.insetInlineStart !== 'auto') {\n      target.style.insetInlineStart = position.insetInlineStart;\n    }\n\n    // Position normal overflow dropdowns with fixed positioning relative to viewport\n    if (expandToViewport && !interior) {\n      target.style.position = 'fixed';\n      if (position.dropBlockStart) {\n        target.style.insetBlockEnd = `calc(100% - ${triggerBox.top}px)`;\n      } else {\n        target.style.insetBlockStart = `${triggerBox.bottom}px`;\n      }\n      if (position.dropInlineStart) {\n        target.style.insetInlineStart = `calc(${triggerBox.right}px - ${position.inlineSize})`;\n      } else {\n        target.style.insetInlineStart = `${triggerBox.left}px`;\n      }\n      // Keep track of the initial dropdown position and direction.\n      // Dropdown direction doesn't need to change as the user scrolls, just needs to stay attached to the trigger.\n      fixedPosition.current = position;\n      return;\n    }\n\n    // For an interior dropdown (the fly out) we need exact values for positioning\n    // and classes are not enough\n    // usage of relative position is impossible due to overwrite of overflow-x\n    if (interior && isInteriorPosition(position)) {\n      if (position.dropBlockStart) {\n        target.style.insetBlockEnd = position.insetBlockEnd;\n      } else {\n        target.style.insetBlockStart = position.insetBlockStart;\n      }\n      target.style.insetInlineStart = position.insetInlineStart;\n    }\n\n    if (position.dropBlockStart && position.dropInlineStart) {\n      setPosition('top-left');\n    } else if (position.dropBlockStart) {\n      setPosition('top-right');\n    } else if (position.dropInlineStart) {\n      setPosition('bottom-left');\n    } else {\n      setPosition('bottom-right');\n    }\n  };\n\n  const isOutsideDropdown = (element: Element) =>\n    (!wrapperRef.current || !nodeBelongs(wrapperRef.current, element)) &&\n    (!dropdownContainerRef.current || !nodeBelongs(dropdownContainerRef.current, element));\n\n  const focusHandler = (event: React.FocusEvent) => {\n    if (!event.relatedTarget || isOutsideDropdown(event.relatedTarget)) {\n      fireNonCancelableEvent(onFocus, event);\n    }\n  };\n\n  const blurHandler = (event: React.FocusEvent) => {\n    if (!event.relatedTarget || isOutsideDropdown(event.relatedTarget)) {\n      fireNonCancelableEvent(onBlur, event);\n    }\n  };\n\n  // Prevent the dropdown width from stretching beyond the trigger width\n  // if that is going to cause the dropdown to be cropped because of overflow\n  const fixStretching = () => {\n    const classNameToRemove = styles['stretch-beyond-trigger-width'];\n    if (\n      open &&\n      stretchBeyondTriggerWidth &&\n      dropdownRef.current &&\n      triggerRef.current &&\n      dropdownRef.current.classList.contains(classNameToRemove) &&\n      !hasEnoughSpaceToStretchBeyondTriggerWidth({\n        triggerElement: triggerRef.current,\n        dropdownElement: dropdownRef.current,\n        desiredMinWidth: minWidth,\n        expandToViewport,\n        stretchWidth,\n        stretchHeight,\n        isMobile,\n      })\n    ) {\n      dropdownRef.current.classList.remove(classNameToRemove);\n    }\n  };\n\n  useResizeObserver(() => dropdownRef.current, fixStretching);\n\n  useLayoutEffect(() => {\n    const onDropdownOpen = () => {\n      if (open && dropdownRef.current && triggerRef.current && verticalContainerRef.current) {\n        // calculate scroll width only for dropdowns that has a scrollbar and ignore it for date picker components\n        if (scrollable) {\n          dropdownRef.current.classList.add(styles.nowrap);\n        }\n        setDropdownPosition(\n          ...calculatePosition(\n            dropdownRef.current,\n            triggerRef.current,\n            verticalContainerRef.current,\n            interior,\n            expandToViewport,\n            preferCenter,\n            stretchWidth,\n            stretchHeight,\n            isMobile,\n            minWidth,\n            stretchBeyondTriggerWidth\n          ),\n          dropdownRef.current,\n          verticalContainerRef.current\n        );\n        if (scrollable) {\n          dropdownRef.current.classList.remove(styles.nowrap);\n        }\n      }\n    };\n    onDropdownOpen();\n\n    if (open) {\n      // window may scroll when dropdown opens, for example when soft keyboard shows up\n      window.addEventListener('scroll', onDropdownOpen);\n      // only listen to window scroll within very short time after the dropdown opens\n      // do not want to interfere dropdown position on scroll afterwards\n      const timeoutId = setTimeout(() => {\n        window.removeEventListener('scroll', onDropdownOpen);\n      }, 500);\n\n      return () => {\n        clearTimeout(timeoutId);\n        window.removeEventListener('scroll', onDropdownOpen);\n      };\n    }\n    // See AWSUI-13040\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, dropdownRef, triggerRef, verticalContainerRef, interior, stretchWidth, isMobile, contentKey]);\n\n  // subscribe to outside click\n  useEffect(() => {\n    if (!open) {\n      return;\n    }\n    const clickListener = (e: MouseEvent) => {\n      if (!nodeBelongs(dropdownRef.current, e.target) && !nodeBelongs(triggerRef.current, e.target)) {\n        fireNonCancelableEvent(onDropdownClose);\n      }\n    };\n    window.addEventListener('click', clickListener, true);\n\n    return () => {\n      window.removeEventListener('click', clickListener, true);\n    };\n  }, [open, onDropdownClose]);\n\n  // sync dropdown position on scroll and resize\n  useLayoutEffect(() => {\n    if (!expandToViewport || !open) {\n      return;\n    }\n    const updateDropdownPosition = () => {\n      if (triggerRef.current && dropdownRef.current && verticalContainerRef.current) {\n        const triggerRect = getLogicalBoundingClientRect(triggerRef.current);\n        const target = dropdownRef.current;\n        if (fixedPosition.current) {\n          if (fixedPosition.current.dropBlockStart) {\n            dropdownRef.current.style.insetBlockEnd = `calc(100% - ${triggerRect.insetBlockStart}px)`;\n          } else {\n            target.style.insetBlockStart = `${triggerRect.insetBlockEnd}px`;\n          }\n          if (fixedPosition.current.dropInlineStart) {\n            target.style.insetInlineStart = `calc(${triggerRect.insetInlineEnd}px - ${fixedPosition.current.inlineSize})`;\n          } else {\n            target.style.insetInlineStart = `${triggerRect.insetInlineStart}px`;\n          }\n        }\n      }\n    };\n\n    updateDropdownPosition();\n\n    window.addEventListener('scroll', updateDropdownPosition, true);\n    window.addEventListener('resize', updateDropdownPosition, true);\n    return () => {\n      window.removeEventListener('scroll', updateDropdownPosition, true);\n      window.removeEventListener('resize', updateDropdownPosition, true);\n    };\n  }, [open, expandToViewport]);\n\n  const referrerId = useUniqueId();\n\n  return (\n    <div\n      className={clsx(\n        styles.root,\n        interior && styles.interior,\n        stretchTriggerHeight && styles['stretch-trigger-height']\n      )}\n      ref={wrapperRef}\n      onFocus={focusHandler}\n      onBlur={blurHandler}\n    >\n      <div id={referrerId} className={clsx(stretchTriggerHeight && styles['stretch-trigger-height'])} ref={triggerRef}>\n        {trigger}\n      </div>\n\n      <TabTrap\n        focusNextCallback={() => dropdownRef.current && getFirstFocusable(dropdownRef.current)?.focus()}\n        disabled={!open || !loopFocus}\n      />\n\n      <DropdownContainer\n        renderWithPortal={expandToViewport && !interior}\n        id={dropdownId}\n        referrerId={referrerId}\n        open={open}\n      >\n        <Transition in={open ?? false} exit={false}>\n          {(state, ref) => (\n            <div ref={dropdownContainerRef}>\n              <TabTrap\n                focusNextCallback={() => triggerRef.current && getLastFocusable(triggerRef.current)?.focus()}\n                disabled={!open || !loopFocus}\n              />\n\n              <TransitionContent\n                state={state}\n                transitionRef={ref}\n                dropdownClasses={dropdownClasses}\n                open={open}\n                stretchWidth={stretchWidth}\n                interior={interior}\n                header={header}\n                expandToViewport={expandToViewport}\n                stretchBeyondTriggerWidth={stretchBeyondTriggerWidth}\n                footer={footer}\n                onMouseDown={onMouseDown}\n                isRefresh={isRefresh}\n                dropdownRef={dropdownRef}\n                verticalContainerRef={verticalContainerRef}\n                position={position}\n                id={dropdownContentId}\n                role={dropdownContentRole}\n                ariaLabelledby={ariaLabelledby}\n                ariaDescribedby={ariaDescribedby}\n              >\n                {children}\n              </TransitionContent>\n\n              <TabTrap\n                focusNextCallback={() => triggerRef.current && getFirstFocusable(triggerRef.current)?.focus()}\n                disabled={!open || !loopFocus}\n              />\n            </div>\n          )}\n        </Transition>\n      </DropdownContainer>\n    </div>\n  );\n};\n\nconst isInteriorPosition = (\n  position: DropdownPosition | InteriorDropdownPosition\n): position is InteriorDropdownPosition => (position as InteriorDropdownPosition).insetBlockEnd !== undefined;\n\nexport default Dropdown;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}