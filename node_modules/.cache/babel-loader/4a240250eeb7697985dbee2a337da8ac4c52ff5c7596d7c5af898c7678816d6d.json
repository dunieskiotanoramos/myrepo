{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport customCssProps from '../../../internal/generated/custom-css-properties';\nimport testutilStyles from '../../test-classes/styles.css.js';\nimport styles from './styles.css.js';\nconst contentTypeCustomWidths = ['dashboard', 'cards', 'table'];\nexport function SkeletonLayout({\n  style,\n  notifications,\n  contentHeader,\n  content,\n  navigation,\n  navigationOpen,\n  navigationWidth,\n  tools,\n  toolsOpen,\n  toolsWidth,\n  toolbar,\n  sideSplitPanel,\n  bottomSplitPanel,\n  splitPanelOpen,\n  placement,\n  contentType,\n  maxContentWidth,\n  disableContentPaddings\n}) {\n  const isMaxWidth = maxContentWidth === Number.MAX_VALUE || maxContentWidth === Number.MAX_SAFE_INTEGER;\n  const anyPanelOpen = navigationOpen || toolsOpen;\n  return React.createElement(\"div\", {\n    className: clsx(styles.root, testutilStyles.root, {\n      [styles['has-adaptive-widths-default']]: !contentTypeCustomWidths.includes(contentType),\n      [styles['has-adaptive-widths-dashboard']]: contentType === 'dashboard'\n    }),\n    style: {\n      minBlockSize: `calc(100vh - ${placement.insetBlockStart}px - ${placement.insetBlockEnd}px)`,\n      [customCssProps.maxContentWidth]: isMaxWidth ? '100%' : maxContentWidth ? `${maxContentWidth}px` : '',\n      [customCssProps.navigationWidth]: `${navigationWidth}px`,\n      [customCssProps.toolsWidth]: `${toolsWidth}px`\n    }\n  }, navigation && React.createElement(\"div\", {\n    className: clsx(styles.navigation, !navigationOpen && styles['panel-hidden'], toolsOpen && styles['unfocusable-mobile'])\n  }, navigation), toolbar, React.createElement(\"main\", {\n    className: clsx(styles['main-landmark'], anyPanelOpen && styles['unfocusable-mobile'])\n  }, notifications, React.createElement(\"div\", {\n    className: clsx(styles.main, {\n      [styles['main-disable-paddings']]: disableContentPaddings\n    }),\n    style: style\n  }, contentHeader && React.createElement(\"div\", {\n    className: styles['content-header']\n  }, contentHeader), React.createElement(\"div\", {\n    className: clsx(styles.content, testutilStyles.content)\n  }, content)), bottomSplitPanel && React.createElement(\"div\", {\n    className: clsx(styles['split-panel-bottom'], !splitPanelOpen && styles['split-panel-hidden']),\n    style: {\n      insetBlockEnd: placement.insetBlockEnd\n    }\n  }, bottomSplitPanel)), sideSplitPanel && React.createElement(\"div\", {\n    className: clsx(styles['split-panel-side'], !splitPanelOpen && styles['panel-hidden'])\n  }, sideSplitPanel), tools && React.createElement(\"div\", {\n    className: clsx(styles.tools, !toolsOpen && styles['panel-hidden'])\n  }, tools));\n}","map":{"version":3,"names":["React","clsx","customCssProps","testutilStyles","styles","contentTypeCustomWidths","SkeletonLayout","style","notifications","contentHeader","content","navigation","navigationOpen","navigationWidth","tools","toolsOpen","toolsWidth","toolbar","sideSplitPanel","bottomSplitPanel","splitPanelOpen","placement","contentType","maxContentWidth","disableContentPaddings","isMaxWidth","Number","MAX_VALUE","MAX_SAFE_INTEGER","anyPanelOpen","createElement","className","root","includes","minBlockSize","insetBlockStart","insetBlockEnd","main"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/app-layout/visual-refresh-toolbar/skeleton/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport customCssProps from '../../../internal/generated/custom-css-properties';\nimport { AppLayoutPropsWithDefaults } from '../../interfaces';\n\nimport testutilStyles from '../../test-classes/styles.css.js';\nimport styles from './styles.css.js';\n\nconst contentTypeCustomWidths: Array<string | undefined> = ['dashboard', 'cards', 'table'];\n\ninterface SkeletonLayoutProps\n  extends Pick<\n    AppLayoutPropsWithDefaults,\n    | 'notifications'\n    | 'contentHeader'\n    | 'content'\n    | 'contentType'\n    | 'maxContentWidth'\n    | 'disableContentPaddings'\n    | 'navigation'\n    | 'navigationOpen'\n    | 'navigationWidth'\n    | 'tools'\n    | 'toolsOpen'\n    | 'toolsWidth'\n    | 'placement'\n  > {\n  style?: React.CSSProperties;\n  toolbar?: React.ReactNode;\n  splitPanelOpen?: boolean;\n  sideSplitPanel?: React.ReactNode;\n  bottomSplitPanel?: React.ReactNode;\n}\n\nexport function SkeletonLayout({\n  style,\n  notifications,\n  contentHeader,\n  content,\n  navigation,\n  navigationOpen,\n  navigationWidth,\n  tools,\n  toolsOpen,\n  toolsWidth,\n  toolbar,\n  sideSplitPanel,\n  bottomSplitPanel,\n  splitPanelOpen,\n  placement,\n  contentType,\n  maxContentWidth,\n  disableContentPaddings,\n}: SkeletonLayoutProps) {\n  const isMaxWidth = maxContentWidth === Number.MAX_VALUE || maxContentWidth === Number.MAX_SAFE_INTEGER;\n  const anyPanelOpen = navigationOpen || toolsOpen;\n  return (\n    <div\n      className={clsx(styles.root, testutilStyles.root, {\n        [styles['has-adaptive-widths-default']]: !contentTypeCustomWidths.includes(contentType),\n        [styles['has-adaptive-widths-dashboard']]: contentType === 'dashboard',\n      })}\n      style={{\n        minBlockSize: `calc(100vh - ${placement.insetBlockStart}px - ${placement.insetBlockEnd}px)`,\n        [customCssProps.maxContentWidth]: isMaxWidth ? '100%' : maxContentWidth ? `${maxContentWidth}px` : '',\n        [customCssProps.navigationWidth]: `${navigationWidth}px`,\n        [customCssProps.toolsWidth]: `${toolsWidth}px`,\n      }}\n    >\n      {navigation && (\n        <div\n          className={clsx(\n            styles.navigation,\n            !navigationOpen && styles['panel-hidden'],\n            toolsOpen && styles['unfocusable-mobile']\n          )}\n        >\n          {navigation}\n        </div>\n      )}\n      {toolbar}\n      <main className={clsx(styles['main-landmark'], anyPanelOpen && styles['unfocusable-mobile'])}>\n        {notifications}\n        <div className={clsx(styles.main, { [styles['main-disable-paddings']]: disableContentPaddings })} style={style}>\n          {contentHeader && <div className={styles['content-header']}>{contentHeader}</div>}\n          <div className={clsx(styles.content, testutilStyles.content)}>{content}</div>\n        </div>\n        {bottomSplitPanel && (\n          <div\n            className={clsx(styles['split-panel-bottom'], !splitPanelOpen && styles['split-panel-hidden'])}\n            style={{ insetBlockEnd: placement.insetBlockEnd }}\n          >\n            {bottomSplitPanel}\n          </div>\n        )}\n      </main>\n      {sideSplitPanel && (\n        <div className={clsx(styles['split-panel-side'], !splitPanelOpen && styles['panel-hidden'])}>\n          {sideSplitPanel}\n        </div>\n      )}\n      {tools && <div className={clsx(styles.tools, !toolsOpen && styles['panel-hidden'])}>{tools}</div>}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}