{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createContext, useCallback, useEffect, useLayoutEffect, useState } from 'react';\nimport * as tokens from '../internal/generated/styles/tokens';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport globalVars from '../internal/styles/global-vars';\nimport { findUpUntil } from '../internal/utils/dom';\nimport { getOverflowParents } from '../internal/utils/scrollable-containers';\nexport function computeOffset({\n  isMobile,\n  __stickyOffset,\n  __mobileStickyOffset,\n  hasInnerOverflowParents,\n  __additionalOffset\n}) {\n  const localOffset = isMobile ? (__stickyOffset !== null && __stickyOffset !== void 0 ? __stickyOffset : 0) - (__mobileStickyOffset !== null && __mobileStickyOffset !== void 0 ? __mobileStickyOffset : 0) : __stickyOffset !== null && __stickyOffset !== void 0 ? __stickyOffset : 0;\n  if (hasInnerOverflowParents || __stickyOffset !== undefined) {\n    return `${localOffset}px`;\n  }\n  const globalOffset = `var(${globalVars.stickyVerticalTopOffset}, 0px)`;\n  return `calc(${globalOffset} + ${localOffset}px + ${__additionalOffset ? tokens.spaceScaledS : '0px'})`;\n}\nexport const StickyHeaderContext = createContext({\n  isStuck: false\n});\nexport const useStickyHeader = (rootRef, headerRef, __stickyHeader, __stickyOffset, __mobileStickyOffset, __disableMobile, __additionalOffset = false) => {\n  const isMobile = useMobile();\n  const disableSticky = isMobile && __disableMobile;\n  const isSticky = !disableSticky && !!__stickyHeader;\n  // If it has overflow parents inside the app layout, we shouldn't apply a sticky offset.\n  const [hasInnerOverflowParents, setHasInnerOverflowParents] = useState(false);\n  const [isStuck, setIsStuck] = useState(false);\n  useLayoutEffect(() => {\n    if (rootRef.current) {\n      const overflowParents = getOverflowParents(rootRef.current);\n      const mainElement = findUpUntil(rootRef.current, elem => elem.tagName === 'MAIN');\n      // In both versions of the app layout, the scrolling element for disableBodyScroll\n      // is the <main>. If the closest overflow parent is also the closest <main> and we have\n      // offset values, it's safe to assume that it's the app layout scroll root and we\n      // should stop there.\n      setHasInnerOverflowParents(overflowParents.length > 0 && overflowParents[0] !== mainElement);\n    }\n  }, [rootRef]);\n  const computedOffset = computeOffset({\n    isMobile,\n    __stickyOffset,\n    __mobileStickyOffset,\n    hasInnerOverflowParents,\n    __additionalOffset\n  });\n  const stickyStyles = isSticky ? {\n    style: {\n      top: computedOffset\n    }\n  } : {};\n  // \"stuck\" state, when the header has moved from its original posititon has a\n  // box-shadow, applied here by a \"header-stuck\" className\n  const checkIfStuck = useCallback(() => {\n    if (rootRef.current && headerRef.current) {\n      const rootTopBorderWidth = parseFloat(getComputedStyle(rootRef.current).borderTopWidth) || 0;\n      const rootTop = rootRef.current.getBoundingClientRect().top + rootTopBorderWidth;\n      const headerTop = headerRef.current.getBoundingClientRect().top;\n      if (rootTop < headerTop) {\n        setIsStuck(true);\n      } else {\n        setIsStuck(false);\n      }\n    }\n  }, [rootRef, headerRef]);\n  useEffect(() => {\n    if (isSticky) {\n      window.addEventListener('scroll', checkIfStuck, true);\n      window.addEventListener('resize', checkIfStuck);\n      return () => {\n        window.removeEventListener('scroll', checkIfStuck, true);\n        window.removeEventListener('resize', checkIfStuck);\n      };\n    }\n  }, [isSticky, checkIfStuck]);\n  return {\n    isSticky,\n    isStuck,\n    stickyStyles\n  };\n};","map":{"version":3,"names":["createContext","useCallback","useEffect","useLayoutEffect","useState","tokens","useMobile","globalVars","findUpUntil","getOverflowParents","computeOffset","isMobile","__stickyOffset","__mobileStickyOffset","hasInnerOverflowParents","__additionalOffset","localOffset","undefined","globalOffset","stickyVerticalTopOffset","spaceScaledS","StickyHeaderContext","isStuck","useStickyHeader","rootRef","headerRef","__stickyHeader","__disableMobile","disableSticky","isSticky","setHasInnerOverflowParents","setIsStuck","current","overflowParents","mainElement","elem","tagName","length","computedOffset","stickyStyles","style","top","checkIfStuck","rootTopBorderWidth","parseFloat","getComputedStyle","borderTopWidth","rootTop","getBoundingClientRect","headerTop","window","addEventListener","removeEventListener"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/container/use-sticky-header.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createContext, RefObject, useCallback, useEffect, useLayoutEffect, useState } from 'react';\n\nimport * as tokens from '../internal/generated/styles/tokens';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport globalVars from '../internal/styles/global-vars';\nimport { findUpUntil } from '../internal/utils/dom';\nimport { getOverflowParents } from '../internal/utils/scrollable-containers';\n\ninterface StickyHeaderContextProps {\n  isStuck: boolean;\n}\n\ninterface ComputeOffsetProps {\n  isMobile: boolean;\n  __stickyOffset?: number;\n  __mobileStickyOffset?: number;\n  hasInnerOverflowParents: boolean;\n  __additionalOffset?: boolean;\n}\n\nexport function computeOffset({\n  isMobile,\n  __stickyOffset,\n  __mobileStickyOffset,\n  hasInnerOverflowParents,\n  __additionalOffset,\n}: ComputeOffsetProps): string {\n  const localOffset = isMobile ? (__stickyOffset ?? 0) - (__mobileStickyOffset ?? 0) : __stickyOffset ?? 0;\n  if (hasInnerOverflowParents || __stickyOffset !== undefined) {\n    return `${localOffset}px`;\n  }\n  const globalOffset = `var(${globalVars.stickyVerticalTopOffset}, 0px)`;\n\n  return `calc(${globalOffset} + ${localOffset}px + ${__additionalOffset ? tokens.spaceScaledS : '0px'})`;\n}\n\nexport const StickyHeaderContext = createContext<StickyHeaderContextProps>({\n  isStuck: false,\n});\n\nexport const useStickyHeader = (\n  rootRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  __stickyHeader?: boolean,\n  __stickyOffset?: number,\n  __mobileStickyOffset?: number,\n  __disableMobile?: boolean,\n  __additionalOffset = false\n) => {\n  const isMobile = useMobile();\n  const disableSticky = isMobile && __disableMobile;\n  const isSticky = !disableSticky && !!__stickyHeader;\n\n  // If it has overflow parents inside the app layout, we shouldn't apply a sticky offset.\n  const [hasInnerOverflowParents, setHasInnerOverflowParents] = useState(false);\n  const [isStuck, setIsStuck] = useState(false);\n  useLayoutEffect(() => {\n    if (rootRef.current) {\n      const overflowParents = getOverflowParents(rootRef.current);\n      const mainElement = findUpUntil(rootRef.current, elem => elem.tagName === 'MAIN');\n      // In both versions of the app layout, the scrolling element for disableBodyScroll\n      // is the <main>. If the closest overflow parent is also the closest <main> and we have\n      // offset values, it's safe to assume that it's the app layout scroll root and we\n      // should stop there.\n      setHasInnerOverflowParents(overflowParents.length > 0 && overflowParents[0] !== mainElement);\n    }\n  }, [rootRef]);\n\n  const computedOffset = computeOffset({\n    isMobile,\n    __stickyOffset,\n    __mobileStickyOffset,\n    hasInnerOverflowParents,\n    __additionalOffset,\n  });\n\n  const stickyStyles = isSticky\n    ? {\n        style: {\n          top: computedOffset,\n        },\n      }\n    : {};\n\n  // \"stuck\" state, when the header has moved from its original posititon has a\n  // box-shadow, applied here by a \"header-stuck\" className\n  const checkIfStuck = useCallback(() => {\n    if (rootRef.current && headerRef.current) {\n      const rootTopBorderWidth = parseFloat(getComputedStyle(rootRef.current).borderTopWidth) || 0;\n      const rootTop = rootRef.current.getBoundingClientRect().top + rootTopBorderWidth;\n      const headerTop = headerRef.current.getBoundingClientRect().top;\n\n      if (rootTop < headerTop) {\n        setIsStuck(true);\n      } else {\n        setIsStuck(false);\n      }\n    }\n  }, [rootRef, headerRef]);\n  useEffect(() => {\n    if (isSticky) {\n      window.addEventListener('scroll', checkIfStuck, true);\n      window.addEventListener('resize', checkIfStuck);\n      return () => {\n        window.removeEventListener('scroll', checkIfStuck, true);\n        window.removeEventListener('resize', checkIfStuck);\n      };\n    }\n  }, [isSticky, checkIfStuck]);\n  return {\n    isSticky,\n    isStuck,\n    stickyStyles,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}