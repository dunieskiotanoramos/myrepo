{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { getGlobalFlag, useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\nimport { useSplitPanelContext } from '../internal/context/split-panel-context';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nimport testUtilStyles from './test-classes/styles.css.js';\nexport function SplitPanelContentBottom({\n  baseProps,\n  isOpen,\n  state,\n  transitioningElementRef,\n  splitPanelRef,\n  cappedSize,\n  header,\n  resizeHandle,\n  children,\n  appLayoutMaxWidth,\n  panelHeaderId,\n  onToggle\n}) {\n  const isRefresh = useVisualRefresh();\n  const hasToolbar = getGlobalFlag('appLayoutWidget');\n  const {\n    bottomOffset,\n    leftOffset,\n    rightOffset,\n    disableContentPaddings,\n    contentWrapperPaddings,\n    reportHeaderHeight\n  } = useSplitPanelContext();\n  const transitionContentBottomRef = useMergeRefs(splitPanelRef || null, transitioningElementRef);\n  const isMobile = useMobile();\n  const headerRef = useRef(null);\n  useResizeObserver(headerRef, entry => reportHeaderHeight(entry.borderBoxHeight));\n  useEffect(() => {\n    // report empty height when unmounting the panel\n    return () => reportHeaderHeight(0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const centeredMaxWidthClasses = clsx({\n    [styles['pane-bottom-center-align']]: isRefresh,\n    [styles['pane-bottom-content-nav-padding']]: contentWrapperPaddings === null || contentWrapperPaddings === void 0 ? void 0 : contentWrapperPaddings.closedNav,\n    [styles['pane-bottom-content-tools-padding']]: contentWrapperPaddings === null || contentWrapperPaddings === void 0 ? void 0 : contentWrapperPaddings.closedTools\n  });\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.drawer, styles['position-bottom'], testUtilStyles.root, {\n      [testUtilStyles['open-position-bottom']]: isOpen,\n      [styles['drawer-closed']]: !isOpen,\n      [styles['drawer-mobile']]: isMobile,\n      [styles['drawer-disable-content-paddings']]: disableContentPaddings,\n      [styles.animating]: isRefresh && (state === 'entering' || state === 'exiting'),\n      [styles.refresh]: isRefresh,\n      [styles['with-toolbar']]: hasToolbar\n    }),\n    onClick: () => !isOpen && onToggle(),\n    style: {\n      insetBlockEnd: bottomOffset,\n      insetInlineStart: leftOffset,\n      insetInlineEnd: rightOffset,\n      blockSize: isOpen ? cappedSize : undefined\n    },\n    ref: transitionContentBottomRef\n  }), isOpen && React.createElement(\"div\", {\n    className: styles['slider-wrapper-bottom']\n  }, resizeHandle), React.createElement(\"div\", {\n    className: styles['drawer-content-bottom'],\n    \"aria-labelledby\": panelHeaderId,\n    role: \"region\"\n  }, React.createElement(\"div\", {\n    className: clsx(styles['pane-header-wrapper-bottom'], centeredMaxWidthClasses),\n    ref: headerRef\n  }, header), React.createElement(\"div\", {\n    className: clsx(styles['content-bottom'], centeredMaxWidthClasses),\n    \"aria-hidden\": !isOpen\n  }, React.createElement(\"div\", {\n    className: clsx({\n      [styles['content-bottom-max-width']]: isRefresh\n    }),\n    style: appLayoutMaxWidth\n  }, children))));\n}","map":{"version":3,"names":["React","useEffect","useRef","clsx","getGlobalFlag","useResizeObserver","useSplitPanelContext","useMergeRefs","useMobile","useVisualRefresh","styles","testUtilStyles","SplitPanelContentBottom","baseProps","isOpen","state","transitioningElementRef","splitPanelRef","cappedSize","header","resizeHandle","children","appLayoutMaxWidth","panelHeaderId","onToggle","isRefresh","hasToolbar","bottomOffset","leftOffset","rightOffset","disableContentPaddings","contentWrapperPaddings","reportHeaderHeight","transitionContentBottomRef","isMobile","headerRef","entry","borderBoxHeight","centeredMaxWidthClasses","closedNav","closedTools","createElement","Object","assign","className","drawer","root","animating","refresh","onClick","style","insetBlockEnd","insetInlineStart","insetInlineEnd","blockSize","undefined","ref","role"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/split-panel/bottom.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { getGlobalFlag, useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\n\nimport { TransitionStatus } from '../internal/components/transition';\nimport { useSplitPanelContext } from '../internal/context/split-panel-context';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { SplitPanelContentProps } from './interfaces';\n\nimport styles from './styles.css.js';\nimport testUtilStyles from './test-classes/styles.css.js';\n\ninterface SplitPanelContentBottomProps extends SplitPanelContentProps {\n  state: TransitionStatus;\n  transitioningElementRef: React.Ref<any>;\n  appLayoutMaxWidth: React.CSSProperties | undefined;\n}\n\nexport function SplitPanelContentBottom({\n  baseProps,\n  isOpen,\n  state,\n  transitioningElementRef,\n  splitPanelRef,\n  cappedSize,\n  header,\n  resizeHandle,\n  children,\n  appLayoutMaxWidth,\n  panelHeaderId,\n  onToggle,\n}: SplitPanelContentBottomProps) {\n  const isRefresh = useVisualRefresh();\n  const hasToolbar = getGlobalFlag('appLayoutWidget');\n  const { bottomOffset, leftOffset, rightOffset, disableContentPaddings, contentWrapperPaddings, reportHeaderHeight } =\n    useSplitPanelContext();\n  const transitionContentBottomRef = useMergeRefs(splitPanelRef || null, transitioningElementRef);\n  const isMobile = useMobile();\n\n  const headerRef = useRef<HTMLDivElement>(null);\n  useResizeObserver(headerRef, entry => reportHeaderHeight(entry.borderBoxHeight));\n  useEffect(() => {\n    // report empty height when unmounting the panel\n    return () => reportHeaderHeight(0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const centeredMaxWidthClasses = clsx({\n    [styles['pane-bottom-center-align']]: isRefresh,\n    [styles['pane-bottom-content-nav-padding']]: contentWrapperPaddings?.closedNav,\n    [styles['pane-bottom-content-tools-padding']]: contentWrapperPaddings?.closedTools,\n  });\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(baseProps.className, styles.drawer, styles['position-bottom'], testUtilStyles.root, {\n        [testUtilStyles['open-position-bottom']]: isOpen,\n        [styles['drawer-closed']]: !isOpen,\n        [styles['drawer-mobile']]: isMobile,\n        [styles['drawer-disable-content-paddings']]: disableContentPaddings,\n        [styles.animating]: isRefresh && (state === 'entering' || state === 'exiting'),\n        [styles.refresh]: isRefresh,\n        [styles['with-toolbar']]: hasToolbar,\n      })}\n      onClick={() => !isOpen && onToggle()}\n      style={{\n        insetBlockEnd: bottomOffset,\n        insetInlineStart: leftOffset,\n        insetInlineEnd: rightOffset,\n        blockSize: isOpen ? cappedSize : undefined,\n      }}\n      ref={transitionContentBottomRef}\n    >\n      {isOpen && <div className={styles['slider-wrapper-bottom']}>{resizeHandle}</div>}\n      <div className={styles['drawer-content-bottom']} aria-labelledby={panelHeaderId} role=\"region\">\n        <div className={clsx(styles['pane-header-wrapper-bottom'], centeredMaxWidthClasses)} ref={headerRef}>\n          {header}\n        </div>\n        <div className={clsx(styles['content-bottom'], centeredMaxWidthClasses)} aria-hidden={!isOpen}>\n          <div className={clsx({ [styles['content-bottom-max-width']]: isRefresh })} style={appLayoutMaxWidth}>\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}