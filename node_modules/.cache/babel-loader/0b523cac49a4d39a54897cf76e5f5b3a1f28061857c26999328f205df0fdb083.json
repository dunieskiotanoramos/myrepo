{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalButton from '../../button/internal';\nimport styles from './styles.css.js';\nfunction createActionButton(testUtilClasses, action, buttonText, onButtonClick) {\n  if (!action && buttonText) {\n    action = React.createElement(InternalButton, {\n      className: testUtilClasses.actionButton,\n      onClick: onButtonClick,\n      formAction: \"none\"\n    }, buttonText);\n  }\n  return action ? React.createElement(\"div\", {\n    className: testUtilClasses.actionSlot\n  }, action) : null;\n}\nexport function ActionsWrapper({\n  className,\n  testUtilClasses,\n  action,\n  discoveredActions,\n  buttonText,\n  onButtonClick\n}) {\n  const actionButton = createActionButton(testUtilClasses, action, buttonText, onButtonClick);\n  if (!actionButton && discoveredActions.length === 0) {\n    return null;\n  }\n  return React.createElement(\"div\", {\n    className: clsx(styles.root, className)\n  }, actionButton, discoveredActions);\n}","map":{"version":3,"names":["React","clsx","InternalButton","styles","createActionButton","testUtilClasses","action","buttonText","onButtonClick","createElement","className","actionButton","onClick","formAction","actionSlot","ActionsWrapper","discoveredActions","length","root"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/alert/actions-wrapper/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport InternalButton, { InternalButtonProps } from '../../button/internal';\n\nimport styles from './styles.css.js';\n\nfunction createActionButton(\n  testUtilClasses: ActionsWrapperProps['testUtilClasses'],\n  action: React.ReactNode,\n  buttonText: React.ReactNode,\n  onButtonClick: InternalButtonProps['onClick']\n) {\n  if (!action && buttonText) {\n    action = (\n      <InternalButton className={testUtilClasses.actionButton} onClick={onButtonClick} formAction=\"none\">\n        {buttonText}\n      </InternalButton>\n    );\n  }\n  return action ? <div className={testUtilClasses.actionSlot}>{action}</div> : null;\n}\n\ninterface ActionsWrapperProps {\n  className: string;\n  testUtilClasses: { actionSlot: string; actionButton: string };\n  action: React.ReactNode;\n  discoveredActions: Array<React.ReactNode>;\n  buttonText: React.ReactNode;\n  onButtonClick: InternalButtonProps['onClick'];\n}\n\nexport function ActionsWrapper({\n  className,\n  testUtilClasses,\n  action,\n  discoveredActions,\n  buttonText,\n  onButtonClick,\n}: ActionsWrapperProps) {\n  const actionButton = createActionButton(testUtilClasses, action, buttonText, onButtonClick);\n  if (!actionButton && discoveredActions.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={clsx(styles.root, className)}>\n      {actionButton}\n      {discoveredActions}\n    </div>\n  );\n}\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAOC,cAAuC,MAAM,uBAAuB;AAE3E,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,SAASC,kBAAkBA,CACzBC,eAAuD,EACvDC,MAAuB,EACvBC,UAA2B,EAC3BC,aAA6C;EAE7C,IAAI,CAACF,MAAM,IAAIC,UAAU,EAAE;IACzBD,MAAM,GACJN,KAAA,CAAAS,aAAA,CAACP,cAAc;MAACQ,SAAS,EAAEL,eAAe,CAACM,YAAY;MAAEC,OAAO,EAAEJ,aAAa;MAAEK,UAAU,EAAC;IAAM,GAC/FN,UAAU,CAEd;;EAEH,OAAOD,MAAM,GAAGN,KAAA,CAAAS,aAAA;IAAKC,SAAS,EAAEL,eAAe,CAACS;EAAU,GAAGR,MAAM,CAAO,GAAG,IAAI;AACnF;AAWA,OAAM,SAAUS,cAAcA,CAAC;EAC7BL,SAAS;EACTL,eAAe;EACfC,MAAM;EACNU,iBAAiB;EACjBT,UAAU;EACVC;AAAa,CACO;EACpB,MAAMG,YAAY,GAAGP,kBAAkB,CAACC,eAAe,EAAEC,MAAM,EAAEC,UAAU,EAAEC,aAAa,CAAC;EAC3F,IAAI,CAACG,YAAY,IAAIK,iBAAiB,CAACC,MAAM,KAAK,CAAC,EAAE;IACnD,OAAO,IAAI;;EAGb,OACEjB,KAAA,CAAAS,aAAA;IAAKC,SAAS,EAAET,IAAI,CAACE,MAAM,CAACe,IAAI,EAAER,SAAS;EAAC,GACzCC,YAAY,EACZK,iBAAiB,CACd;AAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}