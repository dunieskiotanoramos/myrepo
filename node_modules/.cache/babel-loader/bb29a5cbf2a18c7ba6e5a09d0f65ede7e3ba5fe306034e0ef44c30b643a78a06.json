{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { getGlobalFlag } from '@cloudscape-design/component-toolkit/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { getBaseProps } from '../internal/base-component';\nimport LiveRegion from '../internal/components/live-region';\nimport { createWidgetizedComponent } from '../internal/widgets';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport styles from './styles.css.js';\nexport function DrawerImplementation(_a) {\n  var {\n      header,\n      children,\n      loading,\n      i18nStrings,\n      __internalRootRef\n    } = _a,\n    restProps = __rest(_a, [\"header\", \"children\", \"loading\", \"i18nStrings\", \"__internalRootRef\"]);\n  const baseProps = getBaseProps(restProps);\n  const i18n = useInternalI18n('drawer');\n  const hasToolbar = getGlobalFlag('appLayoutWidget');\n  const containerProps = Object.assign(Object.assign({}, baseProps), {\n    className: clsx(baseProps.className, styles.drawer, hasToolbar && styles['with-toolbar'])\n  });\n  return loading ? React.createElement(\"div\", Object.assign({}, containerProps, {\n    ref: __internalRootRef\n  }), React.createElement(InternalStatusIndicator, {\n    type: \"loading\"\n  }, React.createElement(LiveRegion, {\n    visible: true\n  }, i18n('i18nStrings.loadingText', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.loadingText)))) : React.createElement(\"div\", Object.assign({}, containerProps, {\n    ref: __internalRootRef\n  }), header && React.createElement(\"div\", {\n    className: styles.header\n  }, header), React.createElement(\"div\", {\n    className: styles['test-utils-drawer-content']\n  }, children));\n}\nexport const createWidgetizedDrawer = createWidgetizedComponent(DrawerImplementation);","map":{"version":3,"names":["React","clsx","getGlobalFlag","useInternalI18n","getBaseProps","LiveRegion","createWidgetizedComponent","InternalStatusIndicator","styles","DrawerImplementation","_a","header","children","loading","i18nStrings","__internalRootRef","restProps","__rest","baseProps","i18n","hasToolbar","containerProps","Object","assign","className","drawer","createElement","ref","type","visible","loadingText","createWidgetizedDrawer"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/drawer/implementation.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { getGlobalFlag } from '@cloudscape-design/component-toolkit/internal';\n\nimport { useInternalI18n } from '../i18n/context';\nimport { getBaseProps } from '../internal/base-component';\nimport LiveRegion from '../internal/components/live-region';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { createWidgetizedComponent } from '../internal/widgets';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport { DrawerProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nexport type DrawerInternalProps = DrawerProps & InternalBaseComponentProps;\n\nexport function DrawerImplementation({\n  header,\n  children,\n  loading,\n  i18nStrings,\n  __internalRootRef,\n  ...restProps\n}: DrawerInternalProps) {\n  const baseProps = getBaseProps(restProps);\n  const i18n = useInternalI18n('drawer');\n  const hasToolbar = getGlobalFlag('appLayoutWidget');\n  const containerProps = {\n    ...baseProps,\n    className: clsx(baseProps.className, styles.drawer, hasToolbar && styles['with-toolbar']),\n  };\n  return loading ? (\n    <div {...containerProps} ref={__internalRootRef}>\n      <InternalStatusIndicator type=\"loading\">\n        <LiveRegion visible={true}>{i18n('i18nStrings.loadingText', i18nStrings?.loadingText)}</LiveRegion>\n      </InternalStatusIndicator>\n    </div>\n  ) : (\n    <div {...containerProps} ref={__internalRootRef}>\n      {header && <div className={styles.header}>{header}</div>}\n      <div className={styles['test-utils-drawer-content']}>{children}</div>\n    </div>\n  );\n}\n\nexport const createWidgetizedDrawer = createWidgetizedComponent(DrawerImplementation);\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,aAAa,QAAQ,+CAA+C;AAE7E,SAASC,eAAe,QAAQ,iBAAiB;AACjD,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,UAAU,MAAM,oCAAoC;AAE3D,SAASC,yBAAyB,QAAQ,qBAAqB;AAC/D,OAAOC,uBAAuB,MAAM,8BAA8B;AAGlE,OAAOC,MAAM,MAAM,iBAAiB;AAIpC,OAAM,SAAUC,oBAAoBA,CAACC,EAOf;MAPe;MACnCC,MAAM;MACNC,QAAQ;MACRC,OAAO;MACPC,WAAW;MACXC;IAAiB,IAAAL,EAEG;IADjBM,SAAS,GAAAC,MAAA,CAAAP,EAAA,EANuB,qEAOpC,CADa;EAEZ,MAAMQ,SAAS,GAAGd,YAAY,CAACY,SAAS,CAAC;EACzC,MAAMG,IAAI,GAAGhB,eAAe,CAAC,QAAQ,CAAC;EACtC,MAAMiB,UAAU,GAAGlB,aAAa,CAAC,iBAAiB,CAAC;EACnD,MAAMmB,cAAc,GAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACfL,SAAS;IACZM,SAAS,EAAEvB,IAAI,CAACiB,SAAS,CAACM,SAAS,EAAEhB,MAAM,CAACiB,MAAM,EAAEL,UAAU,IAAIZ,MAAM,CAAC,cAAc,CAAC;EAAC,EAC1F;EACD,OAAOK,OAAO,GACZb,KAAA,CAAA0B,aAAA,QAAAJ,MAAA,CAAAC,MAAA,KAASF,cAAc;IAAEM,GAAG,EAAEZ;EAAiB,IAC7Cf,KAAA,CAAA0B,aAAA,CAACnB,uBAAuB;IAACqB,IAAI,EAAC;EAAS,GACrC5B,KAAA,CAAA0B,aAAA,CAACrB,UAAU;IAACwB,OAAO,EAAE;EAAI,GAAGV,IAAI,CAAC,yBAAyB,EAAEL,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEgB,WAAW,CAAC,CAAc,CAC3E,CACtB,GAEN9B,KAAA,CAAA0B,aAAA,QAAAJ,MAAA,CAAAC,MAAA,KAASF,cAAc;IAAEM,GAAG,EAAEZ;EAAiB,IAC5CJ,MAAM,IAAIX,KAAA,CAAA0B,aAAA;IAAKF,SAAS,EAAEhB,MAAM,CAACG;EAAM,GAAGA,MAAM,CAAO,EACxDX,KAAA,CAAA0B,aAAA;IAAKF,SAAS,EAAEhB,MAAM,CAAC,2BAA2B;EAAC,GAAGI,QAAQ,CAAO,CAExE;AACH;AAEA,OAAO,MAAMmB,sBAAsB,GAAGzB,yBAAyB,CAACG,oBAAoB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}