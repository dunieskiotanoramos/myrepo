{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef, useState } from 'react';\nimport FilteringToken from './filtering-token';\nimport { TokenEditor } from './token-editor';\nimport { getFormattedToken } from './utils';\nimport styles from './styles.css.js';\nexport const TokenButton = ({\n  token,\n  operation = 'and',\n  first,\n  removeToken,\n  setToken,\n  setOperation,\n  filteringProperties,\n  filteringOptions,\n  asyncProps,\n  onLoadItems,\n  i18nStrings,\n  asyncProperties,\n  hideOperations,\n  customGroupsText,\n  disabled,\n  freeTextFiltering,\n  expandToViewport\n}) => {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n  const tokenRef = useRef(null);\n  const externalToken = Object.assign(Object.assign({}, token), {\n    propertyKey: (_a = token.property) === null || _a === void 0 ? void 0 : _a.propertyKey\n  });\n  const formattedToken = getFormattedToken(token);\n  const [temporaryToken, setTemporaryToken] = useState(token);\n  return React.createElement(FilteringToken, {\n    ref: tokenRef,\n    tokens: [{\n      content: React.createElement(\"span\", {\n        className: styles['token-trigger']\n      }, React.createElement(TokenTrigger, {\n        property: formattedToken.property,\n        operator: token.operator,\n        value: formattedToken.value\n      })),\n      ariaLabel: formattedToken.label,\n      dismissAriaLabel: (_c = (_b = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.removeTokenButtonAriaLabel) === null || _b === void 0 ? void 0 : _b.call(i18nStrings, externalToken)) !== null && _c !== void 0 ? _c : ''\n    }],\n    showOperation: !first && !hideOperations,\n    operation: operation,\n    andText: (_d = i18nStrings.operationAndText) !== null && _d !== void 0 ? _d : '',\n    orText: (_e = i18nStrings.operationOrText) !== null && _e !== void 0 ? _e : '',\n    operationAriaLabel: (_f = i18nStrings.tokenOperatorAriaLabel) !== null && _f !== void 0 ? _f : '',\n    onChangeOperation: setOperation,\n    onDismissToken: removeToken,\n    disabled: disabled,\n    editorContent: React.createElement(TokenEditor, {\n      setToken: setToken,\n      filteringProperties: filteringProperties,\n      filteringOptions: filteringOptions,\n      temporaryToken: temporaryToken,\n      onChangeTemporaryToken: setTemporaryToken,\n      asyncProps: asyncProps,\n      onLoadItems: onLoadItems,\n      i18nStrings: i18nStrings,\n      asyncProperties: asyncProperties,\n      customGroupsText: customGroupsText,\n      freeTextFiltering: freeTextFiltering,\n      onDismiss: () => {\n        var _a;\n        return (_a = tokenRef.current) === null || _a === void 0 ? void 0 : _a.closeEditor();\n      }\n    }),\n    editorHeader: (_g = i18nStrings.editTokenHeader) !== null && _g !== void 0 ? _g : '',\n    editorDismissAriaLabel: (_h = i18nStrings.dismissAriaLabel) !== null && _h !== void 0 ? _h : '',\n    editorExpandToViewport: !!expandToViewport,\n    onEditorOpen: () => setTemporaryToken(token),\n    // The properties below are only relevant for grouped tokens that are not supported\n    // by the property filter component yet.\n    groupOperation: operation,\n    groupAriaLabel: '',\n    groupEditAriaLabel: '',\n    onChangeGroupOperation: () => {},\n    hasGroups: false\n  });\n};\nconst TokenTrigger = ({\n  property,\n  operator,\n  value\n}) => {\n  if (property) {\n    property += ' ';\n  }\n  const freeTextContainsToken = operator === ':' && !property;\n  const operatorText = freeTextContainsToken ? '' : operator + ' ';\n  return React.createElement(React.Fragment, null, property, React.createElement(\"span\", {\n    className: styles['token-operator']\n  }, operatorText), value);\n};","map":{"version":3,"names":["React","useRef","useState","FilteringToken","TokenEditor","getFormattedToken","styles","TokenButton","token","operation","first","removeToken","setToken","setOperation","filteringProperties","filteringOptions","asyncProps","onLoadItems","i18nStrings","asyncProperties","hideOperations","customGroupsText","disabled","freeTextFiltering","expandToViewport","tokenRef","externalToken","Object","assign","propertyKey","_a","property","formattedToken","temporaryToken","setTemporaryToken","createElement","ref","tokens","content","className","TokenTrigger","operator","value","ariaLabel","label","dismissAriaLabel","_c","_b","removeTokenButtonAriaLabel","call","showOperation","andText","_d","operationAndText","orText","_e","operationOrText","operationAriaLabel","_f","tokenOperatorAriaLabel","onChangeOperation","onDismissToken","editorContent","onChangeTemporaryToken","onDismiss","current","closeEditor","editorHeader","_g","editTokenHeader","editorDismissAriaLabel","_h","editorExpandToViewport","onEditorOpen","groupOperation","groupAriaLabel","groupEditAriaLabel","onChangeGroupOperation","hasGroups","freeTextContainsToken","operatorText","Fragment"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/property-filter/token.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useRef, useState } from 'react';\n\nimport { DropdownStatusProps } from '../internal/components/dropdown-status/interfaces';\nimport { NonCancelableEventHandler } from '../internal/events';\nimport FilteringToken, { FilteringTokenRef } from './filtering-token';\nimport {\n  ComparisonOperator,\n  GroupText,\n  I18nStrings,\n  InternalFilteringOption,\n  InternalFilteringProperty,\n  InternalFreeTextFiltering,\n  InternalToken,\n  JoinOperation,\n  LoadItemsDetail,\n  Token,\n} from './interfaces';\nimport { TokenEditor } from './token-editor';\nimport { getFormattedToken } from './utils';\n\nimport styles from './styles.css.js';\n\ninterface TokenProps {\n  asyncProperties?: boolean;\n  asyncProps: DropdownStatusProps;\n  customGroupsText: readonly GroupText[];\n  disabled?: boolean;\n  freeTextFiltering: InternalFreeTextFiltering;\n  expandToViewport?: boolean;\n  filteringProperties: readonly InternalFilteringProperty[];\n  filteringOptions: readonly InternalFilteringOption[];\n  first?: boolean;\n  hideOperations?: boolean;\n  i18nStrings: I18nStrings;\n  onLoadItems?: NonCancelableEventHandler<LoadItemsDetail>;\n  operation: JoinOperation;\n  removeToken: () => void;\n  setOperation: (newOperation: JoinOperation) => void;\n  setToken: (newToken: Token) => void;\n  token: InternalToken;\n}\n\nexport const TokenButton = ({\n  token,\n  operation = 'and',\n  first,\n  removeToken,\n  setToken,\n  setOperation,\n  filteringProperties,\n  filteringOptions,\n  asyncProps,\n  onLoadItems,\n  i18nStrings,\n  asyncProperties,\n  hideOperations,\n  customGroupsText,\n  disabled,\n  freeTextFiltering,\n  expandToViewport,\n}: TokenProps) => {\n  const tokenRef = useRef<FilteringTokenRef>(null);\n  const externalToken = { ...token, propertyKey: token.property?.propertyKey };\n  const formattedToken = getFormattedToken(token);\n  const [temporaryToken, setTemporaryToken] = useState<InternalToken>(token);\n\n  return (\n    <FilteringToken\n      ref={tokenRef}\n      tokens={[\n        {\n          content: (\n            <span className={styles['token-trigger']}>\n              <TokenTrigger property={formattedToken.property} operator={token.operator} value={formattedToken.value} />\n            </span>\n          ),\n          ariaLabel: formattedToken.label,\n          dismissAriaLabel: i18nStrings?.removeTokenButtonAriaLabel?.(externalToken) ?? '',\n        },\n      ]}\n      showOperation={!first && !hideOperations}\n      operation={operation}\n      andText={i18nStrings.operationAndText ?? ''}\n      orText={i18nStrings.operationOrText ?? ''}\n      operationAriaLabel={i18nStrings.tokenOperatorAriaLabel ?? ''}\n      onChangeOperation={setOperation}\n      onDismissToken={removeToken}\n      disabled={disabled}\n      editorContent={\n        <TokenEditor\n          setToken={setToken}\n          filteringProperties={filteringProperties}\n          filteringOptions={filteringOptions}\n          temporaryToken={temporaryToken}\n          onChangeTemporaryToken={setTemporaryToken}\n          asyncProps={asyncProps}\n          onLoadItems={onLoadItems}\n          i18nStrings={i18nStrings}\n          asyncProperties={asyncProperties}\n          customGroupsText={customGroupsText}\n          freeTextFiltering={freeTextFiltering}\n          onDismiss={() => tokenRef.current?.closeEditor()}\n        />\n      }\n      editorHeader={i18nStrings.editTokenHeader ?? ''}\n      editorDismissAriaLabel={i18nStrings.dismissAriaLabel ?? ''}\n      editorExpandToViewport={!!expandToViewport}\n      onEditorOpen={() => setTemporaryToken(token)}\n      // The properties below are only relevant for grouped tokens that are not supported\n      // by the property filter component yet.\n      groupOperation={operation}\n      groupAriaLabel={''}\n      groupEditAriaLabel={''}\n      onChangeGroupOperation={() => {}}\n      hasGroups={false}\n    />\n  );\n};\n\nconst TokenTrigger = ({\n  property,\n  operator,\n  value,\n}: {\n  property?: string;\n  operator?: ComparisonOperator;\n  value: string;\n}) => {\n  if (property) {\n    property += ' ';\n  }\n  const freeTextContainsToken = operator === ':' && !property;\n  const operatorText = freeTextContainsToken ? '' : operator + ' ';\n  return (\n    <>\n      {property}\n      <span className={styles['token-operator']}>{operatorText}</span>\n      {value}\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}