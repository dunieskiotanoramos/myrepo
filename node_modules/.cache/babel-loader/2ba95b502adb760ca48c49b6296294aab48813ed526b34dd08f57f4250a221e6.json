{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useImperativeHandle, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { InternalButton } from '../button/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { getBaseProps } from '../internal/base-component';\nimport TokenList from '../internal/components/token-list';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id/index';\nimport { KeyCode } from '../internal/keycode';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { joinStrings } from '../internal/utils/strings';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { SearchResults } from '../text-filter/search-results';\nimport { getAllowedOperators, getAutosuggestOptions, getQueryActions, parseText } from './controller';\nimport { PropertyEditor } from './property-editor';\nimport PropertyFilterAutosuggest from './property-filter-autosuggest';\nimport { TokenButton } from './token';\nimport { useLoadItems } from './use-load-items';\nimport { matchTokenValue } from './utils';\nimport styles from './styles.css.js';\nfunction getOperatorI18nString(operator) {\n  switch (operator) {\n    case '=':\n      return 'equals';\n    case '!=':\n      return 'not_equals';\n    case '>':\n      return 'greater_than';\n    case '>=':\n      return 'greater_than_equal';\n    case '<':\n      return 'less_than';\n    case '<=':\n      return 'less_than_equal';\n    case ':':\n      return 'contains';\n    case '!:':\n      return 'not_contains';\n    case '^':\n      return 'starts_with';\n    case '!^':\n      return 'not_starts_with';\n    // The line is ignored from coverage because it is not reachable.\n    // The purpose of it is to prevent TS errors if ComparisonOperator type gets extended.\n    /* istanbul ignore next */\n    default:\n      return operator;\n  }\n}\nconst PropertyFilter = React.forwardRef((_a, ref) => {\n  var _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3;\n  var {\n      disabled,\n      countText,\n      query,\n      hideOperations,\n      onChange,\n      filteringProperties,\n      filteringOptions = [],\n      customGroupsText = [],\n      disableFreeTextFiltering = false,\n      freeTextFiltering,\n      onLoadItems,\n      virtualScroll,\n      customControl,\n      customFilterActions,\n      filteringPlaceholder,\n      filteringAriaLabel,\n      filteringEmpty,\n      filteringLoadingText,\n      filteringFinishedText,\n      filteringErrorText,\n      filteringRecoveryText,\n      filteringConstraintText,\n      filteringStatusType,\n      asyncProperties,\n      tokenLimit,\n      expandToViewport,\n      tokenLimitShowFewerAriaLabel,\n      tokenLimitShowMoreAriaLabel\n    } = _a,\n    rest = __rest(_a, [\"disabled\", \"countText\", \"query\", \"hideOperations\", \"onChange\", \"filteringProperties\", \"filteringOptions\", \"customGroupsText\", \"disableFreeTextFiltering\", \"freeTextFiltering\", \"onLoadItems\", \"virtualScroll\", \"customControl\", \"customFilterActions\", \"filteringPlaceholder\", \"filteringAriaLabel\", \"filteringEmpty\", \"filteringLoadingText\", \"filteringFinishedText\", \"filteringErrorText\", \"filteringRecoveryText\", \"filteringConstraintText\", \"filteringStatusType\", \"asyncProperties\", \"tokenLimit\", \"expandToViewport\", \"tokenLimitShowFewerAriaLabel\", \"tokenLimitShowMoreAriaLabel\"]);\n  const {\n    __internalRootRef\n  } = useBaseComponent('PropertyFilter', {\n    props: {\n      asyncProperties,\n      disableFreeTextFiltering,\n      expandToViewport,\n      hideOperations,\n      tokenLimit,\n      virtualScroll\n    }\n  });\n  const [removedTokenIndex, setRemovedTokenIndex] = useState(null);\n  const inputRef = useRef(null);\n  const baseProps = getBaseProps(rest);\n  const i18n = useInternalI18n('property-filter');\n  const i18nStrings = Object.assign(Object.assign({}, rest.i18nStrings), {\n    allPropertiesLabel: i18n('i18nStrings.allPropertiesLabel', (_b = rest.i18nStrings) === null || _b === void 0 ? void 0 : _b.allPropertiesLabel),\n    applyActionText: i18n('i18nStrings.applyActionText', (_c = rest.i18nStrings) === null || _c === void 0 ? void 0 : _c.applyActionText),\n    cancelActionText: i18n('i18nStrings.cancelActionText', (_d = rest.i18nStrings) === null || _d === void 0 ? void 0 : _d.cancelActionText),\n    clearFiltersText: i18n('i18nStrings.clearFiltersText', (_e = rest.i18nStrings) === null || _e === void 0 ? void 0 : _e.clearFiltersText),\n    editTokenHeader: i18n('i18nStrings.editTokenHeader', (_f = rest.i18nStrings) === null || _f === void 0 ? void 0 : _f.editTokenHeader),\n    groupPropertiesText: i18n('i18nStrings.groupPropertiesText', (_g = rest.i18nStrings) === null || _g === void 0 ? void 0 : _g.groupPropertiesText),\n    groupValuesText: i18n('i18nStrings.groupValuesText', (_h = rest.i18nStrings) === null || _h === void 0 ? void 0 : _h.groupValuesText),\n    operationAndText: i18n('i18nStrings.operationAndText', (_j = rest.i18nStrings) === null || _j === void 0 ? void 0 : _j.operationAndText),\n    operationOrText: i18n('i18nStrings.operationOrText', (_k = rest.i18nStrings) === null || _k === void 0 ? void 0 : _k.operationOrText),\n    operatorContainsText: i18n('i18nStrings.operatorContainsText', (_l = rest.i18nStrings) === null || _l === void 0 ? void 0 : _l.operatorContainsText),\n    operatorDoesNotContainText: i18n('i18nStrings.operatorDoesNotContainText', (_m = rest.i18nStrings) === null || _m === void 0 ? void 0 : _m.operatorDoesNotContainText),\n    operatorDoesNotEqualText: i18n('i18nStrings.operatorDoesNotEqualText', (_o = rest.i18nStrings) === null || _o === void 0 ? void 0 : _o.operatorDoesNotEqualText),\n    operatorEqualsText: i18n('i18nStrings.operatorEqualsText', (_p = rest.i18nStrings) === null || _p === void 0 ? void 0 : _p.operatorEqualsText),\n    operatorGreaterOrEqualText: i18n('i18nStrings.operatorGreaterOrEqualText', (_q = rest.i18nStrings) === null || _q === void 0 ? void 0 : _q.operatorGreaterOrEqualText),\n    operatorGreaterText: i18n('i18nStrings.operatorGreaterText', (_r = rest.i18nStrings) === null || _r === void 0 ? void 0 : _r.operatorGreaterText),\n    operatorLessOrEqualText: i18n('i18nStrings.operatorLessOrEqualText', (_s = rest.i18nStrings) === null || _s === void 0 ? void 0 : _s.operatorLessOrEqualText),\n    operatorLessText: i18n('i18nStrings.operatorLessText', (_t = rest.i18nStrings) === null || _t === void 0 ? void 0 : _t.operatorLessText),\n    operatorStartsWithText: i18n('i18nStrings.operatorStartsWithText', (_u = rest.i18nStrings) === null || _u === void 0 ? void 0 : _u.operatorStartsWithText),\n    operatorDoesNotStartWithText: i18n('i18nStrings.operatorDoesNotStartWithText', (_v = rest.i18nStrings) === null || _v === void 0 ? void 0 : _v.operatorDoesNotStartWithText),\n    operatorText: i18n('i18nStrings.operatorText', (_w = rest.i18nStrings) === null || _w === void 0 ? void 0 : _w.operatorText),\n    operatorsText: i18n('i18nStrings.operatorsText', (_x = rest.i18nStrings) === null || _x === void 0 ? void 0 : _x.operatorsText),\n    propertyText: i18n('i18nStrings.propertyText', (_y = rest.i18nStrings) === null || _y === void 0 ? void 0 : _y.propertyText),\n    tokenLimitShowFewer: i18n('i18nStrings.tokenLimitShowFewer', (_z = rest.i18nStrings) === null || _z === void 0 ? void 0 : _z.tokenLimitShowFewer),\n    tokenLimitShowMore: i18n('i18nStrings.tokenLimitShowMore', (_0 = rest.i18nStrings) === null || _0 === void 0 ? void 0 : _0.tokenLimitShowMore),\n    valueText: i18n('i18nStrings.valueText', (_1 = rest.i18nStrings) === null || _1 === void 0 ? void 0 : _1.valueText),\n    removeTokenButtonAriaLabel: i18n('i18nStrings.removeTokenButtonAriaLabel', (_2 = rest.i18nStrings) === null || _2 === void 0 ? void 0 : _2.removeTokenButtonAriaLabel, format => token => {\n      var _a;\n      return format({\n        token__operator: getOperatorI18nString(token.operator),\n        token__propertyKey: (_a = token.propertyKey) !== null && _a !== void 0 ? _a : '',\n        token__value: token.value\n      });\n    })\n  });\n  useImperativeHandle(ref, () => ({\n    focus: () => {\n      var _a;\n      return (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }), []);\n  const showResults = !!((_3 = query.tokens) === null || _3 === void 0 ? void 0 : _3.length) && !disabled && !!countText;\n  const {\n    addToken,\n    removeToken,\n    setToken,\n    setOperation,\n    removeAllTokens\n  } = getQueryActions(query, onChange, inputRef);\n  const [filteringText, setFilteringText] = useState('');\n  const {\n    internalProperties,\n    internalOptions,\n    internalQuery,\n    internalFreeText\n  } = (() => {\n    var _a, _b;\n    const propertyByKey = filteringProperties.reduce((acc, property) => {\n      var _a, _b, _c, _d, _e;\n      const extendedOperators = ((_a = property === null || property === void 0 ? void 0 : property.operators) !== null && _a !== void 0 ? _a : []).reduce((acc, operator) => typeof operator === 'object' ? acc.set(operator.operator, operator) : acc, new Map());\n      acc.set(property.key, {\n        propertyKey: property.key,\n        propertyLabel: (_b = property === null || property === void 0 ? void 0 : property.propertyLabel) !== null && _b !== void 0 ? _b : '',\n        groupValuesLabel: (_c = property === null || property === void 0 ? void 0 : property.groupValuesLabel) !== null && _c !== void 0 ? _c : '',\n        propertyGroup: property === null || property === void 0 ? void 0 : property.group,\n        operators: ((_d = property === null || property === void 0 ? void 0 : property.operators) !== null && _d !== void 0 ? _d : []).map(op => typeof op === 'string' ? op : op.operator),\n        defaultOperator: (_e = property === null || property === void 0 ? void 0 : property.defaultOperator) !== null && _e !== void 0 ? _e : '=',\n        getValueFormatter: operator => {\n          var _a, _b;\n          return operator ? (_b = (_a = extendedOperators.get(operator)) === null || _a === void 0 ? void 0 : _a.format) !== null && _b !== void 0 ? _b : null : null;\n        },\n        getValueFormRenderer: operator => {\n          var _a, _b;\n          return operator ? (_b = (_a = extendedOperators.get(operator)) === null || _a === void 0 ? void 0 : _a.form) !== null && _b !== void 0 ? _b : null : null;\n        },\n        externalProperty: property\n      });\n      return acc;\n    }, new Map());\n    const getProperty = propertyKey => {\n      var _a;\n      return (_a = propertyByKey.get(propertyKey)) !== null && _a !== void 0 ? _a : null;\n    };\n    const internalOptions = filteringOptions.map(option => {\n      var _a, _b;\n      return {\n        property: getProperty(option.propertyKey),\n        value: option.value,\n        label: (_b = (_a = option.label) !== null && _a !== void 0 ? _a : option.value) !== null && _b !== void 0 ? _b : ''\n      };\n    });\n    const internalQuery = {\n      operation: query.operation,\n      tokens: query.tokens.map(token => ({\n        property: token.propertyKey ? getProperty(token.propertyKey) : null,\n        operator: token.operator,\n        value: token.value\n      }))\n    };\n    const internalFreeText = {\n      disabled: disableFreeTextFiltering,\n      operators: (_a = freeTextFiltering === null || freeTextFiltering === void 0 ? void 0 : freeTextFiltering.operators) !== null && _a !== void 0 ? _a : [':', '!:'],\n      defaultOperator: (_b = freeTextFiltering === null || freeTextFiltering === void 0 ? void 0 : freeTextFiltering.defaultOperator) !== null && _b !== void 0 ? _b : ':'\n    };\n    return {\n      internalProperties: [...propertyByKey.values()],\n      internalOptions,\n      internalQuery,\n      internalFreeText\n    };\n  })();\n  const parsedText = parseText(filteringText, internalProperties, internalFreeText);\n  const autosuggestOptions = getAutosuggestOptions(parsedText, internalProperties, internalOptions, customGroupsText, i18nStrings);\n  const createToken = currentText => {\n    const parsedText = parseText(currentText, internalProperties, internalFreeText);\n    let newToken;\n    switch (parsedText.step) {\n      case 'property':\n        {\n          newToken = matchTokenValue({\n            property: parsedText.property,\n            operator: parsedText.operator,\n            value: parsedText.value\n          }, internalOptions);\n          break;\n        }\n      case 'free-text':\n        {\n          newToken = {\n            operator: parsedText.operator || internalFreeText.defaultOperator,\n            value: parsedText.value\n          };\n          break;\n        }\n      case 'operator':\n        {\n          newToken = {\n            operator: internalFreeText.defaultOperator,\n            value: currentText\n          };\n          break;\n        }\n    }\n    if (internalFreeText.disabled && !('propertyKey' in newToken)) {\n      return;\n    }\n    addToken(newToken);\n    setFilteringText('');\n  };\n  const ignoreKeyDown = useRef(false);\n  const handleKeyDown = event => {\n    if (filteringText && !ignoreKeyDown.current && event.detail.keyCode === KeyCode.enter) {\n      createToken(filteringText);\n    }\n  };\n  const getLoadMoreDetail = (parsedText, filteringText) => {\n    const loadMoreDetail = {\n      filteringProperty: undefined,\n      filteringText,\n      filteringOperator: undefined\n    };\n    if (parsedText.step === 'property') {\n      loadMoreDetail.filteringProperty = parsedText.property.externalProperty;\n      loadMoreDetail.filteringText = parsedText.value;\n      loadMoreDetail.filteringOperator = parsedText.operator;\n    }\n    return loadMoreDetail;\n  };\n  const loadMoreDetail = getLoadMoreDetail(parsedText, filteringText);\n  const inputLoadItemsHandlers = useLoadItems(onLoadItems, loadMoreDetail.filteringText, loadMoreDetail.filteringProperty, loadMoreDetail.filteringText, loadMoreDetail.filteringOperator);\n  const asyncProps = {\n    empty: filteringEmpty,\n    loadingText: filteringLoadingText,\n    finishedText: filteringFinishedText,\n    errorText: filteringErrorText,\n    recoveryText: filteringRecoveryText,\n    statusType: filteringStatusType\n  };\n  const asyncAutosuggestProps = !!filteringText.length || asyncProperties ? Object.assign(Object.assign({}, inputLoadItemsHandlers), asyncProps) : {};\n  const handleSelected = event => {\n    var _a;\n    // The ignoreKeyDown flag makes sure `createToken` routine runs only once. Autosuggest's `onKeyDown` fires,\n    // when an item is selected from the list using \"enter\" key.\n    ignoreKeyDown.current = true;\n    setTimeout(() => {\n      ignoreKeyDown.current = false;\n    }, 0);\n    const {\n      detail: option\n    } = event;\n    const value = option.value || '';\n    if (!('keepOpenOnSelect' in option)) {\n      createToken(value);\n      return;\n    }\n    // stop dropdown from closing\n    event.preventDefault();\n    const parsedText = parseText(value, internalProperties, internalFreeText);\n    const loadMoreDetail = getLoadMoreDetail(parsedText, value);\n    // Insert operator automatically if only one operator is defined for the given property.\n    if (parsedText.step === 'operator') {\n      const operators = getAllowedOperators(parsedText.property);\n      if (value.trim() === parsedText.property.propertyLabel && operators.length === 1) {\n        loadMoreDetail.filteringProperty = (_a = parsedText.property.externalProperty) !== null && _a !== void 0 ? _a : undefined;\n        loadMoreDetail.filteringOperator = operators[0];\n        loadMoreDetail.filteringText = '';\n        setFilteringText(parsedText.property.propertyLabel + ' ' + operators[0] + ' ');\n      }\n    }\n    fireNonCancelableEvent(onLoadItems, Object.assign(Object.assign({}, loadMoreDetail), {\n      firstPage: true,\n      samePage: false\n    }));\n  };\n  const operatorForm = parsedText.step === 'property' && parsedText.property.getValueFormRenderer(parsedText.operator);\n  const searchResultsId = useUniqueId('property-filter-search-results');\n  const constraintTextId = useUniqueId('property-filter-constraint');\n  const textboxAriaDescribedBy = filteringConstraintText ? joinStrings(rest.ariaDescribedby, constraintTextId) : rest.ariaDescribedby;\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: __internalRootRef\n  }), React.createElement(\"div\", {\n    className: styles['search-field']\n  }, customControl && React.createElement(\"div\", {\n    className: styles['custom-control']\n  }, customControl), React.createElement(PropertyFilterAutosuggest, Object.assign({\n    ref: inputRef,\n    virtualScroll: virtualScroll,\n    enteredTextLabel: i18nStrings.enteredTextLabel,\n    ariaLabel: filteringAriaLabel !== null && filteringAriaLabel !== void 0 ? filteringAriaLabel : i18nStrings.filteringAriaLabel,\n    placeholder: filteringPlaceholder !== null && filteringPlaceholder !== void 0 ? filteringPlaceholder : i18nStrings.filteringPlaceholder,\n    ariaLabelledby: rest.ariaLabelledby,\n    ariaDescribedby: textboxAriaDescribedBy,\n    controlId: rest.controlId,\n    value: filteringText,\n    disabled: disabled,\n    onKeyDown: handleKeyDown\n  }, autosuggestOptions, {\n    onChange: event => setFilteringText(event.detail.value),\n    empty: filteringEmpty\n  }, asyncAutosuggestProps, {\n    expandToViewport: expandToViewport,\n    onOptionClick: handleSelected,\n    customForm: operatorForm && React.createElement(PropertyEditor, {\n      property: parsedText.property,\n      operator: parsedText.operator,\n      filter: parsedText.value,\n      operatorForm: operatorForm,\n      i18nStrings: i18nStrings,\n      onCancel: () => {\n        var _a, _b;\n        setFilteringText('');\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.close();\n        (_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.focus({\n          preventDropdown: true\n        });\n      },\n      onSubmit: token => {\n        var _a, _b;\n        addToken(token);\n        setFilteringText('');\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n          preventDropdown: true\n        });\n        (_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.close();\n      }\n    }),\n    hideEnteredTextOption: internalFreeText.disabled && parsedText.step !== 'property',\n    clearAriaLabel: i18nStrings.clearAriaLabel,\n    searchResultsId: showResults ? searchResultsId : undefined\n  })), showResults ? React.createElement(\"div\", {\n    className: styles.results\n  }, React.createElement(SearchResults, {\n    id: searchResultsId\n  }, countText)) : null), filteringConstraintText && React.createElement(\"div\", {\n    id: constraintTextId,\n    className: styles.constraint\n  }, filteringConstraintText), internalQuery.tokens && internalQuery.tokens.length > 0 && React.createElement(\"div\", {\n    className: styles.tokens\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"xs\",\n    direction: \"horizontal\"\n  }, React.createElement(TokenList, {\n    alignment: \"inline\",\n    limit: tokenLimit,\n    items: internalQuery.tokens,\n    limitShowFewerAriaLabel: tokenLimitShowFewerAriaLabel,\n    limitShowMoreAriaLabel: tokenLimitShowMoreAriaLabel,\n    renderItem: (token, tokenIndex) => React.createElement(TokenButton, {\n      token: token,\n      first: tokenIndex === 0,\n      operation: internalQuery.operation,\n      removeToken: () => {\n        removeToken(tokenIndex);\n        setRemovedTokenIndex(tokenIndex);\n      },\n      setToken: newToken => setToken(tokenIndex, newToken),\n      setOperation: setOperation,\n      filteringProperties: internalProperties,\n      filteringOptions: internalOptions,\n      asyncProps: asyncProps,\n      onLoadItems: onLoadItems,\n      i18nStrings: i18nStrings,\n      asyncProperties: asyncProperties,\n      hideOperations: hideOperations,\n      customGroupsText: customGroupsText,\n      freeTextFiltering: internalFreeText,\n      disabled: disabled,\n      expandToViewport: expandToViewport\n    }),\n    i18nStrings: {\n      limitShowFewer: i18nStrings.tokenLimitShowFewer,\n      limitShowMore: i18nStrings.tokenLimitShowMore\n    },\n    after: customFilterActions ? React.createElement(\"div\", {\n      className: styles['custom-filter-actions']\n    }, customFilterActions) : React.createElement(InternalButton, {\n      formAction: \"none\",\n      onClick: removeAllTokens,\n      className: styles['remove-all'],\n      disabled: disabled\n    }, i18nStrings.clearFiltersText),\n    moveFocusNextToIndex: removedTokenIndex\n  }))));\n});\napplyDisplayName(PropertyFilter, 'PropertyFilter');\nexport default PropertyFilter;","map":{"version":3,"names":["React","useImperativeHandle","useRef","useState","clsx","InternalButton","useInternalI18n","getBaseProps","TokenList","fireNonCancelableEvent","useBaseComponent","useUniqueId","KeyCode","applyDisplayName","joinStrings","InternalSpaceBetween","SearchResults","getAllowedOperators","getAutosuggestOptions","getQueryActions","parseText","PropertyEditor","PropertyFilterAutosuggest","TokenButton","useLoadItems","matchTokenValue","styles","getOperatorI18nString","operator","PropertyFilter","forwardRef","_a","ref","disabled","countText","query","hideOperations","onChange","filteringProperties","filteringOptions","customGroupsText","disableFreeTextFiltering","freeTextFiltering","onLoadItems","virtualScroll","customControl","customFilterActions","filteringPlaceholder","filteringAriaLabel","filteringEmpty","filteringLoadingText","filteringFinishedText","filteringErrorText","filteringRecoveryText","filteringConstraintText","filteringStatusType","asyncProperties","tokenLimit","expandToViewport","tokenLimitShowFewerAriaLabel","tokenLimitShowMoreAriaLabel","rest","__rest","__internalRootRef","props","removedTokenIndex","setRemovedTokenIndex","inputRef","baseProps","i18n","i18nStrings","Object","assign","allPropertiesLabel","_b","applyActionText","_c","cancelActionText","_d","clearFiltersText","_e","editTokenHeader","_f","groupPropertiesText","_g","groupValuesText","_h","operationAndText","_j","operationOrText","_k","operatorContainsText","_l","operatorDoesNotContainText","_m","operatorDoesNotEqualText","_o","operatorEqualsText","_p","operatorGreaterOrEqualText","_q","operatorGreaterText","_r","operatorLessOrEqualText","_s","operatorLessText","_t","operatorStartsWithText","_u","operatorDoesNotStartWithText","_v","operatorText","_w","operatorsText","_x","propertyText","_y","tokenLimitShowFewer","_z","tokenLimitShowMore","_0","valueText","_1","removeTokenButtonAriaLabel","_2","format","token","token__operator","token__propertyKey","propertyKey","token__value","value","focus","current","showResults","_3","tokens","length","addToken","removeToken","setToken","setOperation","removeAllTokens","filteringText","setFilteringText","internalProperties","internalOptions","internalQuery","internalFreeText","propertyByKey","reduce","acc","property","extendedOperators","operators","set","Map","key","propertyLabel","groupValuesLabel","propertyGroup","group","map","op","defaultOperator","getValueFormatter","get","getValueFormRenderer","form","externalProperty","getProperty","option","label","operation","values","parsedText","autosuggestOptions","createToken","currentText","newToken","step","ignoreKeyDown","handleKeyDown","event","detail","keyCode","enter","getLoadMoreDetail","loadMoreDetail","filteringProperty","undefined","filteringOperator","inputLoadItemsHandlers","asyncProps","empty","loadingText","finishedText","errorText","recoveryText","statusType","asyncAutosuggestProps","handleSelected","setTimeout","preventDefault","trim","firstPage","samePage","operatorForm","searchResultsId","constraintTextId","textboxAriaDescribedBy","ariaDescribedby","createElement","className","root","enteredTextLabel","ariaLabel","placeholder","ariaLabelledby","controlId","onKeyDown","onOptionClick","customForm","filter","onCancel","close","preventDropdown","onSubmit","hideEnteredTextOption","clearAriaLabel","results","id","constraint","size","direction","alignment","limit","items","limitShowFewerAriaLabel","limitShowMoreAriaLabel","renderItem","tokenIndex","first","limitShowFewer","limitShowMore","after","formAction","onClick","moveFocusNextToIndex"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/property-filter/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useImperativeHandle, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { PropertyFilterOperator } from '@cloudscape-design/collection-hooks';\n\nimport { InternalButton } from '../button/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { getBaseProps } from '../internal/base-component';\nimport { AutosuggestInputRef } from '../internal/components/autosuggest-input';\nimport TokenList from '../internal/components/token-list';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id/index';\nimport { KeyCode } from '../internal/keycode';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { joinStrings } from '../internal/utils/strings';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { SearchResults } from '../text-filter/search-results';\nimport { getAllowedOperators, getAutosuggestOptions, getQueryActions, parseText } from './controller';\nimport {\n  ComparisonOperator,\n  ExtendedOperator,\n  FilteringProperty,\n  InternalFilteringOption,\n  InternalFilteringProperty,\n  InternalFreeTextFiltering,\n  InternalQuery,\n  ParsedText,\n  PropertyFilterProps,\n  Ref,\n  Token,\n} from './interfaces';\nimport { PropertyEditor } from './property-editor';\nimport PropertyFilterAutosuggest, { PropertyFilterAutosuggestProps } from './property-filter-autosuggest';\nimport { TokenButton } from './token';\nimport { useLoadItems } from './use-load-items';\nimport { matchTokenValue } from './utils';\n\nimport styles from './styles.css.js';\n\nexport { PropertyFilterProps };\n\nfunction getOperatorI18nString(operator: ComparisonOperator): string {\n  switch (operator) {\n    case '=':\n      return 'equals';\n    case '!=':\n      return 'not_equals';\n    case '>':\n      return 'greater_than';\n    case '>=':\n      return 'greater_than_equal';\n    case '<':\n      return 'less_than';\n    case '<=':\n      return 'less_than_equal';\n    case ':':\n      return 'contains';\n    case '!:':\n      return 'not_contains';\n    case '^':\n      return 'starts_with';\n    case '!^':\n      return 'not_starts_with';\n    // The line is ignored from coverage because it is not reachable.\n    // The purpose of it is to prevent TS errors if ComparisonOperator type gets extended.\n    /* istanbul ignore next */\n    default:\n      return operator;\n  }\n}\n\nconst PropertyFilter = React.forwardRef(\n  (\n    {\n      disabled,\n      countText,\n      query,\n      hideOperations,\n      onChange,\n      filteringProperties,\n      filteringOptions = [],\n      customGroupsText = [],\n      disableFreeTextFiltering = false,\n      freeTextFiltering,\n      onLoadItems,\n      virtualScroll,\n      customControl,\n      customFilterActions,\n      filteringPlaceholder,\n      filteringAriaLabel,\n      filteringEmpty,\n      filteringLoadingText,\n      filteringFinishedText,\n      filteringErrorText,\n      filteringRecoveryText,\n      filteringConstraintText,\n      filteringStatusType,\n      asyncProperties,\n      tokenLimit,\n      expandToViewport,\n      tokenLimitShowFewerAriaLabel,\n      tokenLimitShowMoreAriaLabel,\n      ...rest\n    }: PropertyFilterProps,\n    ref: React.Ref<Ref>\n  ) => {\n    const { __internalRootRef } = useBaseComponent('PropertyFilter', {\n      props: { asyncProperties, disableFreeTextFiltering, expandToViewport, hideOperations, tokenLimit, virtualScroll },\n    });\n    const [removedTokenIndex, setRemovedTokenIndex] = useState<null | number>(null);\n\n    const inputRef = useRef<AutosuggestInputRef>(null);\n    const baseProps = getBaseProps(rest);\n\n    const i18n = useInternalI18n('property-filter');\n    const i18nStrings: PropertyFilterProps.I18nStrings = {\n      ...rest.i18nStrings,\n      allPropertiesLabel: i18n('i18nStrings.allPropertiesLabel', rest.i18nStrings?.allPropertiesLabel),\n      applyActionText: i18n('i18nStrings.applyActionText', rest.i18nStrings?.applyActionText),\n      cancelActionText: i18n('i18nStrings.cancelActionText', rest.i18nStrings?.cancelActionText),\n      clearFiltersText: i18n('i18nStrings.clearFiltersText', rest.i18nStrings?.clearFiltersText),\n      editTokenHeader: i18n('i18nStrings.editTokenHeader', rest.i18nStrings?.editTokenHeader),\n      groupPropertiesText: i18n('i18nStrings.groupPropertiesText', rest.i18nStrings?.groupPropertiesText),\n      groupValuesText: i18n('i18nStrings.groupValuesText', rest.i18nStrings?.groupValuesText),\n      operationAndText: i18n('i18nStrings.operationAndText', rest.i18nStrings?.operationAndText),\n      operationOrText: i18n('i18nStrings.operationOrText', rest.i18nStrings?.operationOrText),\n      operatorContainsText: i18n('i18nStrings.operatorContainsText', rest.i18nStrings?.operatorContainsText),\n      operatorDoesNotContainText: i18n(\n        'i18nStrings.operatorDoesNotContainText',\n        rest.i18nStrings?.operatorDoesNotContainText\n      ),\n      operatorDoesNotEqualText: i18n(\n        'i18nStrings.operatorDoesNotEqualText',\n        rest.i18nStrings?.operatorDoesNotEqualText\n      ),\n      operatorEqualsText: i18n('i18nStrings.operatorEqualsText', rest.i18nStrings?.operatorEqualsText),\n      operatorGreaterOrEqualText: i18n(\n        'i18nStrings.operatorGreaterOrEqualText',\n        rest.i18nStrings?.operatorGreaterOrEqualText\n      ),\n      operatorGreaterText: i18n('i18nStrings.operatorGreaterText', rest.i18nStrings?.operatorGreaterText),\n      operatorLessOrEqualText: i18n('i18nStrings.operatorLessOrEqualText', rest.i18nStrings?.operatorLessOrEqualText),\n      operatorLessText: i18n('i18nStrings.operatorLessText', rest.i18nStrings?.operatorLessText),\n      operatorStartsWithText: i18n('i18nStrings.operatorStartsWithText', rest.i18nStrings?.operatorStartsWithText),\n      operatorDoesNotStartWithText: i18n(\n        'i18nStrings.operatorDoesNotStartWithText',\n        rest.i18nStrings?.operatorDoesNotStartWithText\n      ),\n      operatorText: i18n('i18nStrings.operatorText', rest.i18nStrings?.operatorText),\n      operatorsText: i18n('i18nStrings.operatorsText', rest.i18nStrings?.operatorsText),\n      propertyText: i18n('i18nStrings.propertyText', rest.i18nStrings?.propertyText),\n      tokenLimitShowFewer: i18n('i18nStrings.tokenLimitShowFewer', rest.i18nStrings?.tokenLimitShowFewer),\n      tokenLimitShowMore: i18n('i18nStrings.tokenLimitShowMore', rest.i18nStrings?.tokenLimitShowMore),\n      valueText: i18n('i18nStrings.valueText', rest.i18nStrings?.valueText),\n      removeTokenButtonAriaLabel: i18n(\n        'i18nStrings.removeTokenButtonAriaLabel',\n        rest.i18nStrings?.removeTokenButtonAriaLabel,\n        format => token =>\n          format({\n            token__operator: getOperatorI18nString(token.operator),\n            token__propertyKey: token.propertyKey ?? '',\n            token__value: token.value,\n          })\n      ),\n    };\n\n    useImperativeHandle(ref, () => ({ focus: () => inputRef.current?.focus() }), []);\n    const showResults = !!query.tokens?.length && !disabled && !!countText;\n    const { addToken, removeToken, setToken, setOperation, removeAllTokens } = getQueryActions(\n      query,\n      onChange,\n      inputRef\n    );\n    const [filteringText, setFilteringText] = useState<string>('');\n\n    const { internalProperties, internalOptions, internalQuery, internalFreeText } = (() => {\n      const propertyByKey = filteringProperties.reduce((acc, property) => {\n        const extendedOperators = (property?.operators ?? []).reduce(\n          (acc, operator) => (typeof operator === 'object' ? acc.set(operator.operator, operator) : acc),\n          new Map<PropertyFilterOperator, null | ExtendedOperator<any>>()\n        );\n        acc.set(property.key, {\n          propertyKey: property.key,\n          propertyLabel: property?.propertyLabel ?? '',\n          groupValuesLabel: property?.groupValuesLabel ?? '',\n          propertyGroup: property?.group,\n          operators: (property?.operators ?? []).map(op => (typeof op === 'string' ? op : op.operator)),\n          defaultOperator: property?.defaultOperator ?? '=',\n          getValueFormatter: operator => (operator ? extendedOperators.get(operator)?.format ?? null : null),\n          getValueFormRenderer: operator => (operator ? extendedOperators.get(operator)?.form ?? null : null),\n          externalProperty: property,\n        });\n        return acc;\n      }, new Map<string, InternalFilteringProperty>());\n      const getProperty = (propertyKey: string): null | InternalFilteringProperty =>\n        propertyByKey.get(propertyKey) ?? null;\n\n      const internalOptions: readonly InternalFilteringOption[] = filteringOptions.map(option => ({\n        property: getProperty(option.propertyKey),\n        value: option.value,\n        label: option.label ?? option.value ?? '',\n      }));\n\n      const internalQuery: InternalQuery = {\n        operation: query.operation,\n        tokens: query.tokens.map(token => ({\n          property: token.propertyKey ? getProperty(token.propertyKey) : null,\n          operator: token.operator,\n          value: token.value,\n        })),\n      };\n\n      const internalFreeText: InternalFreeTextFiltering = {\n        disabled: disableFreeTextFiltering,\n        operators: freeTextFiltering?.operators ?? [':', '!:'],\n        defaultOperator: freeTextFiltering?.defaultOperator ?? ':',\n      };\n\n      return { internalProperties: [...propertyByKey.values()], internalOptions, internalQuery, internalFreeText };\n    })();\n\n    const parsedText = parseText(filteringText, internalProperties, internalFreeText);\n    const autosuggestOptions = getAutosuggestOptions(\n      parsedText,\n      internalProperties,\n      internalOptions,\n      customGroupsText,\n      i18nStrings\n    );\n\n    const createToken = (currentText: string) => {\n      const parsedText = parseText(currentText, internalProperties, internalFreeText);\n      let newToken: Token;\n      switch (parsedText.step) {\n        case 'property': {\n          newToken = matchTokenValue(\n            {\n              property: parsedText.property,\n              operator: parsedText.operator,\n              value: parsedText.value,\n            },\n            internalOptions\n          );\n          break;\n        }\n        case 'free-text': {\n          newToken = {\n            operator: parsedText.operator || internalFreeText.defaultOperator,\n            value: parsedText.value,\n          };\n          break;\n        }\n        case 'operator': {\n          newToken = {\n            operator: internalFreeText.defaultOperator,\n            value: currentText,\n          };\n          break;\n        }\n      }\n      if (internalFreeText.disabled && !('propertyKey' in newToken)) {\n        return;\n      }\n      addToken(newToken);\n      setFilteringText('');\n    };\n    const ignoreKeyDown = useRef<boolean>(false);\n    const handleKeyDown: PropertyFilterAutosuggestProps['onKeyDown'] = event => {\n      if (filteringText && !ignoreKeyDown.current && event.detail.keyCode === KeyCode.enter) {\n        createToken(filteringText);\n      }\n    };\n    const getLoadMoreDetail = (parsedText: ParsedText, filteringText: string) => {\n      const loadMoreDetail: {\n        filteringProperty: FilteringProperty | undefined;\n        filteringText: string;\n        filteringOperator: ComparisonOperator | undefined;\n      } = {\n        filteringProperty: undefined,\n        filteringText,\n        filteringOperator: undefined,\n      };\n      if (parsedText.step === 'property') {\n        loadMoreDetail.filteringProperty = parsedText.property.externalProperty;\n        loadMoreDetail.filteringText = parsedText.value;\n        loadMoreDetail.filteringOperator = parsedText.operator;\n      }\n      return loadMoreDetail;\n    };\n    const loadMoreDetail = getLoadMoreDetail(parsedText, filteringText);\n    const inputLoadItemsHandlers = useLoadItems(\n      onLoadItems,\n      loadMoreDetail.filteringText,\n      loadMoreDetail.filteringProperty,\n      loadMoreDetail.filteringText,\n      loadMoreDetail.filteringOperator\n    );\n    const asyncProps = {\n      empty: filteringEmpty,\n      loadingText: filteringLoadingText,\n      finishedText: filteringFinishedText,\n      errorText: filteringErrorText,\n      recoveryText: filteringRecoveryText,\n      statusType: filteringStatusType,\n    };\n    const asyncAutosuggestProps =\n      !!filteringText.length || asyncProperties\n        ? {\n            ...inputLoadItemsHandlers,\n            ...asyncProps,\n          }\n        : {};\n    const handleSelected: PropertyFilterAutosuggestProps['onOptionClick'] = event => {\n      // The ignoreKeyDown flag makes sure `createToken` routine runs only once. Autosuggest's `onKeyDown` fires,\n      // when an item is selected from the list using \"enter\" key.\n      ignoreKeyDown.current = true;\n      setTimeout(() => {\n        ignoreKeyDown.current = false;\n      }, 0);\n      const { detail: option } = event;\n      const value = option.value || '';\n\n      if (!('keepOpenOnSelect' in option)) {\n        createToken(value);\n        return;\n      }\n\n      // stop dropdown from closing\n      event.preventDefault();\n\n      const parsedText = parseText(value, internalProperties, internalFreeText);\n      const loadMoreDetail = getLoadMoreDetail(parsedText, value);\n\n      // Insert operator automatically if only one operator is defined for the given property.\n      if (parsedText.step === 'operator') {\n        const operators = getAllowedOperators(parsedText.property);\n        if (value.trim() === parsedText.property.propertyLabel && operators.length === 1) {\n          loadMoreDetail.filteringProperty = parsedText.property.externalProperty ?? undefined;\n          loadMoreDetail.filteringOperator = operators[0];\n          loadMoreDetail.filteringText = '';\n          setFilteringText(parsedText.property.propertyLabel + ' ' + operators[0] + ' ');\n        }\n      }\n\n      fireNonCancelableEvent(onLoadItems, { ...loadMoreDetail, firstPage: true, samePage: false });\n    };\n\n    const operatorForm =\n      parsedText.step === 'property' && parsedText.property.getValueFormRenderer(parsedText.operator);\n\n    const searchResultsId = useUniqueId('property-filter-search-results');\n    const constraintTextId = useUniqueId('property-filter-constraint');\n    const textboxAriaDescribedBy = filteringConstraintText\n      ? joinStrings(rest.ariaDescribedby, constraintTextId)\n      : rest.ariaDescribedby;\n\n    return (\n      <div {...baseProps} className={clsx(baseProps.className, styles.root)} ref={__internalRootRef}>\n        <div className={styles['search-field']}>\n          {customControl && <div className={styles['custom-control']}>{customControl}</div>}\n          <PropertyFilterAutosuggest\n            ref={inputRef}\n            virtualScroll={virtualScroll}\n            enteredTextLabel={i18nStrings.enteredTextLabel}\n            ariaLabel={filteringAriaLabel ?? i18nStrings.filteringAriaLabel}\n            placeholder={filteringPlaceholder ?? i18nStrings.filteringPlaceholder}\n            ariaLabelledby={rest.ariaLabelledby}\n            ariaDescribedby={textboxAriaDescribedBy}\n            controlId={rest.controlId}\n            value={filteringText}\n            disabled={disabled}\n            onKeyDown={handleKeyDown}\n            {...autosuggestOptions}\n            onChange={event => setFilteringText(event.detail.value)}\n            empty={filteringEmpty}\n            {...asyncAutosuggestProps}\n            expandToViewport={expandToViewport}\n            onOptionClick={handleSelected}\n            customForm={\n              operatorForm && (\n                <PropertyEditor\n                  property={parsedText.property}\n                  operator={parsedText.operator}\n                  filter={parsedText.value}\n                  operatorForm={operatorForm}\n                  i18nStrings={i18nStrings}\n                  onCancel={() => {\n                    setFilteringText('');\n                    inputRef.current?.close();\n                    inputRef.current?.focus({ preventDropdown: true });\n                  }}\n                  onSubmit={token => {\n                    addToken(token);\n                    setFilteringText('');\n                    inputRef.current?.focus({ preventDropdown: true });\n                    inputRef.current?.close();\n                  }}\n                />\n              )\n            }\n            hideEnteredTextOption={internalFreeText.disabled && parsedText.step !== 'property'}\n            clearAriaLabel={i18nStrings.clearAriaLabel}\n            searchResultsId={showResults ? searchResultsId : undefined}\n          />\n          {showResults ? (\n            <div className={styles.results}>\n              <SearchResults id={searchResultsId}>{countText}</SearchResults>\n            </div>\n          ) : null}\n        </div>\n        {filteringConstraintText && (\n          <div id={constraintTextId} className={styles.constraint}>\n            {filteringConstraintText}\n          </div>\n        )}\n        {internalQuery.tokens && internalQuery.tokens.length > 0 && (\n          <div className={styles.tokens}>\n            <InternalSpaceBetween size=\"xs\" direction=\"horizontal\">\n              <TokenList\n                alignment=\"inline\"\n                limit={tokenLimit}\n                items={internalQuery.tokens}\n                limitShowFewerAriaLabel={tokenLimitShowFewerAriaLabel}\n                limitShowMoreAriaLabel={tokenLimitShowMoreAriaLabel}\n                renderItem={(token, tokenIndex) => (\n                  <TokenButton\n                    token={token}\n                    first={tokenIndex === 0}\n                    operation={internalQuery.operation}\n                    removeToken={() => {\n                      removeToken(tokenIndex);\n                      setRemovedTokenIndex(tokenIndex);\n                    }}\n                    setToken={(newToken: Token) => setToken(tokenIndex, newToken)}\n                    setOperation={setOperation}\n                    filteringProperties={internalProperties}\n                    filteringOptions={internalOptions}\n                    asyncProps={asyncProps}\n                    onLoadItems={onLoadItems}\n                    i18nStrings={i18nStrings}\n                    asyncProperties={asyncProperties}\n                    hideOperations={hideOperations}\n                    customGroupsText={customGroupsText}\n                    freeTextFiltering={internalFreeText}\n                    disabled={disabled}\n                    expandToViewport={expandToViewport}\n                  />\n                )}\n                i18nStrings={{\n                  limitShowFewer: i18nStrings.tokenLimitShowFewer,\n                  limitShowMore: i18nStrings.tokenLimitShowMore,\n                }}\n                after={\n                  customFilterActions ? (\n                    <div className={styles['custom-filter-actions']}>{customFilterActions}</div>\n                  ) : (\n                    <InternalButton\n                      formAction=\"none\"\n                      onClick={removeAllTokens}\n                      className={styles['remove-all']}\n                      disabled={disabled}\n                    >\n                      {i18nStrings.clearFiltersText}\n                    </InternalButton>\n                  )\n                }\n                moveFocusNextToIndex={removedTokenIndex}\n              />\n            </InternalSpaceBetween>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\napplyDisplayName(PropertyFilter, 'PropertyFilter');\nexport default PropertyFilter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}