{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useInternalI18n } from '../i18n/context';\nimport { getBaseProps } from '../internal/base-component';\nimport { getFirstFocusable } from '../internal/components/focus-lock/utils';\nimport Portal from '../internal/components/portal';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport ResetContextsForModal from '../internal/context/reset-contexts-for-modal';\nimport { useSingleTabStopNavigation } from '../internal/context/single-tab-stop-navigation-context';\nimport { fireNonCancelableEvent } from '../internal/events/index';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { usePortalModeClasses } from '../internal/hooks/use-portal-mode-classes';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { KeyCode } from '../internal/keycode';\nimport Arrow from './arrow';\nimport PopoverBody from './body';\nimport PopoverContainer from './container';\nimport styles from './styles.css.js';\nexport default React.forwardRef(InternalPopover);\nfunction InternalPopover(_a, ref) {\n  var {\n      position = 'right',\n      size = 'medium',\n      fixedWidth = false,\n      triggerType = 'text',\n      dismissButton = true,\n      children,\n      header,\n      content,\n      triggerAriaLabel,\n      wrapTriggerText = true,\n      renderWithPortal = false,\n      __onOpen,\n      __internalRootRef = null\n    } = _a,\n    restProps = __rest(_a, [\"position\", \"size\", \"fixedWidth\", \"triggerType\", \"dismissButton\", \"children\", \"header\", \"content\", \"triggerAriaLabel\", \"wrapTriggerText\", \"renderWithPortal\", \"__onOpen\", \"__internalRootRef\"]);\n  const baseProps = getBaseProps(restProps);\n  const triggerRef = useRef(null);\n  const popoverRef = useRef(null);\n  const clickFrameId = useRef(null);\n  const i18n = useInternalI18n('popover');\n  const dismissAriaLabel = i18n('dismissAriaLabel', restProps.dismissAriaLabel);\n  const [visible, setVisible] = useState(false);\n  const focusTrigger = useCallback(() => {\n    var _a, _b;\n    if (triggerType === 'text') {\n      (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    } else {\n      triggerRef.current && ((_b = getFirstFocusable(triggerRef.current)) === null || _b === void 0 ? void 0 : _b.focus());\n    }\n  }, [triggerType]);\n  const onTriggerClick = useCallback(() => {\n    fireNonCancelableEvent(__onOpen);\n    setVisible(true);\n  }, [__onOpen]);\n  const onDismiss = useCallback(() => {\n    setVisible(false);\n    focusTrigger();\n  }, [focusTrigger]);\n  const onTriggerKeyDown = useCallback(event => {\n    const isEscapeKey = event.keyCode === KeyCode.escape;\n    const isTabKey = event.keyCode === KeyCode.tab;\n    if (isEscapeKey && visible) {\n      event.stopPropagation();\n    }\n    if (isTabKey || isEscapeKey) {\n      setVisible(false);\n    }\n  }, [visible]);\n  useImperativeHandle(ref, () => ({\n    dismissPopover: onDismiss,\n    focus: () => {\n      setVisible(false);\n      focusTrigger();\n    }\n  }));\n  useEffect(() => {\n    if (!triggerRef.current) {\n      return;\n    }\n    const document = triggerRef.current.ownerDocument;\n    const onDocumentClick = () => {\n      // Dismiss popover unless there was a click inside within the last animation frame.\n      if (clickFrameId.current === null) {\n        setVisible(false);\n      }\n    };\n    document.addEventListener('mousedown', onDocumentClick);\n    return () => {\n      document.removeEventListener('mousedown', onDocumentClick);\n    };\n  }, []);\n  const popoverClasses = usePortalModeClasses(triggerRef);\n  const triggerProps = {\n    // https://github.com/microsoft/TypeScript/issues/36659\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ref: triggerRef,\n    onClick: onTriggerClick,\n    onKeyDown: onTriggerKeyDown,\n    className: clsx(styles.trigger, styles[`trigger-type-${triggerType}`])\n  };\n  const {\n    tabIndex: triggerTabIndex\n  } = useSingleTabStopNavigation(triggerRef);\n  const referrerId = useUniqueId();\n  const popoverContent = React.createElement(\"div\", {\n    \"aria-live\": dismissButton ? undefined : 'polite',\n    \"aria-atomic\": dismissButton ? undefined : true,\n    className: clsx(popoverClasses, !renderWithPortal && styles['popover-inline-content']),\n    \"data-awsui-referrer-id\": referrerId\n  }, visible && React.createElement(PopoverContainer, {\n    size: size,\n    fixedWidth: fixedWidth,\n    position: position,\n    trackRef: triggerRef,\n    arrow: position => React.createElement(Arrow, {\n      position: position\n    }),\n    renderWithPortal: renderWithPortal,\n    zIndex: renderWithPortal ? 7000 : undefined\n  }, React.createElement(LinkDefaultVariantContext.Provider, {\n    value: {\n      defaultVariant: 'primary'\n    }\n  }, React.createElement(PopoverBody, {\n    dismissButton: dismissButton,\n    dismissAriaLabel: dismissAriaLabel,\n    header: header,\n    onDismiss: onDismiss,\n    overflowVisible: \"both\"\n  }, content))));\n  const mergedRef = useMergeRefs(popoverRef, __internalRootRef);\n  return React.createElement(\"span\", Object.assign({}, baseProps, {\n    className: clsx(styles.root, baseProps.className, triggerType === 'filtering-token' && styles['root-filtering-token']),\n    ref: mergedRef,\n    onMouseDown: () => {\n      // Indicate there was a click inside popover recently, including nested portals.\n      clickFrameId.current = requestAnimationFrame(() => {\n        clickFrameId.current = null;\n      });\n    }\n  }), triggerType === 'text' ? React.createElement(\"button\", Object.assign({}, triggerProps, {\n    className: clsx(triggerProps.className, wrapTriggerText === false && styles['overflow-ellipsis']),\n    tabIndex: triggerTabIndex,\n    type: \"button\",\n    \"aria-haspopup\": \"dialog\",\n    id: referrerId,\n    \"aria-label\": triggerAriaLabel\n  }), children) : React.createElement(\"span\", Object.assign({}, triggerProps, {\n    id: referrerId\n  }), children), React.createElement(ResetContextsForModal, null, renderWithPortal ? React.createElement(Portal, null, popoverContent) : popoverContent));\n}","map":{"version":3,"names":["React","useCallback","useEffect","useImperativeHandle","useRef","useState","clsx","useInternalI18n","getBaseProps","getFirstFocusable","Portal","LinkDefaultVariantContext","ResetContextsForModal","useSingleTabStopNavigation","fireNonCancelableEvent","useMergeRefs","usePortalModeClasses","useUniqueId","KeyCode","Arrow","PopoverBody","PopoverContainer","styles","forwardRef","InternalPopover","_a","ref","position","size","fixedWidth","triggerType","dismissButton","children","header","content","triggerAriaLabel","wrapTriggerText","renderWithPortal","__onOpen","__internalRootRef","restProps","__rest","baseProps","triggerRef","popoverRef","clickFrameId","i18n","dismissAriaLabel","visible","setVisible","focusTrigger","current","focus","_b","onTriggerClick","onDismiss","onTriggerKeyDown","event","isEscapeKey","keyCode","escape","isTabKey","tab","stopPropagation","dismissPopover","document","ownerDocument","onDocumentClick","addEventListener","removeEventListener","popoverClasses","triggerProps","onClick","onKeyDown","className","trigger","tabIndex","triggerTabIndex","referrerId","popoverContent","createElement","undefined","trackRef","arrow","zIndex","Provider","value","defaultVariant","overflowVisible","mergedRef","Object","assign","root","onMouseDown","requestAnimationFrame","type","id"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/popover/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { useInternalI18n } from '../i18n/context';\nimport { getBaseProps } from '../internal/base-component';\nimport { getFirstFocusable } from '../internal/components/focus-lock/utils';\nimport Portal from '../internal/components/portal';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport ResetContextsForModal from '../internal/context/reset-contexts-for-modal';\nimport { useSingleTabStopNavigation } from '../internal/context/single-tab-stop-navigation-context';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events/index';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { usePortalModeClasses } from '../internal/hooks/use-portal-mode-classes';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { KeyCode } from '../internal/keycode';\nimport Arrow from './arrow';\nimport PopoverBody from './body';\nimport PopoverContainer from './container';\nimport { PopoverProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nexport interface InternalPopoverProps extends Omit<PopoverProps, 'triggerType'>, InternalBaseComponentProps {\n  __onOpen?: NonCancelableEventHandler<null>;\n  triggerType?: PopoverProps.TriggerType | 'filtering-token';\n}\n\nexport interface InternalPopoverRef {\n  dismissPopover: () => void;\n  focus: HTMLElement['focus'];\n}\n\nexport default React.forwardRef(InternalPopover);\n\nfunction InternalPopover(\n  {\n    position = 'right',\n    size = 'medium',\n    fixedWidth = false,\n    triggerType = 'text',\n    dismissButton = true,\n\n    children,\n    header,\n    content,\n    triggerAriaLabel,\n\n    wrapTriggerText = true,\n    renderWithPortal = false,\n\n    __onOpen,\n    __internalRootRef = null,\n    ...restProps\n  }: InternalPopoverProps,\n  ref: React.Ref<InternalPopoverRef>\n) {\n  const baseProps = getBaseProps(restProps);\n  const triggerRef = useRef<HTMLElement | null>(null);\n  const popoverRef = useRef<HTMLDivElement | null>(null);\n  const clickFrameId = useRef<number | null>(null);\n\n  const i18n = useInternalI18n('popover');\n  const dismissAriaLabel = i18n('dismissAriaLabel', restProps.dismissAriaLabel);\n\n  const [visible, setVisible] = useState(false);\n\n  const focusTrigger = useCallback(() => {\n    if (triggerType === 'text') {\n      triggerRef.current?.focus();\n    } else {\n      triggerRef.current && getFirstFocusable(triggerRef.current)?.focus();\n    }\n  }, [triggerType]);\n\n  const onTriggerClick = useCallback(() => {\n    fireNonCancelableEvent(__onOpen);\n    setVisible(true);\n  }, [__onOpen]);\n\n  const onDismiss = useCallback(() => {\n    setVisible(false);\n    focusTrigger();\n  }, [focusTrigger]);\n\n  const onTriggerKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const isEscapeKey = event.keyCode === KeyCode.escape;\n      const isTabKey = event.keyCode === KeyCode.tab;\n      if (isEscapeKey && visible) {\n        event.stopPropagation();\n      }\n      if (isTabKey || isEscapeKey) {\n        setVisible(false);\n      }\n    },\n    [visible]\n  );\n\n  useImperativeHandle(ref, () => ({\n    dismissPopover: onDismiss,\n    focus: () => {\n      setVisible(false);\n      focusTrigger();\n    },\n  }));\n\n  useEffect(() => {\n    if (!triggerRef.current) {\n      return;\n    }\n    const document = triggerRef.current.ownerDocument;\n\n    const onDocumentClick = () => {\n      // Dismiss popover unless there was a click inside within the last animation frame.\n      if (clickFrameId.current === null) {\n        setVisible(false);\n      }\n    };\n\n    document.addEventListener('mousedown', onDocumentClick);\n\n    return () => {\n      document.removeEventListener('mousedown', onDocumentClick);\n    };\n  }, []);\n\n  const popoverClasses = usePortalModeClasses(triggerRef);\n\n  const triggerProps = {\n    // https://github.com/microsoft/TypeScript/issues/36659\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ref: triggerRef as any,\n    onClick: onTriggerClick,\n    onKeyDown: onTriggerKeyDown,\n    className: clsx(styles.trigger, styles[`trigger-type-${triggerType}`]),\n  };\n  const { tabIndex: triggerTabIndex } = useSingleTabStopNavigation(triggerRef);\n\n  const referrerId = useUniqueId();\n\n  const popoverContent = (\n    <div\n      aria-live={dismissButton ? undefined : 'polite'}\n      aria-atomic={dismissButton ? undefined : true}\n      className={clsx(popoverClasses, !renderWithPortal && styles['popover-inline-content'])}\n      data-awsui-referrer-id={referrerId}\n    >\n      {visible && (\n        <PopoverContainer\n          size={size}\n          fixedWidth={fixedWidth}\n          position={position}\n          trackRef={triggerRef}\n          arrow={position => <Arrow position={position} />}\n          renderWithPortal={renderWithPortal}\n          zIndex={renderWithPortal ? 7000 : undefined}\n        >\n          <LinkDefaultVariantContext.Provider value={{ defaultVariant: 'primary' }}>\n            <PopoverBody\n              dismissButton={dismissButton}\n              dismissAriaLabel={dismissAriaLabel}\n              header={header}\n              onDismiss={onDismiss}\n              overflowVisible=\"both\"\n            >\n              {content}\n            </PopoverBody>\n          </LinkDefaultVariantContext.Provider>\n        </PopoverContainer>\n      )}\n    </div>\n  );\n\n  const mergedRef = useMergeRefs(popoverRef, __internalRootRef);\n\n  return (\n    <span\n      {...baseProps}\n      className={clsx(\n        styles.root,\n        baseProps.className,\n        triggerType === 'filtering-token' && styles['root-filtering-token']\n      )}\n      ref={mergedRef}\n      onMouseDown={() => {\n        // Indicate there was a click inside popover recently, including nested portals.\n        clickFrameId.current = requestAnimationFrame(() => {\n          clickFrameId.current = null;\n        });\n      }}\n    >\n      {triggerType === 'text' ? (\n        <button\n          {...triggerProps}\n          className={clsx(triggerProps.className, wrapTriggerText === false && styles['overflow-ellipsis'])}\n          tabIndex={triggerTabIndex}\n          type=\"button\"\n          aria-haspopup=\"dialog\"\n          id={referrerId}\n          aria-label={triggerAriaLabel}\n        >\n          {children}\n        </button>\n      ) : (\n        <span {...triggerProps} id={referrerId}>\n          {children}\n        </span>\n      )}\n      <ResetContextsForModal>\n        {renderWithPortal ? <Portal>{popoverContent}</Portal> : popoverContent}\n      </ResetContextsForModal>\n    </span>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}