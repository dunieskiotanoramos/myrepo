{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo, useEffect, useMemo, useRef, useState } from 'react';\nimport AxisLabel from '../internal/components/cartesian-chart/axis-label';\nimport BlockEndLabels, { useBLockEndLabels } from '../internal/components/cartesian-chart/block-end-labels';\nimport { CartesianChartContainer } from '../internal/components/cartesian-chart/chart-container';\nimport EmphasizedBaseline from '../internal/components/cartesian-chart/emphasized-baseline';\nimport InlineStartLabels from '../internal/components/cartesian-chart/inline-start-labels';\nimport LabelsMeasure from '../internal/components/cartesian-chart/labels-measure';\nimport ChartPlot from '../internal/components/chart-plot';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport useContainerWidth from '../internal/utils/use-container-width';\nimport { useSelector } from './async-store';\nimport AreaChartPopover from './elements/chart-popover';\nimport AreaDataSeries from './elements/data-series';\nimport AreaHighlightedPoint from './elements/highlighted-point';\nimport useHighlightDetails from './elements/use-highlight-details';\nimport AreaVerticalMarker from './elements/vertical-marker';\nconst DEFAULT_CHART_WIDTH = 500;\nconst INLINE_START_LABELS_MARGIN = 16;\nconst BLOCK_END_LABELS_OFFSET = 12;\nexport default memo(ChartContainer);\nfunction ChartContainer({\n  model,\n  autoWidth,\n  xTitle,\n  yTitle,\n  detailPopoverSize,\n  detailPopoverFooter,\n  ariaLabel,\n  ariaLabelledby,\n  ariaDescription,\n  i18nStrings: {\n    xTickFormatter: deprecatedXTickFormatter,\n    yTickFormatter: deprecatedYTickFormatter,\n    detailTotalFormatter: deprecatedDetailTotalFormatter,\n    detailTotalLabel,\n    chartAriaRoleDescription,\n    xAxisAriaRoleDescription,\n    yAxisAriaRoleDescription,\n    detailPopoverDismissAriaLabel\n  } = {},\n  fitHeight,\n  minHeight,\n  xTickFormatter = deprecatedXTickFormatter,\n  yTickFormatter = deprecatedYTickFormatter,\n  detailTotalFormatter = deprecatedDetailTotalFormatter\n}) {\n  const [inlineStartLabelsWidth, setInlineStartLabelsWidth] = useState(0);\n  const [containerWidth, containerWidthRef] = useContainerWidth(DEFAULT_CHART_WIDTH);\n  const maxInlineStartLabelsWidth = Math.round(containerWidth / 2);\n  const blockEndLabelsProps = useBLockEndLabels({\n    ticks: model.computed.xTicks,\n    scale: model.computed.xScale,\n    tickFormatter: xTickFormatter\n  });\n  // Calculate the width of the plot area and tell it to the parent.\n  const plotWidth = Math.max(0, containerWidth - inlineStartLabelsWidth - INLINE_START_LABELS_MARGIN);\n  useEffect(() => {\n    autoWidth(plotWidth);\n  }, [autoWidth, plotWidth]);\n  const highlightDetails = useHighlightDetails({\n    model,\n    xTickFormatter,\n    yTickFormatter,\n    detailTotalFormatter,\n    detailTotalLabel\n  });\n  const highlightedPointRef = useRef(null);\n  const mergedRef = useMergeRefs(containerWidthRef, model.refs.container);\n  const isPointHighlighted = model.interactions.get().highlightedPoint !== null;\n  const highlightedX = useSelector(model.interactions, state => state.highlightedX);\n  const detailPopoverFooterContent = useMemo(() => detailPopoverFooter && highlightedX ? detailPopoverFooter(highlightedX[0].x) : null, [detailPopoverFooter, highlightedX]);\n  return React.createElement(CartesianChartContainer, {\n    ref: mergedRef,\n    minHeight: minHeight + blockEndLabelsProps.height,\n    fitHeight: !!fitHeight,\n    leftAxisLabel: React.createElement(AxisLabel, {\n      axis: \"y\",\n      position: \"left\",\n      title: yTitle\n    }),\n    leftAxisLabelMeasure: React.createElement(LabelsMeasure, {\n      scale: model.computed.yScale,\n      ticks: model.computed.yTicks,\n      tickFormatter: yTickFormatter,\n      autoWidth: setInlineStartLabelsWidth,\n      maxLabelsWidth: maxInlineStartLabelsWidth\n    }),\n    bottomAxisLabel: React.createElement(AxisLabel, {\n      axis: \"x\",\n      position: \"bottom\",\n      title: xTitle\n    }),\n    chartPlot: React.createElement(ChartPlot, {\n      ref: model.refs.plot,\n      width: \"100%\",\n      height: fitHeight ? `calc(100% - ${blockEndLabelsProps.height}px)` : model.height,\n      offsetBottom: blockEndLabelsProps.height,\n      ariaLabel: ariaLabel,\n      ariaLabelledby: ariaLabelledby,\n      ariaDescription: ariaDescription,\n      ariaRoleDescription: chartAriaRoleDescription,\n      activeElementKey: !(highlightDetails === null || highlightDetails === void 0 ? void 0 : highlightDetails.isPopoverPinned) && (highlightDetails === null || highlightDetails === void 0 ? void 0 : highlightDetails.activeLabel),\n      activeElementRef: isPointHighlighted ? highlightedPointRef : model.refs.verticalMarker,\n      activeElementFocusOffset: isPointHighlighted ? 3 : {\n        x: 8,\n        y: 0\n      },\n      isClickable: !(highlightDetails === null || highlightDetails === void 0 ? void 0 : highlightDetails.isPopoverPinned),\n      onMouseMove: model.handlers.onSVGMouseMove,\n      onMouseOut: model.handlers.onSVGMouseOut,\n      onClick: model.handlers.onSVGMouseDown,\n      onKeyDown: model.handlers.onSVGKeyDown,\n      onApplicationFocus: model.handlers.onApplicationFocus,\n      onApplicationBlur: model.handlers.onApplicationBlur\n    }, React.createElement(\"line\", {\n      ref: model.refs.plotMeasure,\n      x1: \"0\",\n      x2: \"0\",\n      y1: \"0\",\n      y2: \"100%\",\n      stroke: \"transparent\",\n      strokeWidth: 1,\n      style: {\n        pointerEvents: 'none'\n      }\n    }), React.createElement(InlineStartLabels, {\n      plotWidth: model.width,\n      plotHeight: model.height,\n      scale: model.computed.yScale,\n      ticks: model.computed.yTicks,\n      tickFormatter: yTickFormatter,\n      title: yTitle,\n      ariaRoleDescription: yAxisAriaRoleDescription,\n      maxLabelsWidth: maxInlineStartLabelsWidth\n    }), React.createElement(AreaDataSeries, {\n      model: model\n    }), React.createElement(BlockEndLabels, Object.assign({}, blockEndLabelsProps, {\n      width: model.width,\n      height: model.height,\n      scale: model.computed.xScale,\n      title: xTitle,\n      ariaRoleDescription: xAxisAriaRoleDescription,\n      offsetLeft: inlineStartLabelsWidth + BLOCK_END_LABELS_OFFSET,\n      offsetRight: BLOCK_END_LABELS_OFFSET\n    })), React.createElement(EmphasizedBaseline, {\n      width: model.width,\n      height: model.height,\n      scale: model.computed.yScale\n    }), React.createElement(AreaVerticalMarker, {\n      model: model\n    }), React.createElement(AreaHighlightedPoint, {\n      ref: highlightedPointRef,\n      model: model,\n      ariaLabel: highlightDetails === null || highlightDetails === void 0 ? void 0 : highlightDetails.activeLabel\n    })),\n    popover: React.createElement(AreaChartPopover, {\n      model: model,\n      highlightDetails: highlightDetails,\n      dismissAriaLabel: detailPopoverDismissAriaLabel,\n      size: detailPopoverSize,\n      footer: detailPopoverFooterContent,\n      onBlur: model.handlers.onApplicationBlur\n    })\n  });\n}","map":{"version":3,"names":["React","memo","useEffect","useMemo","useRef","useState","AxisLabel","BlockEndLabels","useBLockEndLabels","CartesianChartContainer","EmphasizedBaseline","InlineStartLabels","LabelsMeasure","ChartPlot","useMergeRefs","useContainerWidth","useSelector","AreaChartPopover","AreaDataSeries","AreaHighlightedPoint","useHighlightDetails","AreaVerticalMarker","DEFAULT_CHART_WIDTH","INLINE_START_LABELS_MARGIN","BLOCK_END_LABELS_OFFSET","ChartContainer","model","autoWidth","xTitle","yTitle","detailPopoverSize","detailPopoverFooter","ariaLabel","ariaLabelledby","ariaDescription","i18nStrings","xTickFormatter","deprecatedXTickFormatter","yTickFormatter","deprecatedYTickFormatter","detailTotalFormatter","deprecatedDetailTotalFormatter","detailTotalLabel","chartAriaRoleDescription","xAxisAriaRoleDescription","yAxisAriaRoleDescription","detailPopoverDismissAriaLabel","fitHeight","minHeight","inlineStartLabelsWidth","setInlineStartLabelsWidth","containerWidth","containerWidthRef","maxInlineStartLabelsWidth","Math","round","blockEndLabelsProps","ticks","computed","xTicks","scale","xScale","tickFormatter","plotWidth","max","highlightDetails","highlightedPointRef","mergedRef","refs","container","isPointHighlighted","interactions","get","highlightedPoint","highlightedX","state","detailPopoverFooterContent","x","createElement","ref","height","leftAxisLabel","axis","position","title","leftAxisLabelMeasure","yScale","yTicks","maxLabelsWidth","bottomAxisLabel","chartPlot","plot","width","offsetBottom","ariaRoleDescription","activeElementKey","isPopoverPinned","activeLabel","activeElementRef","verticalMarker","activeElementFocusOffset","y","isClickable","onMouseMove","handlers","onSVGMouseMove","onMouseOut","onSVGMouseOut","onClick","onSVGMouseDown","onKeyDown","onSVGKeyDown","onApplicationFocus","onApplicationBlur","plotMeasure","x1","x2","y1","y2","stroke","strokeWidth","style","pointerEvents","plotHeight","Object","assign","offsetLeft","offsetRight","popover","dismissAriaLabel","size","footer","onBlur"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/area-chart/chart-container.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo, useEffect, useMemo, useRef, useState } from 'react';\n\nimport AxisLabel from '../internal/components/cartesian-chart/axis-label';\nimport BlockEndLabels, { useBLockEndLabels } from '../internal/components/cartesian-chart/block-end-labels';\nimport { CartesianChartContainer } from '../internal/components/cartesian-chart/chart-container';\nimport EmphasizedBaseline from '../internal/components/cartesian-chart/emphasized-baseline';\nimport InlineStartLabels from '../internal/components/cartesian-chart/inline-start-labels';\nimport LabelsMeasure from '../internal/components/cartesian-chart/labels-measure';\nimport ChartPlot from '../internal/components/chart-plot';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport useContainerWidth from '../internal/utils/use-container-width';\nimport { useSelector } from './async-store';\nimport AreaChartPopover from './elements/chart-popover';\nimport AreaDataSeries from './elements/data-series';\nimport AreaHighlightedPoint from './elements/highlighted-point';\nimport useHighlightDetails from './elements/use-highlight-details';\nimport AreaVerticalMarker from './elements/vertical-marker';\nimport { AreaChartProps } from './interfaces';\nimport { ChartModel } from './model';\n\nconst DEFAULT_CHART_WIDTH = 500;\nconst INLINE_START_LABELS_MARGIN = 16;\nconst BLOCK_END_LABELS_OFFSET = 12;\n\ntype TickFormatter = undefined | ((value: AreaChartProps.DataTypes) => string);\n\ninterface ChartContainerProps<T extends AreaChartProps.DataTypes>\n  extends Pick<\n    AreaChartProps<T>,\n    | 'xTitle'\n    | 'yTitle'\n    | 'xTickFormatter'\n    | 'yTickFormatter'\n    | 'detailTotalFormatter'\n    | 'detailPopoverSize'\n    | 'detailPopoverFooter'\n    | 'ariaLabel'\n    | 'ariaLabelledby'\n    | 'ariaDescription'\n    | 'i18nStrings'\n  > {\n  model: ChartModel<T>;\n  autoWidth: (value: number) => void;\n  fitHeight?: boolean;\n  minHeight: number;\n}\n\nexport default memo(ChartContainer) as typeof ChartContainer;\n\nfunction ChartContainer<T extends AreaChartProps.DataTypes>({\n  model,\n  autoWidth,\n  xTitle,\n  yTitle,\n  detailPopoverSize,\n  detailPopoverFooter,\n  ariaLabel,\n  ariaLabelledby,\n  ariaDescription,\n  i18nStrings: {\n    xTickFormatter: deprecatedXTickFormatter,\n    yTickFormatter: deprecatedYTickFormatter,\n    detailTotalFormatter: deprecatedDetailTotalFormatter,\n    detailTotalLabel,\n    chartAriaRoleDescription,\n    xAxisAriaRoleDescription,\n    yAxisAriaRoleDescription,\n    detailPopoverDismissAriaLabel,\n  } = {},\n  fitHeight,\n  minHeight,\n  xTickFormatter = deprecatedXTickFormatter,\n  yTickFormatter = deprecatedYTickFormatter,\n  detailTotalFormatter = deprecatedDetailTotalFormatter,\n}: ChartContainerProps<T>) {\n  const [inlineStartLabelsWidth, setInlineStartLabelsWidth] = useState(0);\n  const [containerWidth, containerWidthRef] = useContainerWidth(DEFAULT_CHART_WIDTH);\n  const maxInlineStartLabelsWidth = Math.round(containerWidth / 2);\n\n  const blockEndLabelsProps = useBLockEndLabels({\n    ticks: model.computed.xTicks,\n    scale: model.computed.xScale,\n    tickFormatter: xTickFormatter as TickFormatter,\n  });\n\n  // Calculate the width of the plot area and tell it to the parent.\n  const plotWidth = Math.max(0, containerWidth - inlineStartLabelsWidth - INLINE_START_LABELS_MARGIN);\n  useEffect(() => {\n    autoWidth(plotWidth);\n  }, [autoWidth, plotWidth]);\n\n  const highlightDetails = useHighlightDetails({\n    model,\n    xTickFormatter,\n    yTickFormatter,\n    detailTotalFormatter,\n    detailTotalLabel,\n  });\n\n  const highlightedPointRef = useRef<SVGGElement>(null);\n\n  const mergedRef = useMergeRefs(containerWidthRef, model.refs.container);\n\n  const isPointHighlighted = model.interactions.get().highlightedPoint !== null;\n\n  const highlightedX = useSelector(model.interactions, state => state.highlightedX);\n\n  const detailPopoverFooterContent = useMemo(\n    () => (detailPopoverFooter && highlightedX ? detailPopoverFooter(highlightedX[0].x) : null),\n    [detailPopoverFooter, highlightedX]\n  );\n\n  return (\n    <CartesianChartContainer\n      ref={mergedRef}\n      minHeight={minHeight + blockEndLabelsProps.height}\n      fitHeight={!!fitHeight}\n      leftAxisLabel={<AxisLabel axis=\"y\" position=\"left\" title={yTitle} />}\n      leftAxisLabelMeasure={\n        <LabelsMeasure\n          scale={model.computed.yScale}\n          ticks={model.computed.yTicks}\n          tickFormatter={yTickFormatter as TickFormatter}\n          autoWidth={setInlineStartLabelsWidth}\n          maxLabelsWidth={maxInlineStartLabelsWidth}\n        />\n      }\n      bottomAxisLabel={<AxisLabel axis=\"x\" position=\"bottom\" title={xTitle} />}\n      chartPlot={\n        <ChartPlot\n          ref={model.refs.plot}\n          width=\"100%\"\n          height={fitHeight ? `calc(100% - ${blockEndLabelsProps.height}px)` : model.height}\n          offsetBottom={blockEndLabelsProps.height}\n          ariaLabel={ariaLabel}\n          ariaLabelledby={ariaLabelledby}\n          ariaDescription={ariaDescription}\n          ariaRoleDescription={chartAriaRoleDescription}\n          activeElementKey={!highlightDetails?.isPopoverPinned && highlightDetails?.activeLabel}\n          activeElementRef={isPointHighlighted ? highlightedPointRef : model.refs.verticalMarker}\n          activeElementFocusOffset={isPointHighlighted ? 3 : { x: 8, y: 0 }}\n          isClickable={!highlightDetails?.isPopoverPinned}\n          onMouseMove={model.handlers.onSVGMouseMove}\n          onMouseOut={model.handlers.onSVGMouseOut}\n          onClick={model.handlers.onSVGMouseDown}\n          onKeyDown={model.handlers.onSVGKeyDown}\n          onApplicationFocus={model.handlers.onApplicationFocus}\n          onApplicationBlur={model.handlers.onApplicationBlur}\n        >\n          <line\n            ref={model.refs.plotMeasure}\n            x1=\"0\"\n            x2=\"0\"\n            y1=\"0\"\n            y2=\"100%\"\n            stroke=\"transparent\"\n            strokeWidth={1}\n            style={{ pointerEvents: 'none' }}\n          />\n\n          <InlineStartLabels\n            plotWidth={model.width}\n            plotHeight={model.height}\n            scale={model.computed.yScale}\n            ticks={model.computed.yTicks}\n            tickFormatter={yTickFormatter}\n            title={yTitle}\n            ariaRoleDescription={yAxisAriaRoleDescription}\n            maxLabelsWidth={maxInlineStartLabelsWidth}\n          />\n\n          <AreaDataSeries model={model} />\n\n          <BlockEndLabels\n            {...blockEndLabelsProps}\n            width={model.width}\n            height={model.height}\n            scale={model.computed.xScale}\n            title={xTitle}\n            ariaRoleDescription={xAxisAriaRoleDescription}\n            offsetLeft={inlineStartLabelsWidth + BLOCK_END_LABELS_OFFSET}\n            offsetRight={BLOCK_END_LABELS_OFFSET}\n          />\n\n          <EmphasizedBaseline width={model.width} height={model.height} scale={model.computed.yScale} />\n\n          <AreaVerticalMarker model={model} />\n\n          <AreaHighlightedPoint ref={highlightedPointRef} model={model} ariaLabel={highlightDetails?.activeLabel} />\n        </ChartPlot>\n      }\n      popover={\n        <AreaChartPopover\n          model={model}\n          highlightDetails={highlightDetails}\n          dismissAriaLabel={detailPopoverDismissAriaLabel}\n          size={detailPopoverSize}\n          footer={detailPopoverFooterContent}\n          onBlur={model.handlers.onApplicationBlur}\n        />\n      }\n    />\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}