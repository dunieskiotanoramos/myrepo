{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport InternalIcon from '../../icon/internal';\nimport { useDropdownContext } from '../../internal/components/dropdown/context';\nimport useHiddenDescription from '../../internal/hooks/use-hidden-description';\nimport Tooltip from '../tooltip';\nimport { getMenuItemCheckboxProps, getMenuItemProps } from '../utils/menu-item';\nimport { isCheckboxItem, isLinkItem } from '../utils/utils';\nimport { getItemTarget } from '../utils/utils';\nimport analyticsLabels from '../analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nconst ItemElement = ({\n  position = '1',\n  item,\n  disabled,\n  onItemActivate,\n  highlighted,\n  highlightItem,\n  showDivider,\n  hasCategoryHeader,\n  isKeyboardHighlighted = false,\n  variant = 'normal'\n}) => {\n  const isLink = isLinkItem(item);\n  const isCheckbox = isCheckboxItem(item);\n  const onClick = event => {\n    // Stop propagation to parent node and handle event exclusively in here. This ensures\n    // that no group will interfere with the default behavior of links\n    event.stopPropagation();\n    if (!isLink) {\n      event.preventDefault();\n    }\n    if (!disabled) {\n      onItemActivate(item, event);\n    }\n  };\n  const onHover = () => {\n    highlightItem(item);\n  };\n  return React.createElement(\"li\", Object.assign({\n    className: clsx(styles['item-element'], styles[`variant-${variant}`], {\n      [styles.highlighted]: highlighted,\n      [styles.disabled]: disabled,\n      [styles['has-category-header']]: hasCategoryHeader,\n      [styles['has-checkmark']]: isCheckbox,\n      [styles['show-divider']]: showDivider,\n      [styles['is-focused']]: isKeyboardHighlighted\n    }),\n    role: \"presentation\",\n    \"data-testid\": item.id,\n    \"data-description\": item.description,\n    onClick: onClick,\n    onMouseEnter: onHover,\n    onTouchStart: onHover\n  }, getAnalyticsMetadataAttribute(disabled ? {} : {\n    action: 'click',\n    detail: {\n      position,\n      id: item.id,\n      label: `.${analyticsLabels['menu-item']}`\n    }\n  })), React.createElement(MenuItem, {\n    item: item,\n    disabled: disabled,\n    highlighted: highlighted\n  }));\n};\nfunction MenuItem({\n  item,\n  disabled,\n  highlighted\n}) {\n  const menuItemRef = useRef(null);\n  const isCheckbox = isCheckboxItem(item);\n  useEffect(() => {\n    if (highlighted && menuItemRef.current) {\n      menuItemRef.current.focus();\n    }\n  }, [highlighted]);\n  const isDisabledWithReason = disabled && item.disabledReason;\n  const {\n    targetProps,\n    descriptionEl\n  } = useHiddenDescription(item.disabledReason);\n  const menuItemProps = Object.assign(Object.assign({\n    className: clsx(styles['menu-item'], analyticsLabels['menu-item']),\n    lang: item.lang,\n    ref: menuItemRef,\n    // We are using the roving tabindex technique to manage the focus state of the dropdown.\n    // The current element will always have tabindex=0 which means that it can be tabbed to,\n    // while all other items have tabindex=-1 so we can focus them when necessary.\n    tabIndex: highlighted ? 0 : -1\n  }, isCheckbox ? getMenuItemCheckboxProps({\n    disabled,\n    checked: item.checked\n  }) : getMenuItemProps({\n    disabled\n  })), isDisabledWithReason ? targetProps : {});\n  const menuItem = isLinkItem(item) ? React.createElement(\"a\", Object.assign({}, menuItemProps, {\n    href: !disabled ? item.href : undefined,\n    target: getItemTarget(item),\n    rel: item.external ? 'noopener noreferrer' : undefined\n  }), React.createElement(MenuItemContent, {\n    item: item,\n    disabled: disabled\n  })) : React.createElement(\"span\", Object.assign({}, menuItemProps), React.createElement(MenuItemContent, {\n    item: item,\n    disabled: disabled\n  }));\n  const {\n    position\n  } = useDropdownContext();\n  const tooltipPosition = position === 'bottom-left' || position === 'top-left' ? 'left' : 'right';\n  return isDisabledWithReason ? React.createElement(Tooltip, {\n    content: item.disabledReason,\n    position: tooltipPosition,\n    className: styles['item-tooltip-wrapper']\n  }, menuItem, descriptionEl) : menuItem;\n}\nconst MenuItemContent = ({\n  item,\n  disabled\n}) => {\n  const hasIcon = !!(item.iconName || item.iconUrl || item.iconSvg);\n  const hasExternal = isLinkItem(item) && item.external;\n  const isCheckbox = isCheckboxItem(item);\n  return React.createElement(React.Fragment, null, isCheckbox && React.createElement(MenuItemCheckmark, {\n    checked: item.checked,\n    disabled: disabled\n  }), hasIcon && React.createElement(MenuItemIcon, {\n    name: item.iconName,\n    url: item.iconUrl,\n    svg: item.iconSvg,\n    alt: item.iconAlt,\n    badge: item.badge\n  }), item.text, hasExternal && React.createElement(ExternalIcon, {\n    disabled: disabled,\n    ariaLabel: item.externalIconAriaLabel\n  }));\n};\nconst MenuItemIcon = props => React.createElement(\"span\", {\n  className: styles.icon\n}, React.createElement(InternalIcon, Object.assign({}, props)));\n// Toggle has aria-hidden set because it's just used as a graphical element,\n// a11y attributes for the checkmark are communicated through the role and aria-checked state\n// of the menu element item.\nconst MenuItemCheckmark = ({\n  disabled,\n  checked\n}) => {\n  const checkmark = React.createElement(InternalIcon, {\n    variant: disabled ? 'disabled' : 'normal',\n    name: \"check\"\n  });\n  return React.createElement(\"span\", {\n    className: clsx(styles.icon, styles.checkmark, {\n      [styles.disabled]: disabled\n    }),\n    \"aria-hidden\": \"true\",\n    style: {\n      visibility: checked ? 'visible' : 'hidden'\n    }\n  }, checkmark);\n};\nconst ExternalIcon = ({\n  disabled,\n  ariaLabel\n}) => {\n  const icon = React.createElement(InternalIcon, {\n    variant: disabled ? 'disabled' : 'normal',\n    name: \"external\"\n  });\n  return React.createElement(\"span\", {\n    className: styles['external-icon'],\n    role: ariaLabel ? 'img' : undefined,\n    \"aria-label\": ariaLabel\n  }, icon);\n};\nexport default ItemElement;","map":{"version":3,"names":["React","useEffect","useRef","clsx","getAnalyticsMetadataAttribute","InternalIcon","useDropdownContext","useHiddenDescription","Tooltip","getMenuItemCheckboxProps","getMenuItemProps","isCheckboxItem","isLinkItem","getItemTarget","analyticsLabels","styles","ItemElement","position","item","disabled","onItemActivate","highlighted","highlightItem","showDivider","hasCategoryHeader","isKeyboardHighlighted","variant","isLink","isCheckbox","onClick","event","stopPropagation","preventDefault","onHover","createElement","Object","assign","className","role","id","description","onMouseEnter","onTouchStart","action","detail","label","MenuItem","menuItemRef","current","focus","isDisabledWithReason","disabledReason","targetProps","descriptionEl","menuItemProps","lang","ref","tabIndex","checked","menuItem","href","undefined","target","rel","external","MenuItemContent","tooltipPosition","content","hasIcon","iconName","iconUrl","iconSvg","hasExternal","Fragment","MenuItemCheckmark","MenuItemIcon","name","url","svg","alt","iconAlt","badge","text","ExternalIcon","ariaLabel","externalIconAriaLabel","props","icon","checkmark","style","visibility"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/button-dropdown/item-element/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport InternalIcon, { InternalIconProps } from '../../icon/internal';\nimport { useDropdownContext } from '../../internal/components/dropdown/context';\nimport useHiddenDescription from '../../internal/hooks/use-hidden-description';\nimport { GeneratedAnalyticsMetadataButtonDropdownClick } from '../analytics-metadata/interfaces';\nimport { ItemProps } from '../interfaces';\nimport { ButtonDropdownProps } from '../interfaces';\nimport Tooltip from '../tooltip';\nimport { getMenuItemCheckboxProps, getMenuItemProps } from '../utils/menu-item';\nimport { isCheckboxItem, isLinkItem } from '../utils/utils';\nimport { getItemTarget } from '../utils/utils';\n\nimport analyticsLabels from '../analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\nconst ItemElement = ({\n  position = '1',\n  item,\n  disabled,\n  onItemActivate,\n  highlighted,\n  highlightItem,\n  showDivider,\n  hasCategoryHeader,\n  isKeyboardHighlighted = false,\n  variant = 'normal',\n}: ItemProps) => {\n  const isLink = isLinkItem(item);\n  const isCheckbox = isCheckboxItem(item);\n  const onClick = (event: React.MouseEvent) => {\n    // Stop propagation to parent node and handle event exclusively in here. This ensures\n    // that no group will interfere with the default behavior of links\n    event.stopPropagation();\n    if (!isLink) {\n      event.preventDefault();\n    }\n    if (!disabled) {\n      onItemActivate(item, event);\n    }\n  };\n\n  const onHover = () => {\n    highlightItem(item);\n  };\n\n  return (\n    <li\n      className={clsx(styles['item-element'], styles[`variant-${variant}`], {\n        [styles.highlighted]: highlighted,\n        [styles.disabled]: disabled,\n        [styles['has-category-header']]: hasCategoryHeader,\n        [styles['has-checkmark']]: isCheckbox,\n        [styles['show-divider']]: showDivider,\n        [styles['is-focused']]: isKeyboardHighlighted,\n      })}\n      role=\"presentation\"\n      data-testid={item.id}\n      data-description={item.description}\n      onClick={onClick}\n      onMouseEnter={onHover}\n      onTouchStart={onHover}\n      {...getAnalyticsMetadataAttribute(\n        disabled\n          ? {}\n          : ({\n              action: 'click',\n              detail: {\n                position,\n                id: item.id,\n                label: `.${analyticsLabels['menu-item']}`,\n              },\n            } as GeneratedAnalyticsMetadataButtonDropdownClick)\n      )}\n    >\n      <MenuItem item={item} disabled={disabled} highlighted={highlighted} />\n    </li>\n  );\n};\n\nexport type InternalItemProps = ButtonDropdownProps.Item & {\n  badge?: boolean;\n};\n\nexport type InternalCheckboxItemProps = ButtonDropdownProps.CheckboxItem & {\n  badge?: boolean;\n};\n\ninterface MenuItemProps {\n  item: InternalItemProps | InternalCheckboxItemProps;\n  disabled: boolean;\n  highlighted: boolean;\n}\n\nfunction MenuItem({ item, disabled, highlighted }: MenuItemProps) {\n  const menuItemRef = useRef<(HTMLSpanElement & HTMLAnchorElement) | null>(null);\n  const isCheckbox = isCheckboxItem(item);\n\n  useEffect(() => {\n    if (highlighted && menuItemRef.current) {\n      menuItemRef.current.focus();\n    }\n  }, [highlighted]);\n\n  const isDisabledWithReason = disabled && item.disabledReason;\n  const { targetProps, descriptionEl } = useHiddenDescription(item.disabledReason);\n  const menuItemProps: React.HTMLAttributes<HTMLSpanElement & HTMLAnchorElement> = {\n    className: clsx(styles['menu-item'], analyticsLabels['menu-item']),\n    lang: item.lang,\n    ref: menuItemRef,\n    // We are using the roving tabindex technique to manage the focus state of the dropdown.\n    // The current element will always have tabindex=0 which means that it can be tabbed to,\n    // while all other items have tabindex=-1 so we can focus them when necessary.\n    tabIndex: highlighted ? 0 : -1,\n    ...(isCheckbox ? getMenuItemCheckboxProps({ disabled, checked: item.checked }) : getMenuItemProps({ disabled })),\n    ...(isDisabledWithReason ? targetProps : {}),\n  };\n\n  const menuItem = isLinkItem(item) ? (\n    <a\n      {...menuItemProps}\n      href={!disabled ? item.href : undefined}\n      target={getItemTarget(item)}\n      rel={item.external ? 'noopener noreferrer' : undefined}\n    >\n      <MenuItemContent item={item} disabled={disabled} />\n    </a>\n  ) : (\n    <span {...menuItemProps}>\n      <MenuItemContent item={item} disabled={disabled} />\n    </span>\n  );\n\n  const { position } = useDropdownContext();\n  const tooltipPosition = position === 'bottom-left' || position === 'top-left' ? 'left' : 'right';\n  return isDisabledWithReason ? (\n    <Tooltip content={item.disabledReason} position={tooltipPosition} className={styles['item-tooltip-wrapper']}>\n      {menuItem}\n      {descriptionEl}\n    </Tooltip>\n  ) : (\n    menuItem\n  );\n}\n\nconst MenuItemContent = ({\n  item,\n  disabled,\n}: {\n  item: InternalItemProps | InternalCheckboxItemProps;\n  disabled: boolean;\n}) => {\n  const hasIcon = !!(item.iconName || item.iconUrl || item.iconSvg);\n  const hasExternal = isLinkItem(item) && item.external;\n  const isCheckbox = isCheckboxItem(item);\n  return (\n    <>\n      {isCheckbox && <MenuItemCheckmark checked={item.checked} disabled={disabled} />}\n      {hasIcon && (\n        <MenuItemIcon\n          name={item.iconName}\n          url={item.iconUrl}\n          svg={item.iconSvg}\n          alt={item.iconAlt}\n          badge={item.badge}\n        />\n      )}\n      {item.text}\n      {hasExternal && <ExternalIcon disabled={disabled} ariaLabel={item.externalIconAriaLabel} />}\n    </>\n  );\n};\n\nconst MenuItemIcon = (props: InternalIconProps) => (\n  <span className={styles.icon}>\n    <InternalIcon {...props} />\n  </span>\n);\n\n// Toggle has aria-hidden set because it's just used as a graphical element,\n// a11y attributes for the checkmark are communicated through the role and aria-checked state\n// of the menu element item.\nconst MenuItemCheckmark = ({ disabled, checked }: { disabled: boolean; checked: boolean }) => {\n  const checkmark = <InternalIcon variant={disabled ? 'disabled' : 'normal'} name=\"check\" />;\n  return (\n    <span\n      className={clsx(styles.icon, styles.checkmark, { [styles.disabled]: disabled })}\n      aria-hidden=\"true\"\n      style={{ visibility: checked ? 'visible' : 'hidden' }}\n    >\n      {checkmark}\n    </span>\n  );\n};\n\nconst ExternalIcon = ({ disabled, ariaLabel }: { disabled: boolean; ariaLabel?: string }) => {\n  const icon = <InternalIcon variant={disabled ? 'disabled' : 'normal'} name=\"external\" />;\n  return (\n    <span className={styles['external-icon']} role={ariaLabel ? 'img' : undefined} aria-label={ariaLabel}>\n      {icon}\n    </span>\n  );\n};\n\nexport default ItemElement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}