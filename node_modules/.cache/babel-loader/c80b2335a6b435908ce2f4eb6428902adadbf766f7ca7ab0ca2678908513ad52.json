{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalIcon from '../../../icon/internal';\nimport { getBaseProps } from '../../base-component';\nimport { fireCancelableEvent, fireKeyboardEvent } from '../../events';\nimport styles from './styles.css.js';\nconst ButtonTrigger = (_a, ref) => {\n  var {\n      children,\n      pressed = false,\n      hideCaret = false,\n      disabled = false,\n      readOnly = false,\n      invalid = false,\n      warning = false,\n      inlineTokens,\n      inFilteringToken,\n      ariaHasPopup,\n      ariaLabel,\n      ariaLabelledby,\n      ariaDescribedby,\n      ariaControls,\n      onKeyDown,\n      onKeyUp,\n      onMouseDown,\n      onClick,\n      onFocus,\n      onBlur,\n      autoFocus\n    } = _a,\n    restProps = __rest(_a, [\"children\", \"pressed\", \"hideCaret\", \"disabled\", \"readOnly\", \"invalid\", \"warning\", \"inlineTokens\", \"inFilteringToken\", \"ariaHasPopup\", \"ariaLabel\", \"ariaLabelledby\", \"ariaDescribedby\", \"ariaControls\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onClick\", \"onFocus\", \"onBlur\", \"autoFocus\"]);\n  const baseProps = getBaseProps(restProps);\n  let attributes = Object.assign(Object.assign({}, baseProps), {\n    type: 'button',\n    className: clsx(styles['button-trigger'], baseProps.className, pressed && styles.pressed, disabled && styles.disabled, invalid && styles.invalid, warning && !invalid && styles.warning, !hideCaret && styles['has-caret'], readOnly && styles.readonly, inFilteringToken && styles['in-filtering-token'], inlineTokens && styles['inline-tokens']),\n    disabled: disabled,\n    'aria-expanded': pressed,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescribedby,\n    'aria-haspopup': ariaHasPopup !== null && ariaHasPopup !== void 0 ? ariaHasPopup : 'listbox',\n    'aria-controls': ariaControls,\n    'aria-disabled': readOnly && !disabled ? 'true' : undefined,\n    autoFocus\n  });\n  if (!readOnly) {\n    attributes = Object.assign(Object.assign({}, attributes), {\n      onKeyDown: onKeyDown && (event => fireKeyboardEvent(onKeyDown, event)),\n      onKeyUp: onKeyUp && (event => fireKeyboardEvent(onKeyUp, event)),\n      onMouseDown: onMouseDown && (event => fireCancelableEvent(onMouseDown, {}, event)),\n      onClick: onClick && (event => fireCancelableEvent(onClick, {}, event)),\n      onFocus: onFocus && (event => fireCancelableEvent(onFocus, {}, event)),\n      onBlur: onBlur && (event => fireCancelableEvent(onBlur, {\n        relatedTarget: event.relatedTarget\n      }, event))\n    });\n  }\n  if (invalid) {\n    attributes['aria-invalid'] = invalid;\n  }\n  return React.createElement(\"button\", Object.assign({\n    ref: ref\n  }, attributes), children, !hideCaret && React.createElement(\"span\", {\n    className: styles.arrow\n  }, React.createElement(InternalIcon, {\n    name: \"caret-down-filled\",\n    variant: disabled || readOnly ? 'disabled' : 'normal'\n  })));\n};\nexport default React.forwardRef(ButtonTrigger);","map":{"version":3,"names":["React","clsx","InternalIcon","getBaseProps","fireCancelableEvent","fireKeyboardEvent","styles","ButtonTrigger","_a","ref","children","pressed","hideCaret","disabled","readOnly","invalid","warning","inlineTokens","inFilteringToken","ariaHasPopup","ariaLabel","ariaLabelledby","ariaDescribedby","ariaControls","onKeyDown","onKeyUp","onMouseDown","onClick","onFocus","onBlur","autoFocus","restProps","__rest","baseProps","attributes","Object","assign","type","className","readonly","undefined","event","relatedTarget","createElement","arrow","name","variant","forwardRef"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/internal/components/button-trigger/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { ButtonHTMLAttributes } from 'react';\nimport clsx from 'clsx';\n\nimport InternalIcon from '../../../icon/internal';\nimport { BaseComponentProps, getBaseProps } from '../../base-component';\nimport { BaseKeyDetail, CancelableEventHandler, fireCancelableEvent, fireKeyboardEvent } from '../../events';\n\nimport styles from './styles.css.js';\n\nexport interface ButtonTriggerProps extends BaseComponentProps {\n  children?: React.ReactNode;\n  pressed?: boolean;\n  hideCaret?: boolean;\n  disabled?: boolean;\n  readOnly?: boolean;\n  invalid?: boolean;\n  warning?: boolean;\n  inFilteringToken?: boolean;\n  inlineTokens?: boolean;\n  ariaHasPopup?: 'true' | 'listbox' | 'dialog';\n  ariaControls?: string;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n  onKeyDown?: CancelableEventHandler<BaseKeyDetail>;\n  onKeyUp?: CancelableEventHandler<BaseKeyDetail>;\n  onMouseDown?: CancelableEventHandler;\n  onClick?: CancelableEventHandler;\n  onFocus?: CancelableEventHandler;\n  onBlur?: CancelableEventHandler<{ relatedTarget: Node | null }>;\n  autoFocus?: boolean;\n}\n\nconst ButtonTrigger = (\n  {\n    children,\n    pressed = false,\n    hideCaret = false,\n    disabled = false,\n    readOnly = false,\n    invalid = false,\n    warning = false,\n    inlineTokens,\n    inFilteringToken,\n    ariaHasPopup,\n    ariaLabel,\n    ariaLabelledby,\n    ariaDescribedby,\n    ariaControls,\n    onKeyDown,\n    onKeyUp,\n    onMouseDown,\n    onClick,\n    onFocus,\n    onBlur,\n    autoFocus,\n    ...restProps\n  }: ButtonTriggerProps,\n  ref: React.Ref<HTMLButtonElement>\n) => {\n  const baseProps = getBaseProps(restProps);\n  let attributes: ButtonHTMLAttributes<HTMLButtonElement> = {\n    ...baseProps,\n    type: 'button',\n    className: clsx(\n      styles['button-trigger'],\n      baseProps.className,\n      pressed && styles.pressed,\n      disabled && styles.disabled,\n      invalid && styles.invalid,\n      warning && !invalid && styles.warning,\n      !hideCaret && styles['has-caret'],\n      readOnly && styles.readonly,\n      inFilteringToken && styles['in-filtering-token'],\n      inlineTokens && styles['inline-tokens']\n    ),\n    disabled: disabled,\n    'aria-expanded': pressed,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescribedby,\n    'aria-haspopup': ariaHasPopup ?? 'listbox',\n    'aria-controls': ariaControls,\n    'aria-disabled': readOnly && !disabled ? 'true' : undefined,\n    autoFocus,\n  };\n\n  if (!readOnly) {\n    attributes = {\n      ...attributes,\n      onKeyDown: onKeyDown && (event => fireKeyboardEvent(onKeyDown, event)),\n      onKeyUp: onKeyUp && (event => fireKeyboardEvent(onKeyUp, event)),\n      onMouseDown: onMouseDown && (event => fireCancelableEvent(onMouseDown, {}, event)),\n      onClick: onClick && (event => fireCancelableEvent(onClick, {}, event)),\n      onFocus: onFocus && (event => fireCancelableEvent(onFocus, {}, event)),\n      onBlur: onBlur && (event => fireCancelableEvent(onBlur, { relatedTarget: event.relatedTarget }, event)),\n    };\n  }\n\n  if (invalid) {\n    attributes['aria-invalid'] = invalid;\n  }\n\n  return (\n    <button ref={ref} {...attributes}>\n      {children}\n      {!hideCaret && (\n        <span className={styles.arrow}>\n          <InternalIcon name=\"caret-down-filled\" variant={disabled || readOnly ? 'disabled' : 'normal'} />\n        </span>\n      )}\n    </button>\n  );\n};\n\nexport namespace ButtonTriggerProps {\n  export interface Ref {\n    focus(): void;\n  }\n}\n\nexport default React.forwardRef(ButtonTrigger);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}