{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { copyAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport { useSingleTabStopNavigation } from '../internal/context/single-tab-stop-navigation-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nexport default React.forwardRef(function RadioButton(_a, ref) {\n  var {\n      name,\n      label,\n      value,\n      checked,\n      description,\n      disabled,\n      controlId,\n      onChange,\n      readOnly\n    } = _a,\n    rest = __rest(_a, [\"name\", \"label\", \"value\", \"checked\", \"description\", \"disabled\", \"controlId\", \"onChange\", \"readOnly\"]);\n  const isVisualRefresh = useVisualRefresh();\n  const radioButtonRef = useRef(null);\n  const mergedRefs = useMergeRefs(radioButtonRef, ref);\n  const {\n    tabIndex\n  } = useSingleTabStopNavigation(radioButtonRef);\n  return React.createElement(AbstractSwitch, Object.assign({\n    className: clsx(styles.radio, description && styles['radio--has-description']),\n    controlClassName: styles['radio-control'],\n    outlineClassName: styles.outline,\n    label: label,\n    description: description,\n    disabled: disabled,\n    readOnly: readOnly,\n    controlId: controlId\n  }, copyAnalyticsMetadataAttribute(rest), {\n    nativeControl: nativeControlProps => React.createElement(\"input\", Object.assign({}, nativeControlProps, {\n      tabIndex: tabIndex,\n      type: \"radio\",\n      ref: mergedRefs,\n      name: name,\n      value: value,\n      checked: checked,\n      \"aria-disabled\": readOnly && !disabled ? 'true' : undefined,\n      // empty handler to suppress React controllability warning\n      onChange: () => {}\n    })),\n    onClick: () => {\n      var _a;\n      (_a = radioButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      if (checked) {\n        return;\n      }\n      fireNonCancelableEvent(onChange, {\n        value\n      });\n    },\n    styledControl: React.createElement(\"svg\", {\n      viewBox: \"0 0 100 100\",\n      focusable: \"false\",\n      \"aria-hidden\": \"true\"\n    }, React.createElement(\"circle\", {\n      className: clsx(styles['styled-circle-border'], {\n        [styles['styled-circle-disabled']]: disabled,\n        [styles['styled-circle-readonly']]: readOnly\n      }),\n      strokeWidth: isVisualRefresh ? 12 : 8,\n      cx: 50,\n      cy: 50,\n      r: isVisualRefresh ? 44 : 46\n    }), React.createElement(\"circle\", {\n      className: clsx(styles['styled-circle-fill'], {\n        [styles['styled-circle-disabled']]: disabled,\n        [styles['styled-circle-checked']]: checked,\n        [styles['styled-circle-readonly']]: readOnly\n      }),\n      strokeWidth: 30,\n      cx: 50,\n      cy: 50,\n      r: 35\n    }))\n  }));\n});","map":{"version":3,"names":["React","useRef","clsx","copyAnalyticsMetadataAttribute","AbstractSwitch","useSingleTabStopNavigation","fireNonCancelableEvent","useMergeRefs","useVisualRefresh","styles","forwardRef","RadioButton","_a","ref","name","label","value","checked","description","disabled","controlId","onChange","readOnly","rest","__rest","isVisualRefresh","radioButtonRef","mergedRefs","tabIndex","createElement","Object","assign","className","radio","controlClassName","outlineClassName","outline","nativeControl","nativeControlProps","type","undefined","onClick","current","focus","styledControl","viewBox","focusable","strokeWidth","cx","cy","r"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/radio-group/radio-button.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { copyAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport { useSingleTabStopNavigation } from '../internal/context/single-tab-stop-navigation-context';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { RadioGroupProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\ninterface RadioButtonProps extends RadioGroupProps.RadioButtonDefinition {\n  name: string;\n  checked: boolean;\n  onChange?: NonCancelableEventHandler<RadioGroupProps.ChangeDetail>;\n  readOnly?: boolean;\n}\n\nexport default React.forwardRef(function RadioButton(\n  { name, label, value, checked, description, disabled, controlId, onChange, readOnly, ...rest }: RadioButtonProps,\n  ref: React.Ref<HTMLInputElement>\n) {\n  const isVisualRefresh = useVisualRefresh();\n  const radioButtonRef = useRef<HTMLInputElement>(null);\n  const mergedRefs = useMergeRefs(radioButtonRef, ref);\n\n  const { tabIndex } = useSingleTabStopNavigation(radioButtonRef);\n\n  return (\n    <AbstractSwitch\n      className={clsx(styles.radio, description && styles['radio--has-description'])}\n      controlClassName={styles['radio-control']}\n      outlineClassName={styles.outline}\n      label={label}\n      description={description}\n      disabled={disabled}\n      readOnly={readOnly}\n      controlId={controlId}\n      {...copyAnalyticsMetadataAttribute(rest)}\n      nativeControl={nativeControlProps => (\n        <input\n          {...nativeControlProps}\n          tabIndex={tabIndex}\n          type=\"radio\"\n          ref={mergedRefs}\n          name={name}\n          value={value}\n          checked={checked}\n          aria-disabled={readOnly && !disabled ? 'true' : undefined}\n          // empty handler to suppress React controllability warning\n          onChange={() => {}}\n        />\n      )}\n      onClick={() => {\n        radioButtonRef.current?.focus();\n        if (checked) {\n          return;\n        }\n        fireNonCancelableEvent(onChange, { value });\n      }}\n      styledControl={\n        <svg viewBox=\"0 0 100 100\" focusable=\"false\" aria-hidden=\"true\">\n          <circle\n            className={clsx(styles['styled-circle-border'], {\n              [styles['styled-circle-disabled']]: disabled,\n              [styles['styled-circle-readonly']]: readOnly,\n            })}\n            strokeWidth={isVisualRefresh ? 12 : 8}\n            cx={50}\n            cy={50}\n            r={isVisualRefresh ? 44 : 46}\n          />\n          <circle\n            className={clsx(styles['styled-circle-fill'], {\n              [styles['styled-circle-disabled']]: disabled,\n              [styles['styled-circle-checked']]: checked,\n              [styles['styled-circle-readonly']]: readOnly,\n            })}\n            strokeWidth={30}\n            cx={50}\n            cy={50}\n            r={35}\n          />\n        </svg>\n      }\n    />\n  );\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}