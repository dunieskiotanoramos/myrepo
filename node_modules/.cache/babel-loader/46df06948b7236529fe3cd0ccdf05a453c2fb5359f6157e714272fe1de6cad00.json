{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport balanced from 'balanced-match';\nexport function findUpUntil(node, callback) {\n  let current = node;\n  while (current && !callback(current)) {\n    current = current.parentElement;\n    // If a component is used within an svg (i.e. as foreignObject), then it will\n    // have some ancestor nodes that are SVGElement. We want to skip those,\n    // as they have very different properties to HTMLElements.\n    while (current && !(current instanceof HTMLElement)) {\n      current = current.parentElement;\n    }\n  }\n  return current;\n}\n/**\n * Returns an element that is used to position the given element.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block\n */\nexport function getContainingBlock(startElement) {\n  if (!startElement.parentElement) {\n    return null;\n  }\n  return findUpUntil(startElement.parentElement, element => {\n    var _a;\n    const computedStyle = getComputedStyle(element);\n    return !!computedStyle.transform && computedStyle.transform !== 'none' || !!computedStyle.perspective && computedStyle.perspective !== 'none' || !!computedStyle.containerType && computedStyle.containerType !== 'normal' || ((_a = computedStyle.contain) === null || _a === void 0 ? void 0 : _a.split(' ').some(s => ['layout', 'paint', 'strict', 'content'].includes(s)));\n  });\n}\nconst cssVariableExpression = /--.+?\\s*,\\s*(.+)/;\n/**\n * Parses a CSS color value that might contain CSS Custom Properties\n * and returns a value that will be understood by the browser, no matter of support level.\n * If the browser support CSS Custom Properties, the value will be return as is. Otherwise,\n * the fallback value will be extracted and returned instead.\n */\nexport function parseCssVariable(value) {\n  var _a, _b, _c;\n  if ((_c = (_b = (_a = window.CSS) === null || _a === void 0 ? void 0 : _a.supports) === null || _b === void 0 ? void 0 : _b.call(_a, 'color', 'var(--dummy, #000)')) !== null && _c !== void 0 ? _c : false) {\n    return value;\n  }\n  const varIndex = value.lastIndexOf('var(');\n  if (varIndex === -1) {\n    return value;\n  }\n  const expr = balanced('(', ')', value.substr(varIndex));\n  if (!expr) {\n    return value;\n  }\n  const match = expr.body.match(cssVariableExpression);\n  return match ? match[1] : value;\n}","map":{"version":3,"names":["balanced","findUpUntil","node","callback","current","parentElement","HTMLElement","getContainingBlock","startElement","element","computedStyle","getComputedStyle","transform","perspective","containerType","_a","contain","split","some","s","includes","cssVariableExpression","parseCssVariable","value","_c","_b","window","CSS","supports","call","varIndex","lastIndexOf","expr","substr","match","body"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/internal/utils/dom.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport balanced from 'balanced-match';\n\nexport function findUpUntil(node: HTMLElement, callback: (element: HTMLElement) => boolean): HTMLElement | null {\n  let current: HTMLElement | null = node;\n  while (current && !callback(current)) {\n    current = current.parentElement;\n    // If a component is used within an svg (i.e. as foreignObject), then it will\n    // have some ancestor nodes that are SVGElement. We want to skip those,\n    // as they have very different properties to HTMLElements.\n    while (current && !(current instanceof HTMLElement)) {\n      current = (current as Element).parentElement;\n    }\n  }\n  return current;\n}\n\n/**\n * Returns an element that is used to position the given element.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block\n */\nexport function getContainingBlock(startElement: HTMLElement): HTMLElement | null {\n  if (!startElement.parentElement) {\n    return null;\n  }\n\n  return findUpUntil(startElement.parentElement, element => {\n    const computedStyle = getComputedStyle(element);\n    return (\n      (!!computedStyle.transform && computedStyle.transform !== 'none') ||\n      (!!computedStyle.perspective && computedStyle.perspective !== 'none') ||\n      (!!computedStyle.containerType && computedStyle.containerType !== 'normal') ||\n      computedStyle.contain?.split(' ').some(s => ['layout', 'paint', 'strict', 'content'].includes(s))\n    );\n  }) as HTMLElement;\n}\n\nconst cssVariableExpression = /--.+?\\s*,\\s*(.+)/;\n\n/**\n * Parses a CSS color value that might contain CSS Custom Properties\n * and returns a value that will be understood by the browser, no matter of support level.\n * If the browser support CSS Custom Properties, the value will be return as is. Otherwise,\n * the fallback value will be extracted and returned instead.\n */\nexport function parseCssVariable(value: string) {\n  if (window.CSS?.supports?.('color', 'var(--dummy, #000)') ?? false) {\n    return value;\n  }\n\n  const varIndex = value.lastIndexOf('var(');\n  if (varIndex === -1) {\n    return value;\n  }\n\n  const expr = balanced('(', ')', value.substr(varIndex));\n  if (!expr) {\n    return value;\n  }\n\n  const match = expr.body.match(cssVariableExpression);\n  return match ? match[1] : value;\n}\n"],"mappings":"AAAA;AACA;AACA,OAAOA,QAAQ,MAAM,gBAAgB;AAErC,OAAM,SAAUC,WAAWA,CAACC,IAAiB,EAAEC,QAA2C;EACxF,IAAIC,OAAO,GAAuBF,IAAI;EACtC,OAAOE,OAAO,IAAI,CAACD,QAAQ,CAACC,OAAO,CAAC,EAAE;IACpCA,OAAO,GAAGA,OAAO,CAACC,aAAa;IAC/B;IACA;IACA;IACA,OAAOD,OAAO,IAAI,EAAEA,OAAO,YAAYE,WAAW,CAAC,EAAE;MACnDF,OAAO,GAAIA,OAAmB,CAACC,aAAa;;;EAGhD,OAAOD,OAAO;AAChB;AAEA;;;;AAIA,OAAM,SAAUG,kBAAkBA,CAACC,YAAyB;EAC1D,IAAI,CAACA,YAAY,CAACH,aAAa,EAAE;IAC/B,OAAO,IAAI;;EAGb,OAAOJ,WAAW,CAACO,YAAY,CAACH,aAAa,EAAEI,OAAO,IAAG;;IACvD,MAAMC,aAAa,GAAGC,gBAAgB,CAACF,OAAO,CAAC;IAC/C,OACG,CAAC,CAACC,aAAa,CAACE,SAAS,IAAIF,aAAa,CAACE,SAAS,KAAK,MAAM,IAC/D,CAAC,CAACF,aAAa,CAACG,WAAW,IAAIH,aAAa,CAACG,WAAW,KAAK,MAAO,IACpE,CAAC,CAACH,aAAa,CAACI,aAAa,IAAIJ,aAAa,CAACI,aAAa,KAAK,QAAS,KAC3E,CAAAC,EAAA,GAAAL,aAAa,CAACM,OAAO,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,KAAK,CAAC,GAAG,EAAEC,IAAI,CAACC,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC,CAACC,QAAQ,CAACD,CAAC,CAAC,CAAC;EAErG,CAAC,CAAgB;AACnB;AAEA,MAAME,qBAAqB,GAAG,kBAAkB;AAEhD;;;;;;AAMA,OAAM,SAAUC,gBAAgBA,CAACC,KAAa;;EAC5C,IAAI,CAAAC,EAAA,IAAAC,EAAA,IAAAV,EAAA,GAAAW,MAAM,CAACC,GAAG,cAAAZ,EAAA,uBAAAA,EAAA,CAAEa,QAAQ,cAAAH,EAAA,uBAAAA,EAAA,CAAAI,IAAA,CAAAd,EAAA,EAAG,OAAO,EAAE,oBAAoB,CAAC,cAAAS,EAAA,cAAAA,EAAA,GAAI,KAAK,EAAE;IAClE,OAAOD,KAAK;;EAGd,MAAMO,QAAQ,GAAGP,KAAK,CAACQ,WAAW,CAAC,MAAM,CAAC;EAC1C,IAAID,QAAQ,KAAK,CAAC,CAAC,EAAE;IACnB,OAAOP,KAAK;;EAGd,MAAMS,IAAI,GAAGhC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAEuB,KAAK,CAACU,MAAM,CAACH,QAAQ,CAAC,CAAC;EACvD,IAAI,CAACE,IAAI,EAAE;IACT,OAAOT,KAAK;;EAGd,MAAMW,KAAK,GAAGF,IAAI,CAACG,IAAI,CAACD,KAAK,CAACb,qBAAqB,CAAC;EACpD,OAAOa,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGX,KAAK;AACjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}