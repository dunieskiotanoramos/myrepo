{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { InternalButton } from '../button/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { getAllFocusables } from '../internal/components/focus-lock/utils';\nimport Tooltip from '../internal/components/tooltip';\nimport { SingleTabStopNavigationProvider, useSingleTabStopNavigation } from '../internal/context/single-tab-stop-navigation-context';\nimport { hasModifierKeys, isPlainLeftClick } from '../internal/events';\nimport useHiddenDescription from '../internal/hooks/use-hidden-description';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { KeyCode } from '../internal/keycode';\nimport { circleIndex } from '../internal/utils/circle-index';\nimport handleKey from '../internal/utils/handle-key';\nimport { hasHorizontalOverflow, hasInlineEndOverflow, hasInlineStartOverflow, onPaginationClick, scrollIntoView } from './scroll-utils';\nimport styles from './styles.css.js';\nconst tabSelector = `.${styles['tabs-tab-link']}`;\nconst focusedTabSelector = `[role=\"tab\"].${styles['tabs-tab-focused']}`;\nconst focusableTabSelector = `.${styles['tabs-tab-focusable']}`;\nfunction dismissButton(dismissLabel, dismissDisabled, onDismiss) {\n  return React.createElement(InternalButton, {\n    onClick: onDismiss,\n    variant: \"icon\",\n    iconName: \"close\",\n    formAction: \"none\",\n    ariaLabel: dismissLabel,\n    disabled: dismissDisabled\n  });\n}\nexport function TabHeaderBar({\n  onChange,\n  activeTabId,\n  tabs,\n  variant,\n  idNamespace,\n  ariaLabel,\n  ariaLabelledby,\n  i18nStrings\n}) {\n  const headerBarRef = useRef(null);\n  const activeTabHeaderRef = useRef(null);\n  const inlineStartOverflowButton = useRef(null);\n  const i18n = useInternalI18n('tabs');\n  const isVisualRefresh = useVisualRefresh();\n  const containerObjectRef = useRef(null);\n  const [widthChange, containerMeasureRef] = useContainerQuery(rect => rect.contentBoxWidth);\n  const containerRef = useMergeRefs(containerObjectRef, containerMeasureRef);\n  const tabRefs = useRef(new Map());\n  const [horizontalOverflow, setHorizontalOverflow] = useState(false);\n  const [inlineStartOverflow, setInlineStartOverflow] = useState(false);\n  const [inlineEndOverflow, setInlineEndOverflow] = useState(false);\n  const [focusedTabId, setFocusedTabId] = useState(activeTabId);\n  const [previousActiveTabId, setPreviousActiveTabId] = useState(activeTabId);\n  const hasActionOrDismissible = tabs.some(tab => tab.action || tab.dismissible);\n  const tabActionAttributes = hasActionOrDismissible ? {\n    role: 'application',\n    'aria-roledescription': i18n('i18nStrings.tabsWithActionsAriaRoleDescription', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.tabsWithActionsAriaRoleDescription)\n  } : {\n    role: 'tablist'\n  };\n  useEffect(() => {\n    if (headerBarRef.current) {\n      setHorizontalOverflow(hasHorizontalOverflow(headerBarRef.current, inlineStartOverflowButton));\n      setInlineStartOverflow(hasInlineStartOverflow(headerBarRef.current));\n      setInlineEndOverflow(hasInlineEndOverflow(headerBarRef.current));\n    }\n  }, [widthChange, tabs]);\n  const scrollIntoViewIfPossible = smooth => {\n    if (!activeTabId) {\n      return;\n    }\n    const activeTabRef = tabRefs.current.get(activeTabId);\n    if (activeTabRef && headerBarRef.current) {\n      scrollIntoView(activeTabRef, headerBarRef.current, smooth);\n    }\n  };\n  useEffect(() => {\n    // Delay scrollIntoView as the position is depending on parent elements\n    // (effects are called inside-out in the component tree).\n    // Wait one frame to allow parents to complete it's calculation.\n    requestAnimationFrame(() => {\n      scrollIntoViewIfPossible(false);\n    });\n    // Non-smooth scrolling should not be called upon activeId change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [horizontalOverflow, widthChange, tabs.length]);\n  useEffect(() => {\n    scrollIntoViewIfPossible(true);\n    // Smooth scrolling should only be called upon activeId change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeTabId]);\n  useEffect(() => {\n    var _a, _b;\n    /*\n     When the selected tab changes and we are currently already focused on a tab,\n     move the focus to the newly selected tab.\n    */\n    if ((_a = headerBarRef.current) === null || _a === void 0 ? void 0 : _a.contains(document.activeElement)) {\n      if (document.activeElement !== activeTabHeaderRef.current) {\n        (_b = activeTabHeaderRef.current) === null || _b === void 0 ? void 0 : _b.focus({\n          preventScroll: true\n        });\n      }\n    }\n  }, [activeTabId]);\n  const onScroll = () => {\n    if (headerBarRef.current) {\n      setInlineStartOverflow(hasInlineStartOverflow(headerBarRef.current));\n      setInlineEndOverflow(hasInlineEndOverflow(headerBarRef.current));\n    }\n  };\n  const classes = clsx({\n    [styles['tabs-header']]: true,\n    [styles['tabs-header-with-divider']]: variant === 'default' || isVisualRefresh\n  });\n  const leftButtonClasses = clsx({\n    [styles['pagination-button']]: true,\n    [styles['pagination-button-left']]: true,\n    [styles['pagination-button-left-scrollable']]: inlineStartOverflow\n  });\n  const rightButtonClasses = clsx({\n    [styles['pagination-button']]: true,\n    [styles['pagination-button-right']]: true,\n    [styles['pagination-button-right-scrollable']]: inlineEndOverflow\n  });\n  const navigationAPI = useRef(null);\n  function getNextFocusTarget() {\n    var _a, _b;\n    if (!containerObjectRef.current) {\n      return null;\n    }\n    const tabElements = Array.from(containerObjectRef.current.querySelectorAll(tabSelector));\n    return (_b = (_a = tabElements.find(tab => tab.matches(focusedTabSelector))) !== null && _a !== void 0 ? _a : tabElements.find(tab => !tab.disabled)) !== null && _b !== void 0 ? _b : null;\n  }\n  function onUnregisterActive(focusableElement) {\n    var _a;\n    const isFocusableActionOrDismissible = !focusableElement.classList.contains(styles['tabs-tab-link']);\n    if (!isFocusableActionOrDismissible) {\n      const nextFocusTarget = (_a = navigationAPI.current) === null || _a === void 0 ? void 0 : _a.getFocusTarget();\n      const tabLinkButton = nextFocusTarget === null || nextFocusTarget === void 0 ? void 0 : nextFocusTarget.querySelector(`.${styles['tabs-tab-link']}`);\n      tabLinkButton === null || tabLinkButton === void 0 ? void 0 : tabLinkButton.focus();\n    }\n  }\n  useEffect(() => {\n    var _a;\n    (_a = navigationAPI.current) === null || _a === void 0 ? void 0 : _a.updateFocusTarget();\n  });\n  function onFocus() {\n    var _a;\n    (_a = navigationAPI.current) === null || _a === void 0 ? void 0 : _a.updateFocusTarget();\n  }\n  function onBlur() {\n    var _a;\n    (_a = navigationAPI.current) === null || _a === void 0 ? void 0 : _a.updateFocusTarget();\n  }\n  function onKeyDown(event) {\n    const focusTarget = document.activeElement;\n    const specialKeys = [KeyCode.right, KeyCode.left, KeyCode.end, KeyCode.home, KeyCode.pageUp, KeyCode.pageDown];\n    const isActionOpen = document.querySelector(`.${styles['tabs-tab-action']} [aria-expanded=\"true\"]`);\n    const isDismissOrActionFocused = !(focusTarget === null || focusTarget === void 0 ? void 0 : focusTarget.classList.contains(styles['tabs-tab-link']));\n    if (isActionOpen) {\n      return;\n    }\n    if (event.key === 'Tab' && !event.shiftKey && isDismissOrActionFocused) {\n      event.preventDefault();\n      const panelId = `${idNamespace}-${activeTabId}-panel`;\n      const panel = document.getElementById(panelId);\n      panel === null || panel === void 0 ? void 0 : panel.focus();\n    }\n    if (hasModifierKeys(event) || specialKeys.indexOf(event.keyCode) === -1) {\n      return;\n    }\n    if (!containerObjectRef.current || !focusTarget) {\n      return;\n    }\n    event.preventDefault();\n    const focusables = getFocusablesFrom(containerObjectRef.current);\n    const activeIndex = document.activeElement instanceof HTMLElement ? focusables.indexOf(document.activeElement) : -1;\n    handleKey(event, {\n      onHome: () => focusElement(focusables[0]),\n      onEnd: () => focusElement(focusables[focusables.length - 1]),\n      onInlineStart: () => focusElement(focusables[circleIndex(activeIndex - 1, [0, focusables.length - 1])]),\n      onInlineEnd: () => focusElement(focusables[circleIndex(activeIndex + 1, [0, focusables.length - 1])]),\n      onPageDown: () => inlineEndOverflow && onPaginationClick(headerBarRef, 'forward'),\n      onPageUp: () => inlineStartOverflow && onPaginationClick(headerBarRef, 'backward')\n    });\n  }\n  function focusElement(element) {\n    var _a, _b;\n    element.focus();\n    // If focusable element is a tab - fire the onChange for it.\n    const tabsById = tabs.reduce((map, tab) => map.set(tab.id, tab), new Map());\n    for (const [tabId, focusTargetTabTriggerElement] of tabRefs.current.entries()) {\n      const focusTargetTabLabelElement = focusTargetTabTriggerElement === null || focusTargetTabTriggerElement === void 0 ? void 0 : focusTargetTabTriggerElement.querySelector(`.${styles['tabs-tab-link']}`);\n      if (tabId !== activeTabId && focusTargetTabLabelElement === element) {\n        setPreviousActiveTabId(tabId);\n        setFocusedTabId(tabId);\n        if (!((_a = tabsById.get(tabId)) === null || _a === void 0 ? void 0 : _a.disabled)) {\n          onChange({\n            activeTabId: tabId,\n            activeTabHref: (_b = tabsById.get(tabId)) === null || _b === void 0 ? void 0 : _b.href\n          });\n        }\n        break;\n      }\n    }\n  }\n  // List all non-disabled and registered focusables: those are eligible for keyboard navigation.\n  function getFocusablesFrom(target) {\n    function isElementRegistered(element) {\n      var _a, _b;\n      return (_b = (_a = navigationAPI.current) === null || _a === void 0 ? void 0 : _a.isRegistered(element)) !== null && _b !== void 0 ? _b : false;\n    }\n    function isElementFocusable(element) {\n      if (element instanceof HTMLButtonElement) {\n        return !element.disabled || element.closest(focusableTabSelector);\n      }\n      return element.matches(focusableTabSelector);\n    }\n    return getAllFocusables(target).filter(el => isElementRegistered(el) && isElementFocusable(el));\n  }\n  const TabList = hasActionOrDismissible ? 'div' : 'ul';\n  return (\n    //converted span to div as list should not be a child of span for HTML validation\n    React.createElement(\"div\", {\n      className: classes,\n      ref: containerRef\n    }, horizontalOverflow && React.createElement(\"span\", {\n      ref: inlineStartOverflowButton,\n      className: leftButtonClasses\n    }, React.createElement(InternalButton, {\n      formAction: \"none\",\n      variant: \"icon\",\n      iconName: \"angle-left\",\n      disabled: !inlineStartOverflow,\n      __focusable: true,\n      onClick: () => onPaginationClick(headerBarRef, 'backward'),\n      ariaLabel: i18n('i18nStrings.scrollLeftAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.scrollLeftAriaLabel)\n    })), React.createElement(SingleTabStopNavigationProvider, {\n      ref: navigationAPI,\n      navigationActive: true,\n      getNextFocusTarget: getNextFocusTarget,\n      onUnregisterActive: onUnregisterActive\n    }, React.createElement(TabList, Object.assign({}, tabActionAttributes, {\n      className: styles['tabs-header-list'],\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledby,\n      ref: headerBarRef,\n      onScroll: onScroll,\n      onKeyDown: onKeyDown,\n      onFocus: onFocus,\n      onBlur: onBlur\n    }), tabs.map(renderTabHeader))), horizontalOverflow && React.createElement(\"span\", {\n      className: rightButtonClasses\n    }, React.createElement(InternalButton, {\n      formAction: \"none\",\n      variant: \"icon\",\n      iconName: \"angle-right\",\n      disabled: !inlineEndOverflow,\n      __focusable: true,\n      onClick: () => onPaginationClick(headerBarRef, 'forward'),\n      ariaLabel: i18n('i18nStrings.scrollRightAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.scrollRightAriaLabel)\n    })))\n  );\n  function renderTabHeader(tab) {\n    const {\n      dismissible,\n      dismissLabel,\n      dismissDisabled,\n      action,\n      onDismiss\n    } = tab;\n    const isActive = activeTabId === tab.id && !tab.disabled;\n    const clickTab = event => {\n      if (tab.disabled) {\n        event.preventDefault();\n        return;\n      }\n      // if the primary mouse button is clicked with a modifier key, the browser will handle opening a new tab\n      const specialKey = !isPlainLeftClick(event);\n      if (specialKey && tab.href) {\n        return;\n      }\n      event.preventDefault();\n      // for browsers that do not focus buttons on button click\n      if (!tab.href) {\n        const clickedTabRef = tabRefs.current.get(tab.id);\n        if (clickedTabRef) {\n          if (clickedTabRef && clickedTabRef !== document.activeElement) {\n            clickedTabRef.focus({\n              preventScroll: true\n            });\n          }\n        }\n      }\n      if (tab.id === activeTabId) {\n        return;\n      }\n      setFocusedTabId(tab.id);\n      setPreviousActiveTabId(tab.id);\n      onChange({\n        activeTabId: tab.id,\n        activeTabHref: tab.href\n      });\n    };\n    const classes = clsx({\n      [styles['tabs-tab-link']]: true,\n      [styles.refresh]: isVisualRefresh,\n      [styles['tabs-tab-active']]: activeTabId === tab.id && !tab.disabled,\n      [styles['tabs-tab-focused']]: focusedTabId === tab.id,\n      [styles['tabs-tab-active']]: isActive,\n      [styles['tabs-tab-disabled']]: tab.disabled,\n      [styles['tabs-tab-focusable']]: !tab.disabled || tab.disabled && !!tab.disabledReason\n    });\n    const tabHeaderContainerClasses = clsx({\n      [styles['tabs-tab-header-container']]: true,\n      [styles.refresh]: isVisualRefresh,\n      [styles['tabs-tab-active']]: isActive,\n      [styles['tabs-tab-disabled']]: tab.disabled,\n      [styles['tabs-tab-focusable']]: !tab.disabled || tab.disabled && !!tab.disabledReason\n    });\n    const tabActionClasses = clsx({\n      [styles['tabs-tab-action']]: true,\n      [styles['tabs-tab-active']]: isActive\n    });\n    const commonProps = {\n      className: classes,\n      'aria-controls': `${idNamespace}-${tab.id}-panel`,\n      'data-testid': tab.id,\n      id: getTabElementId({\n        namespace: idNamespace,\n        tabId: tab.id\n      }),\n      onClick: clickTab\n    };\n    const tabHeaderContainerAriaProps = hasActionOrDismissible ? {\n      role: 'group',\n      'aria-labelledby': commonProps.id\n    } : {};\n    if (!hasActionOrDismissible) {\n      commonProps['aria-selected'] = activeTabId === tab.id;\n      commonProps.role = 'tab';\n    } else {\n      commonProps['aria-expanded'] = activeTabId === tab.id;\n    }\n    if (tab.disabled) {\n      commonProps['aria-disabled'] = 'true';\n    }\n    const setElement = tabElement => {\n      if (tab.id === activeTabId) {\n        activeTabHeaderRef.current = tabElement;\n      }\n      tabRefs.current.set(tab.id, tabElement);\n    };\n    const handleDismiss = event => {\n      if (!containerObjectRef.current || !onDismiss) {\n        return;\n      }\n      const tabElements = getFocusablesFrom(containerObjectRef.current).filter(el => el.classList.contains(styles['tabs-tab-link']));\n      const activeTabIndex = tabElements.findIndex(el => el.dataset.testid === tab.id);\n      tabElements.splice(activeTabIndex, 1);\n      let nextActive;\n      if (previousActiveTabId && previousActiveTabId !== tab.id) {\n        nextActive = tabElements.find(el => el.dataset.testid === previousActiveTabId);\n      } else {\n        nextActive = tabElements[Math.min(tabElements.length - 1, activeTabIndex)];\n      }\n      if (nextActive && nextActive.dataset.testid) {\n        onChange({\n          activeTabId: nextActive.dataset.testid\n        });\n        nextActive.focus();\n      }\n      onDismiss(event);\n    };\n    const TabItem = hasActionOrDismissible ? 'div' : 'li';\n    return React.createElement(TabItem, {\n      ref: element => tabRefs.current.set(tab.id, element),\n      className: styles['tabs-tab'],\n      role: \"presentation\",\n      key: tab.id\n    }, React.createElement(\"div\", Object.assign({\n      className: tabHeaderContainerClasses\n    }, tabHeaderContainerAriaProps), React.createElement(TabTrigger, {\n      ref: setElement,\n      tab: tab,\n      elementProps: commonProps\n    }), action && React.createElement(\"span\", {\n      className: tabActionClasses\n    }, action), dismissible && React.createElement(\"span\", {\n      className: styles['tabs-tab-dismiss']\n    }, dismissButton(dismissLabel, dismissDisabled, handleDismiss))));\n  }\n}\nconst TabTrigger = forwardRef(({\n  tab,\n  elementProps\n}, ref) => {\n  const refObject = useRef(null);\n  const tabLabelRefObject = useRef(null);\n  const mergedRef = useMergeRefs(refObject, ref);\n  const {\n    tabIndex\n  } = useSingleTabStopNavigation(refObject);\n  const isDisabledWithReason = tab.disabled && !!tab.disabledReason;\n  const [showTooltip, setShowTooltip] = useState(false);\n  const {\n    targetProps,\n    descriptionEl\n  } = useHiddenDescription(tab.disabledReason);\n  const children = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: styles['tabs-tab-label'],\n    ref: tabLabelRefObject\n  }, tab.label), isDisabledWithReason && React.createElement(React.Fragment, null, descriptionEl, showTooltip && React.createElement(Tooltip, {\n    className: styles['disabled-reason-tooltip'],\n    trackRef: tabLabelRefObject,\n    value: tab.disabledReason\n  })));\n  const handlers = {\n    onFocus: () => setShowTooltip(true),\n    onBlur: () => setShowTooltip(false),\n    onMouseEnter: () => setShowTooltip(true),\n    onMouseLeave: () => setShowTooltip(false)\n  };\n  const commonProps = Object.assign(Object.assign(Object.assign(Object.assign({}, elementProps), isDisabledWithReason ? targetProps : {}), isDisabledWithReason ? handlers : {}), {\n    ref: mergedRef,\n    tabIndex: tabIndex\n  });\n  return tab.href ? React.createElement(\"a\", Object.assign({}, commonProps, {\n    href: tab.href\n  }), children) : React.createElement(\"button\", Object.assign({}, commonProps, {\n    type: \"button\",\n    disabled: tab.disabled && !isDisabledWithReason\n  }), children);\n});\nexport function getTabElementId({\n  namespace,\n  tabId\n}) {\n  return namespace + '-' + tabId;\n}","map":{"version":3,"names":["React","forwardRef","useEffect","useRef","useState","clsx","useContainerQuery","InternalButton","useInternalI18n","getAllFocusables","Tooltip","SingleTabStopNavigationProvider","useSingleTabStopNavigation","hasModifierKeys","isPlainLeftClick","useHiddenDescription","useMergeRefs","useVisualRefresh","KeyCode","circleIndex","handleKey","hasHorizontalOverflow","hasInlineEndOverflow","hasInlineStartOverflow","onPaginationClick","scrollIntoView","styles","tabSelector","focusedTabSelector","focusableTabSelector","dismissButton","dismissLabel","dismissDisabled","onDismiss","createElement","onClick","variant","iconName","formAction","ariaLabel","disabled","TabHeaderBar","onChange","activeTabId","tabs","idNamespace","ariaLabelledby","i18nStrings","headerBarRef","activeTabHeaderRef","inlineStartOverflowButton","i18n","isVisualRefresh","containerObjectRef","widthChange","containerMeasureRef","rect","contentBoxWidth","containerRef","tabRefs","Map","horizontalOverflow","setHorizontalOverflow","inlineStartOverflow","setInlineStartOverflow","inlineEndOverflow","setInlineEndOverflow","focusedTabId","setFocusedTabId","previousActiveTabId","setPreviousActiveTabId","hasActionOrDismissible","some","tab","action","dismissible","tabActionAttributes","role","tabsWithActionsAriaRoleDescription","current","scrollIntoViewIfPossible","smooth","activeTabRef","get","requestAnimationFrame","length","_a","contains","document","activeElement","_b","focus","preventScroll","onScroll","classes","leftButtonClasses","rightButtonClasses","navigationAPI","getNextFocusTarget","tabElements","Array","from","querySelectorAll","find","matches","onUnregisterActive","focusableElement","isFocusableActionOrDismissible","classList","nextFocusTarget","getFocusTarget","tabLinkButton","querySelector","updateFocusTarget","onFocus","onBlur","onKeyDown","event","focusTarget","specialKeys","right","left","end","home","pageUp","pageDown","isActionOpen","isDismissOrActionFocused","key","shiftKey","preventDefault","panelId","panel","getElementById","indexOf","keyCode","focusables","getFocusablesFrom","activeIndex","HTMLElement","onHome","focusElement","onEnd","onInlineStart","onInlineEnd","onPageDown","onPageUp","element","tabsById","reduce","map","set","id","tabId","focusTargetTabTriggerElement","entries","focusTargetTabLabelElement","activeTabHref","href","target","isElementRegistered","isRegistered","isElementFocusable","HTMLButtonElement","closest","filter","el","TabList","className","ref","__focusable","scrollLeftAriaLabel","navigationActive","Object","assign","renderTabHeader","scrollRightAriaLabel","isActive","clickTab","specialKey","clickedTabRef","refresh","disabledReason","tabHeaderContainerClasses","tabActionClasses","commonProps","getTabElementId","namespace","tabHeaderContainerAriaProps","setElement","tabElement","handleDismiss","activeTabIndex","findIndex","dataset","testid","splice","nextActive","Math","min","TabItem","TabTrigger","elementProps","refObject","tabLabelRefObject","mergedRef","tabIndex","isDisabledWithReason","showTooltip","setShowTooltip","targetProps","descriptionEl","children","Fragment","label","trackRef","value","handlers","onMouseEnter","onMouseLeave","type"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/tabs/tab-header-bar.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\n\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { getAllFocusables } from '../internal/components/focus-lock/utils';\nimport Tooltip from '../internal/components/tooltip';\nimport {\n  SingleTabStopNavigationAPI,\n  SingleTabStopNavigationProvider,\n  useSingleTabStopNavigation,\n} from '../internal/context/single-tab-stop-navigation-context';\nimport { hasModifierKeys, isPlainLeftClick } from '../internal/events';\nimport useHiddenDescription from '../internal/hooks/use-hidden-description';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { KeyCode } from '../internal/keycode';\nimport { circleIndex } from '../internal/utils/circle-index';\nimport handleKey from '../internal/utils/handle-key';\nimport { TabsProps } from './interfaces';\nimport {\n  hasHorizontalOverflow,\n  hasInlineEndOverflow,\n  hasInlineStartOverflow,\n  onPaginationClick,\n  scrollIntoView,\n} from './scroll-utils';\n\nimport styles from './styles.css.js';\n\nconst tabSelector = `.${styles['tabs-tab-link']}`;\nconst focusedTabSelector = `[role=\"tab\"].${styles['tabs-tab-focused']}`;\nconst focusableTabSelector = `.${styles['tabs-tab-focusable']}`;\n\nfunction dismissButton(\n  dismissLabel: TabsProps.Tab['dismissLabel'],\n  dismissDisabled: TabsProps.Tab['dismissDisabled'],\n  onDismiss: TabsProps.Tab['onDismiss']\n) {\n  return (\n    <InternalButton\n      onClick={onDismiss}\n      variant=\"icon\"\n      iconName=\"close\"\n      formAction=\"none\"\n      ariaLabel={dismissLabel}\n      disabled={dismissDisabled}\n    />\n  );\n}\n\nexport interface TabHeaderBarProps {\n  onChange: (changeDetail: TabsProps.ChangeDetail) => void;\n  activeTabId: TabsProps['activeTabId'];\n  tabs: TabsProps['tabs'];\n  variant: TabsProps['variant'];\n  idNamespace: string;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  i18nStrings?: TabsProps.I18nStrings;\n}\n\nexport function TabHeaderBar({\n  onChange,\n  activeTabId,\n  tabs,\n  variant,\n  idNamespace,\n  ariaLabel,\n  ariaLabelledby,\n  i18nStrings,\n}: TabHeaderBarProps) {\n  const headerBarRef = useRef<HTMLUListElement>(null);\n  const activeTabHeaderRef = useRef<null | HTMLElement>(null);\n  const inlineStartOverflowButton = useRef<HTMLElement>(null);\n  const i18n = useInternalI18n('tabs');\n\n  const isVisualRefresh = useVisualRefresh();\n\n  const containerObjectRef = useRef<HTMLDivElement>(null);\n  const [widthChange, containerMeasureRef] = useContainerQuery<number>(rect => rect.contentBoxWidth);\n  const containerRef = useMergeRefs(containerObjectRef, containerMeasureRef);\n  const tabRefs = useRef<Map<string, HTMLElement>>(new Map());\n  const [horizontalOverflow, setHorizontalOverflow] = useState(false);\n  const [inlineStartOverflow, setInlineStartOverflow] = useState(false);\n  const [inlineEndOverflow, setInlineEndOverflow] = useState(false);\n  const [focusedTabId, setFocusedTabId] = useState(activeTabId);\n  const [previousActiveTabId, setPreviousActiveTabId] = useState<string | undefined>(activeTabId);\n  const hasActionOrDismissible = tabs.some(tab => tab.action || tab.dismissible);\n  const tabActionAttributes = hasActionOrDismissible\n    ? {\n        role: 'application',\n        'aria-roledescription': i18n(\n          'i18nStrings.tabsWithActionsAriaRoleDescription',\n          i18nStrings?.tabsWithActionsAriaRoleDescription\n        ),\n      }\n    : {\n        role: 'tablist',\n      };\n\n  useEffect(() => {\n    if (headerBarRef.current) {\n      setHorizontalOverflow(hasHorizontalOverflow(headerBarRef.current, inlineStartOverflowButton));\n      setInlineStartOverflow(hasInlineStartOverflow(headerBarRef.current));\n      setInlineEndOverflow(hasInlineEndOverflow(headerBarRef.current));\n    }\n  }, [widthChange, tabs]);\n\n  const scrollIntoViewIfPossible = (smooth: boolean) => {\n    if (!activeTabId) {\n      return;\n    }\n    const activeTabRef = tabRefs.current.get(activeTabId);\n    if (activeTabRef && headerBarRef.current) {\n      scrollIntoView(activeTabRef, headerBarRef.current, smooth);\n    }\n  };\n\n  useEffect(() => {\n    // Delay scrollIntoView as the position is depending on parent elements\n    // (effects are called inside-out in the component tree).\n    // Wait one frame to allow parents to complete it's calculation.\n    requestAnimationFrame(() => {\n      scrollIntoViewIfPossible(false);\n    });\n    // Non-smooth scrolling should not be called upon activeId change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [horizontalOverflow, widthChange, tabs.length]);\n\n  useEffect(() => {\n    scrollIntoViewIfPossible(true);\n    // Smooth scrolling should only be called upon activeId change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeTabId]);\n\n  useEffect(() => {\n    /*\n     When the selected tab changes and we are currently already focused on a tab,\n     move the focus to the newly selected tab.\n    */\n    if (headerBarRef.current?.contains(document.activeElement)) {\n      if (document.activeElement !== activeTabHeaderRef.current) {\n        activeTabHeaderRef.current?.focus({ preventScroll: true });\n      }\n    }\n  }, [activeTabId]);\n\n  const onScroll = () => {\n    if (headerBarRef.current) {\n      setInlineStartOverflow(hasInlineStartOverflow(headerBarRef.current));\n      setInlineEndOverflow(hasInlineEndOverflow(headerBarRef.current));\n    }\n  };\n\n  const classes = clsx({\n    [styles['tabs-header']]: true,\n    [styles['tabs-header-with-divider']]: variant === 'default' || isVisualRefresh,\n  });\n\n  const leftButtonClasses = clsx({\n    [styles['pagination-button']]: true,\n    [styles['pagination-button-left']]: true,\n    [styles['pagination-button-left-scrollable']]: inlineStartOverflow,\n  });\n\n  const rightButtonClasses = clsx({\n    [styles['pagination-button']]: true,\n    [styles['pagination-button-right']]: true,\n    [styles['pagination-button-right-scrollable']]: inlineEndOverflow,\n  });\n\n  const navigationAPI = useRef<SingleTabStopNavigationAPI>(null);\n\n  function getNextFocusTarget(): null | HTMLElement {\n    if (!containerObjectRef.current) {\n      return null;\n    }\n    const tabElements: HTMLButtonElement[] = Array.from(containerObjectRef.current.querySelectorAll(tabSelector));\n    return tabElements.find(tab => tab.matches(focusedTabSelector)) ?? tabElements.find(tab => !tab.disabled) ?? null;\n  }\n\n  function onUnregisterActive(focusableElement: HTMLElement) {\n    const isFocusableActionOrDismissible = !focusableElement.classList.contains(styles['tabs-tab-link']);\n    if (!isFocusableActionOrDismissible) {\n      const nextFocusTarget = navigationAPI.current?.getFocusTarget();\n      const tabLinkButton = nextFocusTarget?.querySelector(`.${styles['tabs-tab-link']}`) as HTMLElement;\n      tabLinkButton?.focus();\n    }\n  }\n\n  useEffect(() => {\n    navigationAPI.current?.updateFocusTarget();\n  });\n  function onFocus() {\n    navigationAPI.current?.updateFocusTarget();\n  }\n  function onBlur() {\n    navigationAPI.current?.updateFocusTarget();\n  }\n\n  function onKeyDown(event: React.KeyboardEvent) {\n    const focusTarget = document.activeElement;\n    const specialKeys = [KeyCode.right, KeyCode.left, KeyCode.end, KeyCode.home, KeyCode.pageUp, KeyCode.pageDown];\n    const isActionOpen = document.querySelector(`.${styles['tabs-tab-action']} [aria-expanded=\"true\"]`);\n    const isDismissOrActionFocused = !focusTarget?.classList.contains(styles['tabs-tab-link']);\n\n    if (isActionOpen) {\n      return;\n    }\n    if (event.key === 'Tab' && !event.shiftKey && isDismissOrActionFocused) {\n      event.preventDefault();\n      const panelId = `${idNamespace}-${activeTabId}-panel`;\n      const panel = document.getElementById(panelId);\n      panel?.focus();\n    }\n    if (hasModifierKeys(event) || specialKeys.indexOf(event.keyCode) === -1) {\n      return;\n    }\n    if (!containerObjectRef.current || !focusTarget) {\n      return;\n    }\n    event.preventDefault();\n\n    const focusables = getFocusablesFrom(containerObjectRef.current);\n    const activeIndex = document.activeElement instanceof HTMLElement ? focusables.indexOf(document.activeElement) : -1;\n    handleKey(event as any, {\n      onHome: () => focusElement(focusables[0]),\n      onEnd: () => focusElement(focusables[focusables.length - 1]),\n      onInlineStart: () => focusElement(focusables[circleIndex(activeIndex - 1, [0, focusables.length - 1])]),\n      onInlineEnd: () => focusElement(focusables[circleIndex(activeIndex + 1, [0, focusables.length - 1])]),\n      onPageDown: () => inlineEndOverflow && onPaginationClick(headerBarRef, 'forward'),\n      onPageUp: () => inlineStartOverflow && onPaginationClick(headerBarRef, 'backward'),\n    });\n  }\n  function focusElement(element: HTMLElement) {\n    element.focus();\n    // If focusable element is a tab - fire the onChange for it.\n    const tabsById = tabs.reduce((map, tab) => map.set(tab.id, tab), new Map<string, TabsProps.Tab>());\n    for (const [tabId, focusTargetTabTriggerElement] of tabRefs.current.entries()) {\n      const focusTargetTabLabelElement = focusTargetTabTriggerElement?.querySelector(`.${styles['tabs-tab-link']}`);\n      if (tabId !== activeTabId && focusTargetTabLabelElement === element) {\n        setPreviousActiveTabId(tabId);\n        setFocusedTabId(tabId);\n\n        if (!tabsById.get(tabId)?.disabled) {\n          onChange({ activeTabId: tabId, activeTabHref: tabsById.get(tabId)?.href });\n        }\n        break;\n      }\n    }\n  }\n  // List all non-disabled and registered focusables: those are eligible for keyboard navigation.\n  function getFocusablesFrom(target: HTMLElement) {\n    function isElementRegistered(element: HTMLElement) {\n      return navigationAPI.current?.isRegistered(element) ?? false;\n    }\n    function isElementFocusable(element: HTMLElement) {\n      if (element instanceof HTMLButtonElement) {\n        return !element.disabled || element.closest(focusableTabSelector);\n      }\n\n      return element.matches(focusableTabSelector);\n    }\n    return getAllFocusables(target).filter(el => isElementRegistered(el) && isElementFocusable(el));\n  }\n\n  const TabList = hasActionOrDismissible ? 'div' : 'ul';\n\n  return (\n    //converted span to div as list should not be a child of span for HTML validation\n    <div className={classes} ref={containerRef}>\n      {horizontalOverflow && (\n        <span ref={inlineStartOverflowButton} className={leftButtonClasses}>\n          <InternalButton\n            formAction=\"none\"\n            variant=\"icon\"\n            iconName=\"angle-left\"\n            disabled={!inlineStartOverflow}\n            __focusable={true}\n            onClick={() => onPaginationClick(headerBarRef, 'backward')}\n            ariaLabel={i18n('i18nStrings.scrollLeftAriaLabel', i18nStrings?.scrollLeftAriaLabel)}\n          />\n        </span>\n      )}\n      <SingleTabStopNavigationProvider\n        ref={navigationAPI}\n        navigationActive={true}\n        getNextFocusTarget={getNextFocusTarget}\n        onUnregisterActive={onUnregisterActive}\n      >\n        <TabList\n          {...tabActionAttributes}\n          className={styles['tabs-header-list']}\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledby}\n          ref={headerBarRef as never}\n          onScroll={onScroll}\n          onKeyDown={onKeyDown}\n          onFocus={onFocus}\n          onBlur={onBlur}\n        >\n          {tabs.map(renderTabHeader)}\n        </TabList>\n      </SingleTabStopNavigationProvider>\n      {horizontalOverflow && (\n        <span className={rightButtonClasses}>\n          <InternalButton\n            formAction=\"none\"\n            variant=\"icon\"\n            iconName=\"angle-right\"\n            disabled={!inlineEndOverflow}\n            __focusable={true}\n            onClick={() => onPaginationClick(headerBarRef, 'forward')}\n            ariaLabel={i18n('i18nStrings.scrollRightAriaLabel', i18nStrings?.scrollRightAriaLabel)}\n          />\n        </span>\n      )}\n    </div>\n  );\n\n  function renderTabHeader(tab: TabsProps.Tab) {\n    const { dismissible, dismissLabel, dismissDisabled, action, onDismiss } = tab;\n    const isActive = activeTabId === tab.id && !tab.disabled;\n\n    const clickTab = (event: React.MouseEvent) => {\n      if (tab.disabled) {\n        event.preventDefault();\n        return;\n      }\n\n      // if the primary mouse button is clicked with a modifier key, the browser will handle opening a new tab\n      const specialKey = !isPlainLeftClick(event);\n      if (specialKey && tab.href) {\n        return;\n      }\n\n      event.preventDefault();\n      // for browsers that do not focus buttons on button click\n      if (!tab.href) {\n        const clickedTabRef = tabRefs.current.get(tab.id) as undefined | HTMLButtonElement;\n        if (clickedTabRef) {\n          if (clickedTabRef && clickedTabRef !== document.activeElement) {\n            clickedTabRef.focus({ preventScroll: true });\n          }\n        }\n      }\n\n      if (tab.id === activeTabId) {\n        return;\n      }\n\n      setFocusedTabId(tab.id);\n      setPreviousActiveTabId(tab.id);\n      onChange({ activeTabId: tab.id, activeTabHref: tab.href });\n    };\n\n    const classes = clsx({\n      [styles['tabs-tab-link']]: true,\n      [styles.refresh]: isVisualRefresh,\n      [styles['tabs-tab-active']]: activeTabId === tab.id && !tab.disabled,\n      [styles['tabs-tab-focused']]: focusedTabId === tab.id,\n      [styles['tabs-tab-active']]: isActive,\n      [styles['tabs-tab-disabled']]: tab.disabled,\n      [styles['tabs-tab-focusable']]: !tab.disabled || (tab.disabled && !!tab.disabledReason),\n    });\n\n    const tabHeaderContainerClasses = clsx({\n      [styles['tabs-tab-header-container']]: true,\n      [styles.refresh]: isVisualRefresh,\n      [styles['tabs-tab-active']]: isActive,\n      [styles['tabs-tab-disabled']]: tab.disabled,\n      [styles['tabs-tab-focusable']]: !tab.disabled || (tab.disabled && !!tab.disabledReason),\n    });\n\n    const tabActionClasses = clsx({\n      [styles['tabs-tab-action']]: true,\n      [styles['tabs-tab-active']]: isActive,\n    });\n\n    const commonProps: (JSX.IntrinsicElements['a'] | JSX.IntrinsicElements['button']) & { 'data-testid': string } = {\n      className: classes,\n      'aria-controls': `${idNamespace}-${tab.id}-panel`,\n      'data-testid': tab.id,\n      id: getTabElementId({ namespace: idNamespace, tabId: tab.id }),\n      onClick: clickTab,\n    };\n\n    const tabHeaderContainerAriaProps = hasActionOrDismissible\n      ? {\n          role: 'group',\n          'aria-labelledby': commonProps.id,\n        }\n      : {};\n\n    if (!hasActionOrDismissible) {\n      commonProps['aria-selected'] = activeTabId === tab.id;\n      commonProps.role = 'tab';\n    } else {\n      commonProps['aria-expanded'] = activeTabId === tab.id;\n    }\n\n    if (tab.disabled) {\n      commonProps['aria-disabled'] = 'true';\n    }\n\n    const setElement = (tabElement: null | HTMLElement) => {\n      if (tab.id === activeTabId) {\n        activeTabHeaderRef.current = tabElement;\n      }\n      tabRefs.current.set(tab.id, tabElement as HTMLElement);\n    };\n\n    const handleDismiss: ButtonProps['onClick'] = event => {\n      if (!containerObjectRef.current || !onDismiss) {\n        return;\n      }\n      const tabElements = getFocusablesFrom(containerObjectRef.current).filter(el =>\n        el.classList.contains(styles['tabs-tab-link'])\n      );\n      const activeTabIndex = tabElements.findIndex(el => el.dataset.testid === tab.id);\n      tabElements.splice(activeTabIndex, 1);\n      let nextActive: HTMLElement | undefined;\n      if (previousActiveTabId && previousActiveTabId !== tab.id) {\n        nextActive = tabElements.find(el => el.dataset.testid === previousActiveTabId);\n      } else {\n        nextActive = tabElements[Math.min(tabElements.length - 1, activeTabIndex)];\n      }\n      if (nextActive && nextActive.dataset.testid) {\n        onChange({ activeTabId: nextActive.dataset.testid });\n        nextActive.focus();\n      }\n      onDismiss(event);\n    };\n\n    const TabItem = hasActionOrDismissible ? 'div' : 'li';\n    return (\n      <TabItem\n        ref={(element: any) => tabRefs.current.set(tab.id, element as HTMLElement)}\n        className={styles['tabs-tab']}\n        role=\"presentation\"\n        key={tab.id}\n      >\n        <div className={tabHeaderContainerClasses} {...tabHeaderContainerAriaProps}>\n          <TabTrigger ref={setElement} tab={tab} elementProps={commonProps} />\n          {action && <span className={tabActionClasses}>{action}</span>}\n          {dismissible && (\n            <span className={styles['tabs-tab-dismiss']}>\n              {dismissButton(dismissLabel, dismissDisabled, handleDismiss)}\n            </span>\n          )}\n        </div>\n      </TabItem>\n    );\n  }\n}\n\nconst TabTrigger = forwardRef(\n  (\n    {\n      tab,\n      elementProps,\n    }: { tab: TabsProps.Tab; elementProps: React.HTMLAttributes<HTMLAnchorElement | HTMLButtonElement> },\n    ref: React.Ref<HTMLElement>\n  ) => {\n    const refObject = useRef<HTMLElement>(null);\n    const tabLabelRefObject = useRef<HTMLElement>(null);\n    const mergedRef = useMergeRefs(refObject, ref);\n    const { tabIndex } = useSingleTabStopNavigation(refObject);\n    const isDisabledWithReason = tab.disabled && !!tab.disabledReason;\n    const [showTooltip, setShowTooltip] = useState(false);\n    const { targetProps, descriptionEl } = useHiddenDescription(tab.disabledReason);\n    const children = (\n      <>\n        <span className={styles['tabs-tab-label']} ref={tabLabelRefObject}>\n          {tab.label}\n        </span>\n        {isDisabledWithReason && (\n          <>\n            {descriptionEl}\n            {showTooltip && (\n              <Tooltip\n                className={styles['disabled-reason-tooltip']}\n                trackRef={tabLabelRefObject}\n                value={tab.disabledReason!}\n              />\n            )}\n          </>\n        )}\n      </>\n    );\n\n    const handlers = {\n      onFocus: () => setShowTooltip(true),\n      onBlur: () => setShowTooltip(false),\n      onMouseEnter: () => setShowTooltip(true),\n      onMouseLeave: () => setShowTooltip(false),\n    };\n\n    const commonProps = {\n      ...elementProps,\n      ...(isDisabledWithReason ? targetProps : {}),\n      ...(isDisabledWithReason ? handlers : {}),\n      ref: mergedRef,\n      tabIndex: tabIndex,\n    };\n\n    return tab.href ? (\n      <a {...commonProps} href={tab.href}>\n        {children}\n      </a>\n    ) : (\n      <button {...commonProps} type=\"button\" disabled={tab.disabled && !isDisabledWithReason}>\n        {children}\n      </button>\n    );\n  }\n);\n\nexport function getTabElementId({ namespace, tabId }: { namespace: string; tabId: string }) {\n  return namespace + '-' + tabId;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}