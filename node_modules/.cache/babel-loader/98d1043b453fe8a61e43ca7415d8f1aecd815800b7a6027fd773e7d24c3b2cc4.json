{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState } from 'react';\nexport const useOpenState = ({\n  onOpen,\n  onClose\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [openedWithKeyboard, setOpenedWithKeyboard] = useState(false);\n  const openDropdown = isKeyboard => {\n    if (!isOpen) {\n      setIsOpen(true);\n      setOpenedWithKeyboard(!!isKeyboard);\n      onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n    }\n  };\n  const closeDropdown = () => {\n    if (isOpen) {\n      setIsOpen(false);\n      onClose === null || onClose === void 0 ? void 0 : onClose();\n    }\n  };\n  const toggleDropdown = () => {\n    if (isOpen) {\n      closeDropdown();\n    } else {\n      openDropdown(false);\n    }\n  };\n  return {\n    isOpen,\n    openDropdown,\n    closeDropdown,\n    toggleDropdown,\n    openedWithKeyboard\n  };\n};","map":{"version":3,"names":["useState","useOpenState","onOpen","onClose","isOpen","setIsOpen","openedWithKeyboard","setOpenedWithKeyboard","openDropdown","isKeyboard","closeDropdown","toggleDropdown"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/internal/components/options-list/utils/use-open-state.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState } from 'react';\n\ninterface OpenStateProps {\n  onOpen?: () => void;\n  onClose?: () => void;\n}\n\nexport const useOpenState = ({ onOpen, onClose }: OpenStateProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [openedWithKeyboard, setOpenedWithKeyboard] = useState(false);\n\n  const openDropdown = (isKeyboard: boolean) => {\n    if (!isOpen) {\n      setIsOpen(true);\n      setOpenedWithKeyboard(!!isKeyboard);\n      onOpen?.();\n    }\n  };\n\n  const closeDropdown = () => {\n    if (isOpen) {\n      setIsOpen(false);\n      onClose?.();\n    }\n  };\n\n  const toggleDropdown = () => {\n    if (isOpen) {\n      closeDropdown();\n    } else {\n      openDropdown(false);\n    }\n  };\n\n  return { isOpen, openDropdown, closeDropdown, toggleDropdown, openedWithKeyboard };\n};\n"],"mappings":"AAAA;AACA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAOhC,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAO,CAAkB,KAAI;EAClE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACM,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMQ,YAAY,GAAIC,UAAmB,IAAI;IAC3C,IAAI,CAACL,MAAM,EAAE;MACXC,SAAS,CAAC,IAAI,CAAC;MACfE,qBAAqB,CAAC,CAAC,CAACE,UAAU,CAAC;MACnCP,MAAM,aAANA,MAAM,uBAANA,MAAM,EAAI;;EAEd,CAAC;EAED,MAAMQ,aAAa,GAAGA,CAAA,KAAK;IACzB,IAAIN,MAAM,EAAE;MACVC,SAAS,CAAC,KAAK,CAAC;MAChBF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,EAAI;;EAEf,CAAC;EAED,MAAMQ,cAAc,GAAGA,CAAA,KAAK;IAC1B,IAAIP,MAAM,EAAE;MACVM,aAAa,EAAE;KAChB,MAAM;MACLF,YAAY,CAAC,KAAK,CAAC;;EAEvB,CAAC;EAED,OAAO;IAAEJ,MAAM;IAAEI,YAAY;IAAEE,aAAa;IAAEC,cAAc;IAAEL;EAAkB,CAAE;AACpF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}