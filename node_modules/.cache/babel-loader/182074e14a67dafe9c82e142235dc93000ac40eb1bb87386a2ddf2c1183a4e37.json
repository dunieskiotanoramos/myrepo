{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nconst CONTENT_MIN_HEIGHT_BOUNDARY = 40;\nexport const CartesianChartContainer = forwardRef(({\n  minHeight,\n  fitHeight,\n  leftAxisLabel,\n  leftAxisLabelMeasure,\n  bottomAxisLabel,\n  chartPlot,\n  popover\n}, ref) => {\n  if (fitHeight) {\n    return React.createElement(\"div\", {\n      className: clsx(styles['chart-container'], styles['fit-height']),\n      ref: ref\n    }, leftAxisLabel, React.createElement(\"div\", {\n      className: clsx(styles['chart-container-outer'], styles['fit-height'])\n    }, leftAxisLabelMeasure, React.createElement(\"div\", {\n      className: styles['chart-container-inner']\n    }, React.createElement(\"div\", {\n      className: clsx(styles['chart-container-plot-wrapper'], styles['fit-height']),\n      style: {\n        minHeight: Math.max(minHeight, CONTENT_MIN_HEIGHT_BOUNDARY)\n      }\n    }, React.createElement(\"div\", {\n      className: clsx(styles['chart-container-plot'], styles['fit-height'])\n    }, chartPlot)), React.createElement(\"div\", {\n      className: clsx(styles['chart-container-bottom-labels'], styles['fit-height'])\n    }, bottomAxisLabel)), popover));\n  }\n  return React.createElement(\"div\", {\n    className: styles['chart-container'],\n    ref: ref\n  }, leftAxisLabel, React.createElement(\"div\", {\n    className: styles['chart-container-outer']\n  }, leftAxisLabelMeasure, React.createElement(\"div\", {\n    className: styles['chart-container-inner']\n  }, chartPlot, bottomAxisLabel), popover));\n});","map":{"version":3,"names":["React","forwardRef","clsx","styles","CONTENT_MIN_HEIGHT_BOUNDARY","CartesianChartContainer","minHeight","fitHeight","leftAxisLabel","leftAxisLabelMeasure","bottomAxisLabel","chartPlot","popover","ref","createElement","className","style","Math","max"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/internal/components/cartesian-chart/chart-container.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { forwardRef } from 'react';\nimport clsx from 'clsx';\n\nimport styles from './styles.css.js';\n\ninterface CartesianChartContainerProps {\n  minHeight: number;\n  fitHeight: boolean;\n  leftAxisLabel: React.ReactNode;\n  leftAxisLabelMeasure: React.ReactNode;\n  bottomAxisLabel: React.ReactNode;\n  chartPlot: React.ReactNode;\n  popover: React.ReactNode;\n}\n\nconst CONTENT_MIN_HEIGHT_BOUNDARY = 40;\n\nexport const CartesianChartContainer = forwardRef(\n  (\n    {\n      minHeight,\n      fitHeight,\n      leftAxisLabel,\n      leftAxisLabelMeasure,\n      bottomAxisLabel,\n      chartPlot,\n      popover,\n    }: CartesianChartContainerProps,\n    ref: React.Ref<HTMLDivElement>\n  ) => {\n    if (fitHeight) {\n      return (\n        <div className={clsx(styles['chart-container'], styles['fit-height'])} ref={ref}>\n          {leftAxisLabel}\n\n          <div className={clsx(styles['chart-container-outer'], styles['fit-height'])}>\n            {leftAxisLabelMeasure}\n\n            <div className={styles['chart-container-inner']}>\n              <div\n                className={clsx(styles['chart-container-plot-wrapper'], styles['fit-height'])}\n                style={{ minHeight: Math.max(minHeight, CONTENT_MIN_HEIGHT_BOUNDARY) }}\n              >\n                <div className={clsx(styles['chart-container-plot'], styles['fit-height'])}>{chartPlot}</div>\n              </div>\n\n              <div className={clsx(styles['chart-container-bottom-labels'], styles['fit-height'])}>\n                {bottomAxisLabel}\n              </div>\n            </div>\n\n            {popover}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={styles['chart-container']} ref={ref}>\n        {leftAxisLabel}\n\n        <div className={styles['chart-container-outer']}>\n          {leftAxisLabelMeasure}\n\n          <div className={styles['chart-container-inner']}>\n            {chartPlot}\n            {bottomAxisLabel}\n          </div>\n\n          {popover}\n        </div>\n      </div>\n    );\n  }\n);\n"],"mappings":"AAAA;AACA;AAEA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAOC,MAAM,MAAM,iBAAiB;AAYpC,MAAMC,2BAA2B,GAAG,EAAE;AAEtC,OAAO,MAAMC,uBAAuB,GAAGJ,UAAU,CAC/C,CACE;EACEK,SAAS;EACTC,SAAS;EACTC,aAAa;EACbC,oBAAoB;EACpBC,eAAe;EACfC,SAAS;EACTC;AAAO,CACsB,EAC/BC,GAA8B,KAC5B;EACF,IAAIN,SAAS,EAAE;IACb,OACEP,KAAA,CAAAc,aAAA;MAAKC,SAAS,EAAEb,IAAI,CAACC,MAAM,CAAC,iBAAiB,CAAC,EAAEA,MAAM,CAAC,YAAY,CAAC,CAAC;MAAEU,GAAG,EAAEA;IAAG,GAC5EL,aAAa,EAEdR,KAAA,CAAAc,aAAA;MAAKC,SAAS,EAAEb,IAAI,CAACC,MAAM,CAAC,uBAAuB,CAAC,EAAEA,MAAM,CAAC,YAAY,CAAC;IAAC,GACxEM,oBAAoB,EAErBT,KAAA,CAAAc,aAAA;MAAKC,SAAS,EAAEZ,MAAM,CAAC,uBAAuB;IAAC,GAC7CH,KAAA,CAAAc,aAAA;MACEC,SAAS,EAAEb,IAAI,CAACC,MAAM,CAAC,8BAA8B,CAAC,EAAEA,MAAM,CAAC,YAAY,CAAC,CAAC;MAC7Ea,KAAK,EAAE;QAAEV,SAAS,EAAEW,IAAI,CAACC,GAAG,CAACZ,SAAS,EAAEF,2BAA2B;MAAC;IAAE,GAEtEJ,KAAA,CAAAc,aAAA;MAAKC,SAAS,EAAEb,IAAI,CAACC,MAAM,CAAC,sBAAsB,CAAC,EAAEA,MAAM,CAAC,YAAY,CAAC;IAAC,GAAGQ,SAAS,CAAO,CACzF,EAENX,KAAA,CAAAc,aAAA;MAAKC,SAAS,EAAEb,IAAI,CAACC,MAAM,CAAC,+BAA+B,CAAC,EAAEA,MAAM,CAAC,YAAY,CAAC;IAAC,GAChFO,eAAe,CACZ,CACF,EAELE,OAAO,CACJ,CACF;;EAIV,OACEZ,KAAA,CAAAc,aAAA;IAAKC,SAAS,EAAEZ,MAAM,CAAC,iBAAiB,CAAC;IAAEU,GAAG,EAAEA;EAAG,GAChDL,aAAa,EAEdR,KAAA,CAAAc,aAAA;IAAKC,SAAS,EAAEZ,MAAM,CAAC,uBAAuB;EAAC,GAC5CM,oBAAoB,EAErBT,KAAA,CAAAc,aAAA;IAAKC,SAAS,EAAEZ,MAAM,CAAC,uBAAuB;EAAC,GAC5CQ,SAAS,EACTD,eAAe,CACZ,EAELE,OAAO,CACJ,CACF;AAEV,CAAC,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}