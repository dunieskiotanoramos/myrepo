{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport Icon from '../../icon/internal';\nimport styles from './styles.css.js';\nfunction TriggerButton({\n  ariaLabel,\n  className,\n  iconName,\n  iconSvg,\n  ariaExpanded,\n  ariaControls,\n  onClick,\n  testId,\n  badge,\n  selected = false,\n  highContrastHeader\n}, ref) {\n  return React.createElement(\"div\", {\n    className: clsx(styles['trigger-wrapper'], !highContrastHeader && styles['remove-high-contrast-header'])\n  }, React.createElement(\"button\", {\n    \"aria-expanded\": ariaExpanded,\n    \"aria-controls\": ariaControls,\n    \"aria-haspopup\": true,\n    \"aria-label\": ariaLabel,\n    className: clsx(styles.trigger, {\n      [styles.selected]: selected,\n      [styles.badge]: badge\n    }, className),\n    onClick: onClick,\n    ref: ref,\n    type: \"button\",\n    \"data-testid\": testId\n  }, React.createElement(\"span\", {\n    className: clsx(badge && styles['trigger-badge-wrapper'])\n  }, React.createElement(Icon, {\n    name: iconName,\n    svg: iconSvg\n  }))), badge && React.createElement(\"div\", {\n    className: styles.dot\n  }));\n}\nexport default React.forwardRef(TriggerButton);","map":{"version":3,"names":["React","clsx","Icon","styles","TriggerButton","ariaLabel","className","iconName","iconSvg","ariaExpanded","ariaControls","onClick","testId","badge","selected","highContrastHeader","ref","createElement","trigger","type","name","svg","dot","forwardRef"],"sources":["/Users/dootano/Desktop/thetekshow-demo-app/node_modules/src/app-layout/visual-refresh/trigger-button.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { ButtonProps } from '../../button/interfaces';\nimport { IconProps } from '../../icon/interfaces';\nimport Icon from '../../icon/internal';\n\nimport styles from './styles.css.js';\n\nexport interface TriggerButtonProps {\n  ariaLabel?: string;\n  className?: string;\n  iconName?: IconProps.Name;\n  iconSvg?: React.ReactNode;\n  ariaExpanded: boolean | undefined;\n  ariaControls?: string;\n  testId?: string;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  selected?: boolean;\n  badge?: boolean;\n  highContrastHeader?: boolean;\n}\n\nfunction TriggerButton(\n  {\n    ariaLabel,\n    className,\n    iconName,\n    iconSvg,\n    ariaExpanded,\n    ariaControls,\n    onClick,\n    testId,\n    badge,\n    selected = false,\n    highContrastHeader,\n  }: TriggerButtonProps,\n  ref: React.Ref<ButtonProps.Ref>\n) {\n  return (\n    <div className={clsx(styles['trigger-wrapper'], !highContrastHeader && styles['remove-high-contrast-header'])}>\n      <button\n        aria-expanded={ariaExpanded}\n        aria-controls={ariaControls}\n        aria-haspopup={true}\n        aria-label={ariaLabel}\n        className={clsx(\n          styles.trigger,\n          {\n            [styles.selected]: selected,\n            [styles.badge]: badge,\n          },\n          className\n        )}\n        onClick={onClick}\n        ref={ref as React.Ref<HTMLButtonElement>}\n        type=\"button\"\n        data-testid={testId}\n      >\n        <span className={clsx(badge && styles['trigger-badge-wrapper'])}>\n          <Icon name={iconName} svg={iconSvg} />\n        </span>\n      </button>\n      {badge && <div className={styles.dot} />}\n    </div>\n  );\n}\n\nexport default React.forwardRef(TriggerButton);\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAIvB,OAAOC,IAAI,MAAM,qBAAqB;AAEtC,OAAOC,MAAM,MAAM,iBAAiB;AAgBpC,SAASC,aAAaA,CACpB;EACEC,SAAS;EACTC,SAAS;EACTC,QAAQ;EACRC,OAAO;EACPC,YAAY;EACZC,YAAY;EACZC,OAAO;EACPC,MAAM;EACNC,KAAK;EACLC,QAAQ,GAAG,KAAK;EAChBC;AAAkB,CACC,EACrBC,GAA+B;EAE/B,OACEhB,KAAA,CAAAiB,aAAA;IAAKX,SAAS,EAAEL,IAAI,CAACE,MAAM,CAAC,iBAAiB,CAAC,EAAE,CAACY,kBAAkB,IAAIZ,MAAM,CAAC,6BAA6B,CAAC;EAAC,GAC3GH,KAAA,CAAAiB,aAAA;IAAA,iBACiBR,YAAY;IAAA,iBACZC,YAAY;IAAA,iBACZ,IAAI;IAAA,cACPL,SAAS;IACrBC,SAAS,EAAEL,IAAI,CACbE,MAAM,CAACe,OAAO,EACd;MACE,CAACf,MAAM,CAACW,QAAQ,GAAGA,QAAQ;MAC3B,CAACX,MAAM,CAACU,KAAK,GAAGA;KACjB,EACDP,SAAS,CACV;IACDK,OAAO,EAAEA,OAAO;IAChBK,GAAG,EAAEA,GAAmC;IACxCG,IAAI,EAAC,QAAQ;IAAA,eACAP;EAAM,GAEnBZ,KAAA,CAAAiB,aAAA;IAAMX,SAAS,EAAEL,IAAI,CAACY,KAAK,IAAIV,MAAM,CAAC,uBAAuB,CAAC;EAAC,GAC7DH,KAAA,CAAAiB,aAAA,CAACf,IAAI;IAACkB,IAAI,EAAEb,QAAQ;IAAEc,GAAG,EAAEb;EAAO,EAAI,CACjC,CACA,EACRK,KAAK,IAAIb,KAAA,CAAAiB,aAAA;IAAKX,SAAS,EAAEH,MAAM,CAACmB;EAAG,EAAI,CACpC;AAEV;AAEA,eAAetB,KAAK,CAACuB,UAAU,CAACnB,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}