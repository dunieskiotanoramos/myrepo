{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/table/index.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { AnalyticsFunnelSubStep } from '../internal/analytics/components/analytics-funnel';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { GeneratedAnalyticsMetadataTableComponent } from './analytics-metadata/interfaces';\nimport { getSortingColumnId } from './header-cell/utils';\nimport { TableForwardRefType, TableProps } from './interfaces';\nimport InternalTable, { InternalTableAsSubstep } from './internal';\n\nexport { TableProps };\nconst Table = React.forwardRef(\n  <T,>(\n    {\n      items = [],\n      selectedItems = [],\n      variant = 'container',\n      contentDensity = 'comfortable',\n      firstIndex = 1,\n      ...props\n    }: TableProps<T>,\n    ref: React.Ref<TableProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Table', {\n      props: {\n        contentDensity,\n        resizableColumns: props.resizableColumns,\n        selectionType: props.selectionType,\n        stickyHeader: props.stickyHeader,\n        stripedRows: props.stripedRows,\n        variant,\n        wrapLines: props.wrapLines,\n        enableKeyboardNavigation: props.enableKeyboardNavigation,\n      },\n      metadata: {\n        expandableRows: !!props.expandableRows,\n        progressiveLoading: !!props.getLoadingStatus,\n        inlineEdit: props.columnDefinitions.some(def => !!def.editConfig),\n        disabledInlineEdit: props.columnDefinitions.some(def => !!def.editConfig?.disabledReason),\n      },\n    });\n\n    const analyticsComponentMetadata: GeneratedAnalyticsMetadataTableComponent = {\n      name: 'awsui.Table',\n      label: '',\n      properties: {\n        selectionType: props.selectionType || 'none',\n        itemsCount: `${items.length}`,\n        selectedItemsCount: `${selectedItems.length}`,\n        variant,\n      },\n    };\n\n    const sortingColumnId = getSortingColumnId(props.columnDefinitions, props.sortingColumn);\n    if (sortingColumnId) {\n      analyticsComponentMetadata.properties.sortingColumnId = sortingColumnId;\n      analyticsComponentMetadata.properties.sortingDescending = `${props.sortingDescending || false}`;\n    }\n\n    const tableProps: Parameters<typeof InternalTable<T>>[0] = {\n      items,\n      selectedItems,\n      variant,\n      contentDensity,\n      firstIndex,\n      ...props,\n      ...baseComponentProps,\n      ref,\n      ...getAnalyticsMetadataAttribute({ component: analyticsComponentMetadata }),\n    };\n\n    if (variant === 'borderless' || variant === 'embedded') {\n      return <InternalTable {...tableProps} />;\n    }\n\n    return (\n      <AnalyticsFunnelSubStep>\n        <InternalTableAsSubstep {...tableProps} />\n      </AnalyticsFunnelSubStep>\n    );\n  }\n) as TableForwardRefType;\n\napplyDisplayName(Table, 'Table');\nexport default Table;\n"]}