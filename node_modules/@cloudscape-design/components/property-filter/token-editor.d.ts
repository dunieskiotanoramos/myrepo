/// <reference types="react" />
import { DropdownStatusProps } from '../internal/components/dropdown-status/interfaces';
import { NonCancelableEventHandler } from '../internal/events';
import { GroupText, I18nStrings, InternalFilteringOption, InternalFilteringProperty, InternalFreeTextFiltering, InternalToken, LoadItemsDetail, Token } from './interfaces';
interface TokenEditorProps {
    asyncProperties?: boolean;
    asyncProps: DropdownStatusProps;
    customGroupsText: readonly GroupText[];
    disabled?: boolean;
    freeTextFiltering: InternalFreeTextFiltering;
    filteringProperties: readonly InternalFilteringProperty[];
    filteringOptions: readonly InternalFilteringOption[];
    i18nStrings: I18nStrings;
    onLoadItems?: NonCancelableEventHandler<LoadItemsDetail>;
    setToken: (newToken: Token) => void;
    onDismiss: () => void;
    temporaryToken: InternalToken;
    onChangeTemporaryToken: (token: InternalToken) => void;
}
export declare function TokenEditor({ asyncProperties, asyncProps, customGroupsText, freeTextFiltering, filteringProperties, filteringOptions, i18nStrings, onLoadItems, setToken, onDismiss, temporaryToken, onChangeTemporaryToken, }: TokenEditorProps): JSX.Element;
export {};
//# sourceMappingURL=token-editor.d.ts.map