name: CICD

on:
  push:
    branches:
      - main

# jobs
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Login to Docker Hub
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI}}
        # run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker Image
        run: docker build -t ${{ secrets.ECR_REPO}} .
        #run: docker build -t dunieskiotano/tekshow-reactjs-app .
      - name: Tag image 
        run: docker tag ${{ secrets.ECR_REPO}}:latest {{ secrets.ECR_REPOSITORY_URI}}:latest
      - name: Push Image to ECR
        run: docker push {{ secrets.ECR_REPOSITORY_URI}}:latest
        #run: docker push dunieskiotano/tekshow-reactjs-app:latest   

# # deploy
#   deploy: 
#     needs: build
#     runs-on: amazon-ec2    
#     steps:
#       - name: Pull image from docker hub
#         run: docker pull dunieskiotano/tekshow-reactjs-app
#       - name: Delete Old Container
#         run: docker rm -f reactContainer
#       - name: Run docker container
#         run: docker run -d -p 3000:80 --name reactContainer dunieskiotano/tekshow-reactjs-app  